{"ast":null,"code":"var _jsxFileName = \"/Users/joshuakaufman/untitled folder 3/orchestrator/dashboard/client/src/cohort-pipeline/components/LifecycleRatesTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { LineChart, X, HelpCircle } from 'lucide-react';\nimport { LineChart as RechartsLineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LifecycleRatesTable = ({\n  data\n}) => {\n  _s();\n  var _data$data, _data$data2, _data$data2$structure, _data$data3, _data$structured_form;\n  const [globalSelectedProduct, setGlobalSelectedProduct] = useState(null);\n  const [showChartModal, setShowChartModal] = useState(false);\n  const [chartModalData, setChartModalData] = useState(null);\n  const [showBreakdownModal, setShowBreakdownModal] = useState(false);\n  const [breakdownModalData, setBreakdownModalData] = useState(null);\n\n  // Handle different data structures - debug mode vs regular mode\n  let lifecycleData = null;\n\n  // Debug: Log the actual data structure\n  console.log('LifecycleRatesTable received data:', data);\n  if (data !== null && data !== void 0 && (_data$data = data.data) !== null && _data$data !== void 0 && _data$data.lifecycle_rates) {\n    // Regular mode: data.data.lifecycle_rates\n    lifecycleData = data.data.lifecycle_rates;\n    console.log('Using regular mode lifecycle_rates:', lifecycleData);\n  } else if (data !== null && data !== void 0 && (_data$data2 = data.data) !== null && _data$data2 !== void 0 && (_data$data2$structure = _data$data2.structured_format) !== null && _data$data2$structure !== void 0 && _data$data2$structure.lifecycle_analysis) {\n    // Debug mode: data.data.structured_format.lifecycle_analysis\n    lifecycleData = data.data.structured_format.lifecycle_analysis;\n    console.log('Using debug mode structured_format.lifecycle_analysis:', lifecycleData);\n  } else if (data !== null && data !== void 0 && (_data$data3 = data.data) !== null && _data$data3 !== void 0 && _data$data3.legacy_format) {\n    // Debug mode: data.data.legacy_format (fallback)\n    const legacyData = data.data.legacy_format;\n    console.log('Using debug mode legacy_format:', legacyData);\n    lifecycleData = {\n      aggregate: {\n        trial_to_outcome: {\n          rates_by_day: legacyData.lifecycle_rates || {},\n          smoothing_method: legacyData.smoothing_method || 'none',\n          smoothing_quality: legacyData.smoothing_quality || 'N/A',\n          total_sample_size: legacyData.total_sample_size || 0\n        }\n      },\n      per_product: {},\n      metadata: {\n        calculation_method: 'legacy_format',\n        message: 'Data from legacy format'\n      }\n    };\n  } else if (data !== null && data !== void 0 && (_data$structured_form = data.structured_format) !== null && _data$structured_form !== void 0 && _data$structured_form.lifecycle_analysis) {\n    // Debug mode: structured_format.lifecycle_analysis (direct)\n    lifecycleData = data.structured_format.lifecycle_analysis;\n    console.log('Using direct structured_format.lifecycle_analysis:', lifecycleData);\n  } else if (data !== null && data !== void 0 && data.legacy_format) {\n    // Debug mode: legacy_format (direct)\n    const legacyData = data.legacy_format;\n    console.log('Using direct legacy_format:', legacyData);\n    lifecycleData = {\n      aggregate: {\n        trial_to_outcome: {\n          rates_by_day: legacyData.lifecycle_rates || {},\n          smoothing_method: legacyData.smoothing_method || 'none',\n          smoothing_quality: legacyData.smoothing_quality || 'N/A',\n          total_sample_size: legacyData.total_sample_size || 0\n        }\n      },\n      per_product: {},\n      metadata: {\n        calculation_method: 'legacy_format',\n        message: 'Data from legacy format'\n      }\n    };\n  }\n  console.log('Final lifecycleData:', lifecycleData);\n  if (!lifecycleData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-8\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500 dark:text-gray-400\",\n        children: \"No lifecycle data available. Run an analysis to see results.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  }\n\n  // The backend returns: { aggregate: { trial_to_outcome: {...}, ... }, per_product: { product_id: { trial_to_outcome: {...}, ... } } }\n  const aggregate = lifecycleData.aggregate || {};\n  const perProduct = lifecycleData.per_product || {};\n  console.log('Aggregate data:', aggregate);\n  console.log('Per product data:', perProduct);\n\n  // Function to extract lookback information from rate calculation data\n  const extractLookbackInfo = (rateCalculationData, tableTitle) => {\n    // The backend stores lookback info in the rate calculation results\n    // Look for extension_days_used and user count breakdown\n\n    if (!rateCalculationData) return null;\n\n    // Check if this is the new product-based format from lifecycle_calculator.py\n    const aggregateRates = rateCalculationData.aggregate_rates;\n    const extensionInfo = rateCalculationData.extension_info;\n    if (aggregateRates && extensionInfo) {\n      // Extract extension information from the backend data\n      const extensionDays = aggregateRates.extension_days_used || (extensionInfo === null || extensionInfo === void 0 ? void 0 : extensionInfo.extension_days_used) || 0;\n      const totalSampleSize = aggregateRates.total_sample_size || (extensionInfo === null || extensionInfo === void 0 ? void 0 : extensionInfo.total_sample_size) || 0;\n      const attempts = aggregateRates.extension_attempts || (extensionInfo === null || extensionInfo === void 0 ? void 0 : extensionInfo.attempts_made) || 1;\n      const perProductInfo = (extensionInfo === null || extensionInfo === void 0 ? void 0 : extensionInfo.per_product_info) || {};\n      if (extensionDays > 0 && Object.keys(perProductInfo).length > 0) {\n        // Use real per-product breakdown from backend\n        let breakdown = {};\n\n        // Aggregate the breakdown from per-product info\n        Object.values(perProductInfo).forEach(productInfo => {\n          const extensionDays = productInfo.extension_days_used || 0;\n          const sampleSize = productInfo.final_sample_size || 0;\n          if (extensionDays === 0) {\n            breakdown['0'] = (breakdown['0'] || 0) + sampleSize;\n          } else if (extensionDays === 30) {\n            breakdown['30'] = (breakdown['30'] || 0) + sampleSize;\n          } else if (extensionDays === 60) {\n            breakdown['60'] = (breakdown['60'] || 0) + sampleSize;\n          }\n        });\n        return {\n          extensionDays,\n          totalSize: totalSampleSize,\n          breakdown,\n          attempts,\n          perProductInfo\n        };\n      }\n    }\n    return null;\n  };\n\n  // Function to simulate lookback information based on typical patterns (fallback only)\n  const simulateLookbackInfo = (ratesData, tableTitle) => {\n    var _ratesData$aggregate_;\n    // This is now only used as a fallback when backend data is not available\n    const sampleSize = (ratesData === null || ratesData === void 0 ? void 0 : (_ratesData$aggregate_ = ratesData.aggregate_rates) === null || _ratesData$aggregate_ === void 0 ? void 0 : _ratesData$aggregate_.total_sample_size) || (ratesData === null || ratesData === void 0 ? void 0 : ratesData.total_sample_size) || 0;\n\n    // Only simulate for very specific cases where we know lookback is typically needed\n    if (tableTitle.includes('Renewal') && sampleSize < 10) {\n      return {\n        extensionDays: 60,\n        totalSize: sampleSize,\n        breakdown: {\n          '0': Math.floor(sampleSize * 0.3),\n          '30': Math.floor(sampleSize * 0.3),\n          '60': Math.floor(sampleSize * 0.4)\n        }\n      };\n    }\n    return null;\n  };\n\n  // Function to render sample size with lookback information\n  const renderSampleSizeInfo = (displayRates, globalSelectedProduct, tableTitle, rateCalculationData, isShowingProductData, isShowingFallbackData) => {\n    const sampleSize = displayRates.total_sample_size || 0;\n    const lookbackInfo = extractLookbackInfo(rateCalculationData, tableTitle);\n\n    // Check if we have product data but it's below threshold\n    let productSampleSize = 0;\n    let isBelowThreshold = false;\n    if (globalSelectedProduct && rateCalculationData.rates_by_product && rateCalculationData.rates_by_product[globalSelectedProduct]) {\n      productSampleSize = rateCalculationData.rates_by_product[globalSelectedProduct].total_sample_size || 0;\n      isBelowThreshold = productSampleSize > 0 && productSampleSize < 10;\n    }\n\n    // Get the actual extension days used for the current display\n    let actualExtensionDays = 0;\n    if (isShowingProductData && globalSelectedProduct && rateCalculationData.rates_by_product && rateCalculationData.rates_by_product[globalSelectedProduct]) {\n      actualExtensionDays = rateCalculationData.rates_by_product[globalSelectedProduct].extension_days_used || 0;\n    } else if (!isShowingProductData && rateCalculationData.aggregate_rates) {\n      actualExtensionDays = rateCalculationData.aggregate_rates.extension_days_used || 0;\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 p-3 bg-gray-50 dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-600 dark:text-gray-400\",\n          children: [\"Based on \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-semibold text-gray-900 dark:text-white\",\n            children: sampleSize\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 34\n          }, this), \" users\", isShowingProductData && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 text-green-600 dark:text-green-400\",\n            children: [\"(Product: \", globalSelectedProduct, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 29\n          }, this), isShowingFallbackData && !isBelowThreshold && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 text-orange-600 dark:text-orange-400\",\n            children: [\"(Aggregate data - \", globalSelectedProduct, \" has no data for this lifecycle)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 29\n          }, this), isShowingFallbackData && isBelowThreshold && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 text-orange-600 dark:text-orange-400\",\n            children: [\"(Aggregate data - \", globalSelectedProduct, \" has only \", productSampleSize, \" users, minimum 10 required)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 29\n          }, this), !globalSelectedProduct && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 text-blue-600 dark:text-blue-400\",\n            children: \"(All Products - Aggregate)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => openBreakdownModal(tableTitle, rateCalculationData),\n          className: \"ml-2 p-1 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 transition-colors\",\n          title: \"View detailed breakdown by product\",\n          children: /*#__PURE__*/_jsxDEV(HelpCircle, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), actualExtensionDays > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 p-2 bg-yellow-50 dark:bg-yellow-900/30 rounded border border-yellow-200 dark:border-yellow-700\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-yellow-800 dark:text-yellow-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Lookback Applied:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 29\n          }, this), \" Extended \", actualExtensionDays, \" days to capture more starter events\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 25\n        }, this), lookbackInfo && lookbackInfo.breakdown && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-1 text-xs text-yellow-700 dark:text-yellow-300\",\n          children: Object.entries(lookbackInfo.breakdown).map(([days, count]) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mr-3\",\n            children: [days === '0' ? 'Base period' : `+${days} days`, \": \", count, \" users\"]\n          }, days, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this);\n  };\n\n  // Get all available product IDs from lifecycle rates\n  const getAllAvailableProducts = () => {\n    const allAvailableProducts = new Set();\n\n    // Check per_product structure first (correct structure from lifecycle_calculator.py)\n    if (perProduct && Object.keys(perProduct).length > 0) {\n      Object.keys(perProduct).forEach(productId => {\n        allAvailableProducts.add(productId);\n      });\n    }\n\n    // Also check aggregate rates for product-based data\n    if (aggregate && typeof aggregate === 'object') {\n      Object.values(aggregate).forEach(rateData => {\n        if (rateData && rateData.rates_by_product) {\n          Object.keys(rateData.rates_by_product).forEach(productId => {\n            allAvailableProducts.add(productId);\n          });\n        }\n      });\n    }\n    return Array.from(allAvailableProducts).sort();\n  };\n  const productList = getAllAvailableProducts();\n\n  // Function to open chart modal\n  const openChartModal = (title, ratesData) => {\n    setChartModalData({\n      title,\n      ratesData\n    });\n    setShowChartModal(true);\n  };\n\n  // Function to close chart modal\n  const closeChartModal = () => {\n    setChartModalData(null);\n    setShowChartModal(false);\n  };\n\n  // Function to open breakdown modal\n  const openBreakdownModal = (title, rateCalculationData) => {\n    setBreakdownModalData({\n      title,\n      rateCalculationData\n    });\n    setShowBreakdownModal(true);\n  };\n\n  // Function to close breakdown modal\n  const closeBreakdownModal = () => {\n    setBreakdownModalData(null);\n    setShowBreakdownModal(false);\n  };\n\n  // Function to render lifecycle table with precise requirements\n  const renderLifecycleTable = (title, ratesData, denominatorKey = \"rate_denominator_count\") => {\n    if (!ratesData) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 p-3 bg-gray-50 dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-sm font-medium text-gray-900 dark:text-white\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xs text-gray-500 dark:text-gray-400\",\n            children: \"No data available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }, this);\n    }\n\n    // Determine table type from title to show only relevant metrics\n    const isCancellationTable = title.toLowerCase().includes('cancelled');\n    const isRefundTable = title.toLowerCase().includes('refund');\n    const isTrialOutcomeTable = title.toLowerCase().includes('trial started');\n\n    // Handle the correct data structure from lifecycle_calculator.py\n    // The backend now returns complete rate calculation data including extension_info\n\n    console.log('renderLifecycleTable - title:', title, 'ratesData:', ratesData);\n\n    // Check if we have the new complete structure or the old direct structure\n    let aggregateRates, ratesByProduct, rateExtensionInfo;\n    if (ratesData.aggregate_rates) {\n      // New complete structure\n      aggregateRates = ratesData.aggregate_rates;\n      ratesByProduct = ratesData.rates_by_product || {};\n      rateExtensionInfo = ratesData.extension_info || {};\n    } else {\n      // Old direct structure (fallback)\n      aggregateRates = ratesData;\n      ratesByProduct = {};\n      rateExtensionInfo = {};\n    }\n\n    // Get per-product data for this specific rate type\n    const currentTableKey = title.toLowerCase().includes('trial started') ? 'trial_to_outcome' : title.toLowerCase().includes('trial converted') && title.toLowerCase().includes('cancelled') ? 'trial_converted_to_cancellation' : title.toLowerCase().includes('trial converted') && title.toLowerCase().includes('refund') ? 'trial_converted_to_refund' : title.toLowerCase().includes('initial purchase') && title.toLowerCase().includes('cancelled') ? 'initial_purchase_to_cancellation' : title.toLowerCase().includes('initial purchase') && title.toLowerCase().includes('refund') ? 'initial_purchase_to_refund' : title.toLowerCase().includes('renewal') && title.toLowerCase().includes('cancelled') ? 'renewal_to_cancellation' : title.toLowerCase().includes('renewal') && title.toLowerCase().includes('refund') ? 'renewal_to_refund' : null;\n\n    // For the new structure, we already have the rates_by_product for this specific lifecycle type\n    // For the old structure, we need to get it from the per-product data\n    if (!ratesData.aggregate_rates && currentTableKey) {\n      Object.keys(perProduct).forEach(productId => {\n        if (perProduct[productId][currentTableKey]) {\n          ratesByProduct[productId] = perProduct[productId][currentTableKey];\n        }\n      });\n    }\n    if (!aggregateRates || !aggregateRates.rates_by_day || Object.keys(aggregateRates.rates_by_day).length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 p-3 bg-gray-50 dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-sm font-medium text-gray-900 dark:text-white\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xs text-gray-500 dark:text-gray-400\",\n            children: \"No data available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 17\n      }, this);\n    }\n\n    // Use global product selection to determine which rates to display\n    // If a product is selected but doesn't have data for this lifecycle type, fall back to aggregate\n    let displayRates = aggregateRates;\n    let isShowingProductData = false;\n    let isShowingFallbackData = false;\n    if (globalSelectedProduct) {\n      // Add null checks to prevent undefined access errors\n      if (ratesByProduct && ratesByProduct[globalSelectedProduct]) {\n        const productSampleSize = ratesByProduct[globalSelectedProduct].total_sample_size || 0;\n\n        // Only show product-specific data if it has at least 10 users\n        if (productSampleSize >= 10) {\n          // Product has sufficient data for this lifecycle type\n          displayRates = ratesByProduct[globalSelectedProduct];\n          isShowingProductData = true;\n        } else {\n          // Product has data but insufficient sample size - use aggregate as fallback\n          displayRates = aggregateRates;\n          isShowingFallbackData = true;\n        }\n      } else {\n        // Product selected but no data for this lifecycle type - use aggregate as fallback\n        displayRates = aggregateRates;\n        isShowingFallbackData = true;\n      }\n    }\n    const ratesByDay = displayRates.rates_by_day;\n    const sortedDays = Object.keys(ratesByDay).map(Number).sort((a, b) => a - b);\n\n    // Get sample size for display\n    const sampleSize = displayRates.total_sample_size || 0;\n\n    // Create a mock rateCalculationData structure for the lookback info function\n    // But use real extension info from the backend if available\n    let extensionInfo = {\n      extension_days_used: displayRates.extension_days_used || 0,\n      total_sample_size: sampleSize,\n      attempts_made: displayRates.extension_attempts || 1,\n      per_product_info: {}\n    };\n\n    // Use real extension info from the backend if available\n    if (rateExtensionInfo && Object.keys(rateExtensionInfo).length > 0) {\n      extensionInfo = rateExtensionInfo;\n    }\n\n    // If we have a selected product, make sure its info is included\n    if (globalSelectedProduct && ratesByProduct[globalSelectedProduct]) {\n      const productRates = ratesByProduct[globalSelectedProduct];\n      if (!extensionInfo.per_product_info[globalSelectedProduct]) {\n        extensionInfo.per_product_info[globalSelectedProduct] = {\n          extension_days_used: productRates.extension_days_used || 0,\n          final_sample_size: productRates.total_sample_size || 0,\n          attempts_made: productRates.extension_attempts || 1,\n          user_counts_by_step: productRates.user_counts_by_step || {}\n        };\n      }\n    }\n    const mockRateCalculationData = {\n      aggregate_rates: displayRates,\n      rates_by_product: ratesByProduct,\n      extension_info: extensionInfo\n    };\n\n    // Prepare row data based on table type - only 4 rows per table\n    let rowData = [];\n    if (isTrialOutcomeTable) {\n      // Trial Started table - show only cancellation metrics\n      rowData = [{\n        metric: \"Raw Daily Cancellation %\",\n        dataKey: \"raw_daily_cancellation_rate\",\n        bgClass: \"bg-red-50 dark:bg-red-900/20\",\n        textClass: \"text-red-700 dark:text-red-300\"\n      }, {\n        metric: \"Smoothed Daily Cancellation %\",\n        dataKey: \"smoothed_daily_cancellation_rate\",\n        bgClass: \"bg-red-100 dark:bg-red-900/30\",\n        textClass: \"text-red-800 dark:text-red-200\"\n      }, {\n        metric: \"Raw Cumulative Cancellation %\",\n        dataKey: \"raw_cumulative_cancellation_rate\",\n        bgClass: \"bg-red-150 dark:bg-red-900/40\",\n        textClass: \"text-red-800 dark:text-red-200\"\n      }, {\n        metric: \"Smoothed Cumulative Cancellation %\",\n        dataKey: \"smoothed_cumulative_cancellation_rate\",\n        bgClass: \"bg-red-200 dark:bg-red-900/50\",\n        textClass: \"text-red-900 dark:text-red-100\"\n      }];\n    } else if (isCancellationTable) {\n      // Cancellation table - red theme\n      rowData = [{\n        metric: \"Raw Daily Cancellation %\",\n        dataKey: \"raw_daily_cancellation_rate\",\n        bgClass: \"bg-red-50 dark:bg-red-900/20\",\n        textClass: \"text-red-700 dark:text-red-300\"\n      }, {\n        metric: \"Smoothed Daily Cancellation %\",\n        dataKey: \"smoothed_daily_cancellation_rate\",\n        bgClass: \"bg-red-100 dark:bg-red-900/30\",\n        textClass: \"text-red-800 dark:text-red-200\"\n      }, {\n        metric: \"Raw Cumulative Cancellation %\",\n        dataKey: \"raw_cumulative_cancellation_rate\",\n        bgClass: \"bg-red-150 dark:bg-red-900/40\",\n        textClass: \"text-red-800 dark:text-red-200\"\n      }, {\n        metric: \"Smoothed Cumulative Cancellation %\",\n        dataKey: \"smoothed_cumulative_cancellation_rate\",\n        bgClass: \"bg-red-200 dark:bg-red-900/50\",\n        textClass: \"text-red-900 dark:text-red-100\"\n      }];\n    } else if (isRefundTable) {\n      // Refund table - blue theme\n      rowData = [{\n        metric: \"Raw Daily Refund %\",\n        dataKey: \"raw_daily_refund_rate\",\n        bgClass: \"bg-blue-50 dark:bg-blue-900/20\",\n        textClass: \"text-blue-700 dark:text-blue-300\"\n      }, {\n        metric: \"Smoothed Daily Refund %\",\n        dataKey: \"smoothed_daily_refund_rate\",\n        bgClass: \"bg-blue-100 dark:bg-blue-900/30\",\n        textClass: \"text-blue-800 dark:text-blue-200\"\n      }, {\n        metric: \"Raw Cumulative Refund %\",\n        dataKey: \"raw_cumulative_refund_rate\",\n        bgClass: \"bg-blue-150 dark:bg-blue-900/40\",\n        textClass: \"text-blue-800 dark:text-blue-200\"\n      }, {\n        metric: \"Smoothed Cumulative Refund %\",\n        dataKey: \"smoothed_cumulative_refund_rate\",\n        bgClass: \"bg-blue-200 dark:bg-blue-900/50\",\n        textClass: \"text-blue-900 dark:text-blue-100\"\n      }];\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-lg font-semibold text-gray-900 dark:text-white\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => openChartModal(title, ratesData),\n          className: \"px-3 py-1 bg-blue-600 hover:bg-blue-700 text-white text-sm rounded-md transition-colors duration-200 flex items-center space-x-1\",\n          children: [/*#__PURE__*/_jsxDEV(LineChart, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 17\n      }, this), renderSampleSizeInfo(displayRates, globalSelectedProduct, title, mockRateCalculationData, isShowingProductData, isShowingFallbackData), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 p-3 bg-blue-50 dark:bg-blue-900/30 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"font-semibold text-blue-800 dark:text-blue-200 mb-2\",\n          children: \"Smoothing Method Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm text-blue-700 dark:text-blue-300\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Method:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 32\n              }, this), \" \", displayRates.smoothing_method || 'none']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Quality:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 32\n              }, this), \" \", displayRates.smoothing_quality || 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Sample Size:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 32\n              }, this), \" \", sampleSize]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 25\n          }, this), displayRates.smoothing_details && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Data Characteristics:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"ml-4 mt-1\",\n              children: displayRates.smoothing_details.cancellation && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [\"Early Concentration: \", displayRates.smoothing_details.cancellation.early_concentration]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 541,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [\"Sparsity: \", displayRates.smoothing_details.cancellation.sparsity]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 542,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [\"Max Rate: \", displayRates.smoothing_details.cancellation.max_rate]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 543,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border border-gray-200 dark:border-gray-700 rounded-lg overflow-hidden\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-50 dark:bg-gray-800 border-r border-gray-200 dark:border-gray-700\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"px-4 py-3 font-medium text-gray-900 dark:text-white border-b border-gray-200 dark:border-gray-700\",\n              children: \"Metric\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 29\n            }, this), rowData.map((row, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `px-4 py-3 text-sm border-b border-gray-200 dark:border-gray-700 ${row.bgClass} ${row.textClass} font-medium`,\n              children: row.metric\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 overflow-x-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex\",\n              children: sortedDays.map(day => {\n                const dayStr = day.toString();\n                const dayData = ratesByDay[dayStr];\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"min-w-[100px] border-r border-gray-200 dark:border-gray-700 last:border-r-0\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"px-4 py-3 bg-gray-50 dark:bg-gray-800 font-medium text-gray-900 dark:text-white text-center border-b border-gray-200 dark:border-gray-700\",\n                    children: [\"Day \", day]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 577,\n                    columnNumber: 45\n                  }, this), rowData.map((row, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `px-4 py-3 text-sm text-center border-b border-gray-200 dark:border-gray-700 ${row.bgClass} ${row.textClass}`,\n                    children: [dayData ? (dayData[row.dataKey] || 0).toFixed(2) : '0.00', \"%\"]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 583,\n                    columnNumber: 49\n                  }, this))]\n                }, dayStr, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 575,\n                  columnNumber: 41\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 13\n    }, this);\n  };\n\n  // Chart Modal Component\n  const ChartModal = () => {\n    if (!chartModalData) return null;\n    const {\n      title,\n      ratesData\n    } = chartModalData;\n\n    // Determine table type from title\n    const isCancellationTable = title.toLowerCase().includes('cancelled');\n    const isRefundTable = title.toLowerCase().includes('refund');\n    const isTrialOutcomeTable = title.toLowerCase().includes('trial started');\n    const prepareChartData = () => {\n      // Handle the correct data structure from lifecycle_calculator.py\n      // ratesData might be the complete structure with aggregate_rates, rates_by_product, etc.\n      // OR it might be the direct rates data\n\n      console.log('Chart ratesData:', ratesData);\n\n      // Determine the correct rates to use based on current product selection and data structure\n      let displayRates = null;\n      if (ratesData.aggregate_rates) {\n        // New complete structure - use the same logic as the table\n        const aggregateRates = ratesData.aggregate_rates;\n        const ratesByProduct = ratesData.rates_by_product || {};\n        if (globalSelectedProduct && ratesByProduct[globalSelectedProduct]) {\n          const productSampleSize = ratesByProduct[globalSelectedProduct].total_sample_size || 0;\n          if (productSampleSize >= 10) {\n            displayRates = ratesByProduct[globalSelectedProduct];\n          } else {\n            displayRates = aggregateRates;\n          }\n        } else {\n          displayRates = aggregateRates;\n        }\n      } else if (ratesData.rates_by_day) {\n        // Direct rates structure\n        displayRates = ratesData;\n      } else {\n        console.log('No valid rates structure found in:', ratesData);\n        return [];\n      }\n      if (!displayRates || !displayRates.rates_by_day) {\n        console.log('No rates_by_day found in displayRates:', displayRates);\n        return [];\n      }\n      const ratesByDay = displayRates.rates_by_day;\n      const sortedDays = Object.keys(ratesByDay).map(Number).sort((a, b) => a - b);\n      console.log('Chart sortedDays:', sortedDays);\n      console.log('Chart ratesByDay sample:', ratesByDay[sortedDays[0]]);\n      return sortedDays.map(day => {\n        const dayData = ratesByDay[day.toString()];\n        const chartPoint = {\n          day\n        };\n        if (isTrialOutcomeTable) {\n          // Trial Started table - show only cancellation metrics\n          chartPoint.rawDailyCancellation = (dayData === null || dayData === void 0 ? void 0 : dayData.raw_daily_cancellation_rate) || 0;\n          chartPoint.smoothedDailyCancellation = (dayData === null || dayData === void 0 ? void 0 : dayData.smoothed_daily_cancellation_rate) || 0;\n          chartPoint.rawCumulativeCancellation = (dayData === null || dayData === void 0 ? void 0 : dayData.raw_cumulative_cancellation_rate) || 0;\n          chartPoint.smoothedCumulativeCancellation = (dayData === null || dayData === void 0 ? void 0 : dayData.smoothed_cumulative_cancellation_rate) || 0;\n\n          // Add conversion probability data for trial-to-outcome tables\n          chartPoint.conversionProbabilityFromDayOnward = ((dayData === null || dayData === void 0 ? void 0 : dayData.conversion_probability_from_day_onward) || 0) * 100; // Convert to percentage\n          chartPoint.survivalProbabilityThisDay = ((dayData === null || dayData === void 0 ? void 0 : dayData.survival_probability_this_day) || 0) * 100; // Convert to percentage\n        } else if (isCancellationTable) {\n          // Only cancellation metrics for cancellation tables\n          chartPoint.rawDailyCancellation = (dayData === null || dayData === void 0 ? void 0 : dayData.raw_daily_cancellation_rate) || 0;\n          chartPoint.smoothedDailyCancellation = (dayData === null || dayData === void 0 ? void 0 : dayData.smoothed_daily_cancellation_rate) || 0;\n          chartPoint.rawCumulativeCancellation = (dayData === null || dayData === void 0 ? void 0 : dayData.raw_cumulative_cancellation_rate) || 0;\n          chartPoint.smoothedCumulativeCancellation = (dayData === null || dayData === void 0 ? void 0 : dayData.smoothed_cumulative_cancellation_rate) || 0;\n        } else if (isRefundTable) {\n          // Only refund metrics for refund tables\n          chartPoint.rawDailyRefund = (dayData === null || dayData === void 0 ? void 0 : dayData.raw_daily_refund_rate) || 0;\n          chartPoint.smoothedDailyRefund = (dayData === null || dayData === void 0 ? void 0 : dayData.smoothed_daily_refund_rate) || 0;\n          chartPoint.rawCumulativeRefund = (dayData === null || dayData === void 0 ? void 0 : dayData.raw_cumulative_refund_rate) || 0;\n          chartPoint.smoothedCumulativeRefund = (dayData === null || dayData === void 0 ? void 0 : dayData.smoothed_cumulative_refund_rate) || 0;\n\n          // Add refund probability data for refund tables\n          chartPoint.totalRefundProbability = ((dayData === null || dayData === void 0 ? void 0 : dayData.total_refund_probability) || 0) * 100; // Convert to percentage\n          chartPoint.noRefundProbability = ((dayData === null || dayData === void 0 ? void 0 : dayData.no_refund_probability) || 0) * 100; // Convert to percentage\n        }\n        return chartPoint;\n      });\n    };\n    const customTooltip = ({\n      active,\n      payload,\n      label\n    }) => {\n      if (active && payload && payload.length) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white dark:bg-gray-800 p-3 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-semibold text-gray-900 dark:text-white\",\n            children: `Day ${label}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 25\n          }, this), payload.map((entry, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: entry.color\n            },\n            className: \"text-sm\",\n            children: `${entry.name}: ${entry.value.toFixed(2)}%`\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 695,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 21\n        }, this);\n      }\n      return null;\n    };\n    const chartData = prepareChartData();\n\n    // Define lines based on table type\n    const getChartLines = () => {\n      if (isTrialOutcomeTable) {\n        return [{\n          dataKey: 'rawDailyCancellation',\n          name: 'Raw Daily Cancellation',\n          stroke: '#dc2626',\n          strokeDasharray: '0'\n        }, {\n          dataKey: 'smoothedDailyCancellation',\n          name: 'Smoothed Daily Cancellation',\n          stroke: '#dc2626',\n          strokeDasharray: '5 5'\n        }, {\n          dataKey: 'rawCumulativeCancellation',\n          name: 'Raw Cumulative Cancellation',\n          stroke: '#b91c1c',\n          strokeDasharray: '0'\n        }, {\n          dataKey: 'smoothedCumulativeCancellation',\n          name: 'Smoothed Cumulative Cancellation',\n          stroke: '#b91c1c',\n          strokeDasharray: '5 5'\n        }];\n      } else if (isCancellationTable) {\n        return [{\n          dataKey: 'rawDailyCancellation',\n          name: 'Raw Daily Cancellation',\n          stroke: '#dc2626',\n          strokeDasharray: '0'\n        }, {\n          dataKey: 'smoothedDailyCancellation',\n          name: 'Smoothed Daily Cancellation',\n          stroke: '#dc2626',\n          strokeDasharray: '5 5'\n        }, {\n          dataKey: 'rawCumulativeCancellation',\n          name: 'Raw Cumulative Cancellation',\n          stroke: '#b91c1c',\n          strokeDasharray: '0'\n        }, {\n          dataKey: 'smoothedCumulativeCancellation',\n          name: 'Smoothed Cumulative Cancellation',\n          stroke: '#b91c1c',\n          strokeDasharray: '5 5'\n        }];\n      } else if (isRefundTable) {\n        return [{\n          dataKey: 'rawDailyRefund',\n          name: 'Raw Daily Refund',\n          stroke: '#2563eb',\n          strokeDasharray: '0'\n        }, {\n          dataKey: 'smoothedDailyRefund',\n          name: 'Smoothed Daily Refund',\n          stroke: '#2563eb',\n          strokeDasharray: '5 5'\n        }, {\n          dataKey: 'rawCumulativeRefund',\n          name: 'Raw Cumulative Refund',\n          stroke: '#1d4ed8',\n          strokeDasharray: '0'\n        }, {\n          dataKey: 'smoothedCumulativeRefund',\n          name: 'Smoothed Cumulative Refund',\n          stroke: '#1d4ed8',\n          strokeDasharray: '5 5'\n        }];\n      }\n      return [];\n    };\n\n    // Define conversion probability lines for trial-to-outcome tables\n    const getConversionProbabilityLines = () => {\n      if (isTrialOutcomeTable) {\n        return [{\n          dataKey: 'conversionProbabilityFromDayOnward',\n          name: 'Conversion Probability from Day Onward',\n          stroke: '#059669',\n          strokeDasharray: '0',\n          strokeWidth: 3\n        }, {\n          dataKey: 'survivalProbabilityThisDay',\n          name: 'Daily Survival Probability',\n          stroke: '#10b981',\n          strokeDasharray: '5 5',\n          strokeWidth: 2\n        }];\n      }\n      return [];\n    };\n\n    // Define refund probability lines for refund tables\n    const getRefundProbabilityLines = () => {\n      if (isRefundTable) {\n        return [{\n          dataKey: 'totalRefundProbability',\n          name: 'Total Refund Probability',\n          stroke: '#dc2626',\n          strokeDasharray: '0',\n          strokeWidth: 3\n        }, {\n          dataKey: 'noRefundProbability',\n          name: 'No Refund Probability (Retention)',\n          stroke: '#059669',\n          strokeDasharray: '5 5',\n          strokeWidth: 3\n        }];\n      }\n      return [];\n    };\n    const chartLines = getChartLines();\n    const conversionProbabilityLines = getConversionProbabilityLines();\n    const refundProbabilityLines = getRefundProbabilityLines();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-6xl w-full max-h-[90vh] overflow-y-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-xl font-semibold text-gray-900 dark:text-white\",\n              children: [title, \" - Lifecycle Charts\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 766,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: closeChartModal,\n              className: \"text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\",\n              children: /*#__PURE__*/_jsxDEV(X, {\n                size: 24\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 773,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 769,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 765,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6 p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm font-medium text-gray-900 dark:text-white\",\n                children: [\"Current Filter: \", globalSelectedProduct || 'All Products (Aggregate)']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 780,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs text-gray-600 dark:text-gray-400\",\n                children: \"Use the main product toggle to change filter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 783,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 779,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 778,\n            columnNumber: 25\n          }, this), chartData.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-8\",\n            children: [isTrialOutcomeTable && conversionProbabilityLines.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"text-lg font-semibold text-gray-900 dark:text-white mb-4\",\n                children: \"\\uD83C\\uDFAF Revenue Estimation: Conversion Probabilities\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 794,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-4 p-3 bg-green-50 dark:bg-green-900/30 rounded-lg\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-green-800 dark:text-green-200\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Conversion Probability from Day Onward:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 799,\n                    columnNumber: 49\n                  }, this), \" Shows the likelihood that a user on day X will convert by the end of the trial. This is used in revenue estimation: \", /*#__PURE__*/_jsxDEV(\"code\", {\n                    children: \"Expected Revenue = P_convert(x) \\xD7 P_not_refunded \\xD7 ARPU\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 800,\n                    columnNumber: 85\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 798,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 797,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"h-80\",\n                children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                  width: \"100%\",\n                  height: \"100%\",\n                  children: /*#__PURE__*/_jsxDEV(RechartsLineChart, {\n                    data: chartData,\n                    children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                      strokeDasharray: \"3 3\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 806,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                      dataKey: \"day\",\n                      label: {\n                        value: 'Trial Day',\n                        position: 'insideBottom',\n                        offset: -5\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 807,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                      label: {\n                        value: 'Probability (%)',\n                        angle: -90,\n                        position: 'insideLeft'\n                      },\n                      domain: [0, 100]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 811,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                      content: customTooltip\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 815,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 816,\n                      columnNumber: 53\n                    }, this), conversionProbabilityLines.map((line, index) => /*#__PURE__*/_jsxDEV(Line, {\n                      type: \"monotone\",\n                      dataKey: line.dataKey,\n                      stroke: line.stroke,\n                      strokeDasharray: line.strokeDasharray,\n                      name: line.name,\n                      strokeWidth: line.strokeWidth || 2,\n                      dot: {\n                        r: 4\n                      }\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 818,\n                      columnNumber: 57\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 805,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 804,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 803,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 793,\n              columnNumber: 37\n            }, this), isRefundTable && refundProbabilityLines.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"text-lg font-semibold text-gray-900 dark:text-white mb-4\",\n                children: \"\\uD83D\\uDCB0 Revenue Estimation: Refund Probabilities\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 838,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-4 p-3 bg-blue-50 dark:bg-blue-900/30 rounded-lg\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-blue-800 dark:text-blue-200\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Total Refund Probability:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 843,\n                    columnNumber: 49\n                  }, this), \" The total likelihood of refunding within the refund window.\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \" No Refund Probability:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 844,\n                    columnNumber: 49\n                  }, this), \" Used in revenue estimation as the retention component.\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 842,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 841,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"h-80\",\n                children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                  width: \"100%\",\n                  height: \"100%\",\n                  children: /*#__PURE__*/_jsxDEV(RechartsLineChart, {\n                    data: chartData,\n                    children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                      strokeDasharray: \"3 3\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 850,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                      dataKey: \"day\",\n                      label: {\n                        value: 'Days Since Conversion',\n                        position: 'insideBottom',\n                        offset: -5\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 851,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                      label: {\n                        value: 'Probability (%)',\n                        angle: -90,\n                        position: 'insideLeft'\n                      },\n                      domain: [0, 100]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 855,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                      content: customTooltip\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 859,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 860,\n                      columnNumber: 53\n                    }, this), refundProbabilityLines.map((line, index) => /*#__PURE__*/_jsxDEV(Line, {\n                      type: \"monotone\",\n                      dataKey: line.dataKey,\n                      stroke: line.stroke,\n                      strokeDasharray: line.strokeDasharray,\n                      name: line.name,\n                      strokeWidth: line.strokeWidth || 2,\n                      dot: {\n                        r: 4\n                      }\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 862,\n                      columnNumber: 57\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 849,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 848,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 847,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 837,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"text-lg font-semibold text-gray-900 dark:text-white mb-4\",\n                children: \"Daily Rates Chart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 882,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"h-80\",\n                children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                  width: \"100%\",\n                  height: \"100%\",\n                  children: /*#__PURE__*/_jsxDEV(RechartsLineChart, {\n                    data: chartData,\n                    children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                      strokeDasharray: \"3 3\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 888,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                      dataKey: \"day\",\n                      label: {\n                        value: 'Days',\n                        position: 'insideBottom',\n                        offset: -5\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 889,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                      label: {\n                        value: 'Rate (%)',\n                        angle: -90,\n                        position: 'insideLeft'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 893,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                      content: customTooltip\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 896,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 897,\n                      columnNumber: 49\n                    }, this), chartLines.filter(line => line.dataKey.includes('Daily') || line.dataKey.includes('daily')).map((line, index) => /*#__PURE__*/_jsxDEV(Line, {\n                      type: \"monotone\",\n                      dataKey: line.dataKey,\n                      stroke: line.stroke,\n                      strokeDasharray: line.strokeDasharray,\n                      name: line.name,\n                      strokeWidth: 2,\n                      dot: {\n                        r: 3\n                      }\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 901,\n                      columnNumber: 57\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 887,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 886,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 885,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 881,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"text-lg font-semibold text-gray-900 dark:text-white mb-4\",\n                children: \"Cumulative Rates Chart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 920,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"h-80\",\n                children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                  width: \"100%\",\n                  height: \"100%\",\n                  children: /*#__PURE__*/_jsxDEV(RechartsLineChart, {\n                    data: chartData,\n                    children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                      strokeDasharray: \"3 3\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 926,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                      dataKey: \"day\",\n                      label: {\n                        value: 'Days',\n                        position: 'insideBottom',\n                        offset: -5\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 927,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                      label: {\n                        value: 'Rate (%)',\n                        angle: -90,\n                        position: 'insideLeft'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 931,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                      content: customTooltip\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 934,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 935,\n                      columnNumber: 49\n                    }, this), chartLines.filter(line => line.dataKey.includes('Cumulative') || line.dataKey.includes('cumulative')).map((line, index) => /*#__PURE__*/_jsxDEV(Line, {\n                      type: \"monotone\",\n                      dataKey: line.dataKey,\n                      stroke: line.stroke,\n                      strokeDasharray: line.strokeDasharray,\n                      name: line.name,\n                      strokeWidth: 2,\n                      dot: {\n                        r: 3\n                      }\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 939,\n                      columnNumber: 57\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 925,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 924,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 923,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 919,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-6 p-4 bg-blue-50 dark:bg-blue-900/30 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"font-semibold text-blue-800 dark:text-blue-200 mb-2\",\n                children: \"Chart Information\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 958,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-blue-700 dark:text-blue-300 space-y-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Solid lines:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 960,\n                    columnNumber: 44\n                  }, this), \" Raw data points\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 960,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Dashed lines:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 961,\n                    columnNumber: 44\n                  }, this), \" Smoothed data (when available)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 961,\n                  columnNumber: 41\n                }, this), isTrialOutcomeTable && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Red colors:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 964,\n                      columnNumber: 52\n                    }, this), \" Cancellation metrics (Trial Started \\u2192 Cancelled)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 964,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Green colors:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 965,\n                      columnNumber: 52\n                    }, this), \" Conversion probabilities (used for revenue estimation)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 965,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Thick green line:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 966,\n                      columnNumber: 52\n                    }, this), \" Pre-calculated conversion probability from each day onward\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 966,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true), isCancellationTable && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Red colors:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 969,\n                    columnNumber: 68\n                  }, this), \" Cancellation metrics\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 969,\n                  columnNumber: 65\n                }, this), isRefundTable && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Blue colors:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 972,\n                      columnNumber: 52\n                    }, this), \" Refund metrics\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 972,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Red/Green colors:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 973,\n                      columnNumber: 52\n                    }, this), \" Refund probabilities (used for revenue estimation)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 973,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Thick lines:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 974,\n                      columnNumber: 52\n                    }, this), \" Pre-calculated total refund probabilities\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 974,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 959,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 957,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 790,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center py-8\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-500 dark:text-gray-400\",\n              children: \"No chart data available for this lifecycle analysis.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 982,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 981,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 764,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 763,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 762,\n      columnNumber: 13\n    }, this);\n  };\n\n  // Breakdown Modal Component\n  const BreakdownModal = () => {\n    if (!breakdownModalData) return null;\n    const {\n      title,\n      rateCalculationData\n    } = breakdownModalData;\n\n    // Extract per-product information from the rate calculation data\n    const extensionInfo = rateCalculationData.extension_info;\n    const perProductInfo = (extensionInfo === null || extensionInfo === void 0 ? void 0 : extensionInfo.per_product_info) || {};\n    const aggregateRates = rateCalculationData.aggregate_rates;\n    const ratesByProduct = rateCalculationData.rates_by_product || {};\n\n    // Get ALL products from the global product list, not just ones with data for this lifecycle\n    const allAvailableProducts = getAllAvailableProducts();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-4xl w-full max-h-[90vh] overflow-y-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-xl font-semibold text-gray-900 dark:text-white\",\n              children: [title, \" - Product Breakdown\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1013,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: closeBreakdownModal,\n              className: \"text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\",\n              children: /*#__PURE__*/_jsxDEV(X, {\n                size: 24\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1020,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1016,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1012,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6 p-4 bg-blue-50 dark:bg-blue-900/30 rounded-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-lg font-semibold text-blue-800 dark:text-blue-200 mb-2\",\n              children: \"Aggregate Summary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1026,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-blue-700 dark:text-blue-300\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Total Users:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1032,\n                    columnNumber: 41\n                  }, this), \" \", (aggregateRates === null || aggregateRates === void 0 ? void 0 : aggregateRates.total_sample_size) || 0]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1031,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1030,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-blue-700 dark:text-blue-300\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Extension Used:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1037,\n                    columnNumber: 41\n                  }, this), \" \", (aggregateRates === null || aggregateRates === void 0 ? void 0 : aggregateRates.extension_days_used) || 0, \" days\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1036,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1035,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-blue-700 dark:text-blue-300\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Products with Data:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1042,\n                    columnNumber: 41\n                  }, this), \" \", Object.keys(ratesByProduct).length]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1041,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1040,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1029,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1025,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-lg font-semibold text-gray-900 dark:text-white\",\n              children: [\"Per-Product Details (\", allAvailableProducts.length, \" products)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1050,\n              columnNumber: 29\n            }, this), allAvailableProducts.map(productId => {\n              const productInfo = perProductInfo[productId] || {};\n              const productRates = ratesByProduct[productId] || {};\n              const finalSampleSize = productInfo.final_sample_size || productRates.total_sample_size || 0;\n              const extensionDays = productInfo.extension_days_used || productRates.extension_days_used || 0;\n              const attempts = productInfo.attempts_made || productRates.extension_attempts || 1;\n\n              // Determine status\n              let status = 'No Data';\n              let statusColor = 'text-gray-500';\n              let bgColor = 'bg-gray-50 dark:bg-gray-700';\n              if (finalSampleSize >= 10) {\n                status = 'Sufficient Data';\n                statusColor = 'text-green-600 dark:text-green-400';\n                bgColor = 'bg-green-50 dark:bg-green-900/20';\n              } else if (finalSampleSize > 0) {\n                status = 'Insufficient Data (<10 users)';\n                statusColor = 'text-orange-600 dark:text-orange-400';\n                bgColor = 'bg-orange-50 dark:bg-orange-900/20';\n              }\n\n              // Create lookback breakdown text\n              let lookbackText = 'No lookback data available';\n              if (productInfo.final_sample_size !== undefined || productRates.total_sample_size !== undefined) {\n                // Check if we have detailed step-by-step breakdown from backend\n                const stepCounts = productInfo.user_counts_by_step;\n                if (stepCounts) {\n                  const base = stepCounts.base || 0;\n                  const thirtyDays = stepCounts[\"30_days\"] || 0;\n                  const sixtyDays = stepCounts[\"60_days\"] || 0;\n                  if (extensionDays === 0) {\n                    lookbackText = `Base: ${base}`;\n                  } else if (extensionDays === 30) {\n                    lookbackText = `Base: ${base}, +0-30: ${thirtyDays}`;\n                  } else if (extensionDays === 60) {\n                    lookbackText = `Base: ${base}, +0-30: ${thirtyDays}, +31-60: ${sixtyDays}`;\n                  }\n                } else {\n                  // Fallback to old format if detailed breakdown not available\n                  if (extensionDays === 0) {\n                    lookbackText = `Base: ${finalSampleSize}`;\n                  } else if (extensionDays === 30) {\n                    lookbackText = `Base: ?, +0-30: ${finalSampleSize} (final)`;\n                  } else if (extensionDays === 60) {\n                    lookbackText = `Base: ?, +0-30: ?, +31-60: ${finalSampleSize} (final)`;\n                  }\n                }\n              }\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `p-4 rounded-lg border ${bgColor} border-gray-200 dark:border-gray-600`,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center justify-between mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"font-medium text-gray-900 dark:text-white\",\n                    children: productId\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1108,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `text-sm font-medium ${statusColor}`,\n                    children: status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1111,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1107,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"grid grid-cols-1 md:grid-cols-4 gap-4 text-sm text-gray-600 dark:text-gray-400\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Final Users:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1118,\n                        columnNumber: 52\n                      }, this), \" \", finalSampleSize]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1118,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1117,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Extension:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1121,\n                        columnNumber: 52\n                      }, this), \" \", extensionDays, \" days\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1121,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1120,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Attempts:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1124,\n                        columnNumber: 52\n                      }, this), \" \", attempts]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1124,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1123,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Used in Display:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1127,\n                        columnNumber: 52\n                      }, this), \" \", globalSelectedProduct === productId ? finalSampleSize >= 10 ? 'Yes (Product-specific)' : 'No (Fallback to aggregate)' : 'N/A']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1127,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1126,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1116,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-2 text-xs text-gray-500 dark:text-gray-400\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Lookback breakdown:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1136,\n                      columnNumber: 48\n                    }, this), \" \", lookbackText]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1136,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1135,\n                  columnNumber: 41\n                }, this)]\n              }, productId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1106,\n                columnNumber: 37\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1049,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-6 p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"font-semibold text-gray-800 dark:text-gray-200 mb-2\",\n              children: \"How This Works\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1145,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600 dark:text-gray-400 space-y-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Lookback Strategy:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1147,\n                  columnNumber: 36\n                }, this), \" Each product tries to reach 100+ users by extending lookback period (Base \\u2192 +0-30 days \\u2192 +31-60 days)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1147,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Display Logic:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1148,\n                  columnNumber: 36\n                }, this), \" Product-specific data shown only if \\u226510 users, otherwise falls back to aggregate\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1148,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Aggregate:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1149,\n                  columnNumber: 36\n                }, this), \" Combined data from all products that have sufficient data\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1149,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Current Filter:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1150,\n                  columnNumber: 36\n                }, this), \" \", globalSelectedProduct || 'All Products (Aggregate)']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1150,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Note:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1151,\n                  columnNumber: 36\n                }, this), \" Products with \\\"No Data\\\" for this lifecycle type don't participate in the aggregate calculation\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1151,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1146,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1144,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1011,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1010,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1009,\n      columnNumber: 13\n    }, this);\n  };\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 bg-gray-50 dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500 dark:text-gray-400\",\n        children: \"No lifecycle rate data available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1163,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1162,\n      columnNumber: 13\n    }, this);\n  }\n\n  // Define the exact order of tables as requested\n  const lifecycleTableOrder = [{\n    key: 'trial_to_outcome',\n    title: 'Trial Started → Cancelled',\n    dataKey: 'trial_to_outcome'\n  }, {\n    key: 'trial_converted_to_cancellation',\n    title: 'Trial Converted → Cancelled',\n    dataKey: 'trial_converted_to_cancellation'\n  }, {\n    key: 'trial_converted_to_refund',\n    title: 'Trial Converted → Refunded',\n    dataKey: 'trial_converted_to_refund'\n  }, {\n    key: 'initial_purchase_to_cancellation',\n    title: 'Initial Purchase → Cancelled',\n    dataKey: 'initial_purchase_to_cancellation'\n  }, {\n    key: 'initial_purchase_to_refund',\n    title: 'Initial Purchase → Refunded',\n    dataKey: 'initial_purchase_to_refund'\n  }, {\n    key: 'renewal_to_cancellation',\n    title: 'Renewal → Cancelled',\n    dataKey: 'renewal_to_cancellation'\n  }, {\n    key: 'renewal_to_refund',\n    title: 'Renewal → Refunded',\n    dataKey: 'renewal_to_refund'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 bg-blue-50 dark:bg-blue-900/30 rounded-lg border border-blue-200 dark:border-blue-700\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-blue-800 dark:text-blue-200\",\n            children: \"Lifecycle Analysis - Product Filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1215,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-blue-600 dark:text-blue-300\",\n            children: globalSelectedProduct ? `Showing data for: ${globalSelectedProduct}` : 'Showing aggregate data across all products'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1218,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-blue-500 dark:text-blue-400 mt-1\",\n            children: \"Note: Product-specific data requires minimum 10 users per lifecycle type. Tables with fewer users will show aggregate data.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1224,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1214,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: globalSelectedProduct || '',\n          onChange: e => setGlobalSelectedProduct(e.target.value || null),\n          className: \"px-4 py-2 border border-blue-300 dark:border-blue-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Products (Aggregate)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1234,\n            columnNumber: 25\n          }, this), productList.map(productId => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: productId,\n            children: productId\n          }, productId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1236,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1229,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1213,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1212,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-8\",\n      children: lifecycleTableOrder.map(tableConfig => {\n        // Add safety check for aggregate data\n        const ratesData = aggregate && aggregate[tableConfig.dataKey] ? aggregate[tableConfig.dataKey] : null;\n        if (!ratesData) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4 p-3 bg-gray-50 dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"text-sm font-medium text-gray-900 dark:text-white\",\n                children: tableConfig.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1254,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs text-gray-500 dark:text-gray-400\",\n                children: \"No data available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1255,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1253,\n              columnNumber: 33\n            }, this)\n          }, tableConfig.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1252,\n            columnNumber: 29\n          }, this);\n        }\n        return renderLifecycleTable(tableConfig.title, ratesData);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1245,\n      columnNumber: 13\n    }, this), showChartModal && /*#__PURE__*/_jsxDEV(ChartModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1266,\n      columnNumber: 32\n    }, this), showBreakdownModal && /*#__PURE__*/_jsxDEV(BreakdownModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1269,\n      columnNumber: 36\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1210,\n    columnNumber: 9\n  }, this);\n};\n_s(LifecycleRatesTable, \"LOoTGNgeQBgQtWPPx0MnyV1c08Q=\");\n_c = LifecycleRatesTable;\nexport default LifecycleRatesTable;\nvar _c;\n$RefreshReg$(_c, \"LifecycleRatesTable\");","map":{"version":3,"names":["React","useState","LineChart","X","HelpCircle","RechartsLineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","LifecycleRatesTable","data","_s","_data$data","_data$data2","_data$data2$structure","_data$data3","_data$structured_form","globalSelectedProduct","setGlobalSelectedProduct","showChartModal","setShowChartModal","chartModalData","setChartModalData","showBreakdownModal","setShowBreakdownModal","breakdownModalData","setBreakdownModalData","lifecycleData","console","log","lifecycle_rates","structured_format","lifecycle_analysis","legacy_format","legacyData","aggregate","trial_to_outcome","rates_by_day","smoothing_method","smoothing_quality","total_sample_size","per_product","metadata","calculation_method","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","perProduct","extractLookbackInfo","rateCalculationData","tableTitle","aggregateRates","aggregate_rates","extensionInfo","extension_info","extensionDays","extension_days_used","totalSampleSize","attempts","extension_attempts","attempts_made","perProductInfo","per_product_info","Object","keys","length","breakdown","values","forEach","productInfo","sampleSize","final_sample_size","totalSize","simulateLookbackInfo","ratesData","_ratesData$aggregate_","includes","Math","floor","renderSampleSizeInfo","displayRates","isShowingProductData","isShowingFallbackData","lookbackInfo","productSampleSize","isBelowThreshold","rates_by_product","actualExtensionDays","onClick","openBreakdownModal","title","size","entries","map","days","count","getAllAvailableProducts","allAvailableProducts","Set","productId","add","rateData","Array","from","sort","productList","openChartModal","closeChartModal","closeBreakdownModal","renderLifecycleTable","denominatorKey","isCancellationTable","toLowerCase","isRefundTable","isTrialOutcomeTable","ratesByProduct","rateExtensionInfo","currentTableKey","ratesByDay","sortedDays","Number","a","b","productRates","user_counts_by_step","mockRateCalculationData","rowData","metric","dataKey","bgClass","textClass","smoothing_details","cancellation","early_concentration","sparsity","max_rate","row","index","day","dayStr","toString","dayData","toFixed","ChartModal","prepareChartData","chartPoint","rawDailyCancellation","raw_daily_cancellation_rate","smoothedDailyCancellation","smoothed_daily_cancellation_rate","rawCumulativeCancellation","raw_cumulative_cancellation_rate","smoothedCumulativeCancellation","smoothed_cumulative_cancellation_rate","conversionProbabilityFromDayOnward","conversion_probability_from_day_onward","survivalProbabilityThisDay","survival_probability_this_day","rawDailyRefund","raw_daily_refund_rate","smoothedDailyRefund","smoothed_daily_refund_rate","rawCumulativeRefund","raw_cumulative_refund_rate","smoothedCumulativeRefund","smoothed_cumulative_refund_rate","totalRefundProbability","total_refund_probability","noRefundProbability","no_refund_probability","customTooltip","active","payload","label","entry","style","color","name","value","chartData","getChartLines","stroke","strokeDasharray","getConversionProbabilityLines","strokeWidth","getRefundProbabilityLines","chartLines","conversionProbabilityLines","refundProbabilityLines","width","height","position","offset","angle","domain","content","line","type","dot","r","filter","BreakdownModal","finalSampleSize","status","statusColor","bgColor","lookbackText","undefined","stepCounts","base","thirtyDays","sixtyDays","lifecycleTableOrder","key","onChange","e","target","tableConfig","_c","$RefreshReg$"],"sources":["/Users/joshuakaufman/untitled folder 3/orchestrator/dashboard/client/src/cohort-pipeline/components/LifecycleRatesTable.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { LineChart, X, HelpCircle } from 'lucide-react';\nimport { LineChart as RechartsLineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\nconst LifecycleRatesTable = ({ data }) => {\n    const [globalSelectedProduct, setGlobalSelectedProduct] = useState(null);\n    const [showChartModal, setShowChartModal] = useState(false);\n    const [chartModalData, setChartModalData] = useState(null);\n    const [showBreakdownModal, setShowBreakdownModal] = useState(false);\n    const [breakdownModalData, setBreakdownModalData] = useState(null);\n\n    // Handle different data structures - debug mode vs regular mode\n    let lifecycleData = null;\n\n    // Debug: Log the actual data structure\n    console.log('LifecycleRatesTable received data:', data);\n\n    if (data?.data?.lifecycle_rates) {\n        // Regular mode: data.data.lifecycle_rates\n        lifecycleData = data.data.lifecycle_rates;\n        console.log('Using regular mode lifecycle_rates:', lifecycleData);\n    } else if (data?.data?.structured_format?.lifecycle_analysis) {\n        // Debug mode: data.data.structured_format.lifecycle_analysis\n        lifecycleData = data.data.structured_format.lifecycle_analysis;\n        console.log('Using debug mode structured_format.lifecycle_analysis:', lifecycleData);\n    } else if (data?.data?.legacy_format) {\n        // Debug mode: data.data.legacy_format (fallback)\n        const legacyData = data.data.legacy_format;\n        console.log('Using debug mode legacy_format:', legacyData);\n        lifecycleData = {\n            aggregate: {\n                trial_to_outcome: {\n                    rates_by_day: legacyData.lifecycle_rates || {},\n                    smoothing_method: legacyData.smoothing_method || 'none',\n                    smoothing_quality: legacyData.smoothing_quality || 'N/A',\n                    total_sample_size: legacyData.total_sample_size || 0\n                }\n            },\n            per_product: {},\n            metadata: {\n                calculation_method: 'legacy_format',\n                message: 'Data from legacy format'\n            }\n        };\n    } else if (data?.structured_format?.lifecycle_analysis) {\n        // Debug mode: structured_format.lifecycle_analysis (direct)\n        lifecycleData = data.structured_format.lifecycle_analysis;\n        console.log('Using direct structured_format.lifecycle_analysis:', lifecycleData);\n    } else if (data?.legacy_format) {\n        // Debug mode: legacy_format (direct)\n        const legacyData = data.legacy_format;\n        console.log('Using direct legacy_format:', legacyData);\n        lifecycleData = {\n            aggregate: {\n                trial_to_outcome: {\n                    rates_by_day: legacyData.lifecycle_rates || {},\n                    smoothing_method: legacyData.smoothing_method || 'none',\n                    smoothing_quality: legacyData.smoothing_quality || 'N/A',\n                    total_sample_size: legacyData.total_sample_size || 0\n                }\n            },\n            per_product: {},\n            metadata: {\n                calculation_method: 'legacy_format',\n                message: 'Data from legacy format'\n            }\n        };\n    }\n\n    console.log('Final lifecycleData:', lifecycleData);\n\n    if (!lifecycleData) {\n        return (\n            <div className=\"text-center py-8\">\n                <p className=\"text-gray-500 dark:text-gray-400\">\n                    No lifecycle data available. Run an analysis to see results.\n                </p>\n            </div>\n        );\n    }\n\n    // The backend returns: { aggregate: { trial_to_outcome: {...}, ... }, per_product: { product_id: { trial_to_outcome: {...}, ... } } }\n    const aggregate = lifecycleData.aggregate || {};\n    const perProduct = lifecycleData.per_product || {};\n\n    console.log('Aggregate data:', aggregate);\n    console.log('Per product data:', perProduct);\n\n    // Function to extract lookback information from rate calculation data\n    const extractLookbackInfo = (rateCalculationData, tableTitle) => {\n        // The backend stores lookback info in the rate calculation results\n        // Look for extension_days_used and user count breakdown\n        \n        if (!rateCalculationData) return null;\n        \n        // Check if this is the new product-based format from lifecycle_calculator.py\n        const aggregateRates = rateCalculationData.aggregate_rates;\n        const extensionInfo = rateCalculationData.extension_info;\n        \n        if (aggregateRates && extensionInfo) {\n            // Extract extension information from the backend data\n            const extensionDays = aggregateRates.extension_days_used || extensionInfo?.extension_days_used || 0;\n            const totalSampleSize = aggregateRates.total_sample_size || extensionInfo?.total_sample_size || 0;\n            const attempts = aggregateRates.extension_attempts || extensionInfo?.attempts_made || 1;\n            const perProductInfo = extensionInfo?.per_product_info || {};\n            \n            if (extensionDays > 0 && Object.keys(perProductInfo).length > 0) {\n                // Use real per-product breakdown from backend\n                let breakdown = {};\n                \n                // Aggregate the breakdown from per-product info\n                Object.values(perProductInfo).forEach(productInfo => {\n                    const extensionDays = productInfo.extension_days_used || 0;\n                    const sampleSize = productInfo.final_sample_size || 0;\n                    \n                    if (extensionDays === 0) {\n                        breakdown['0'] = (breakdown['0'] || 0) + sampleSize;\n                    } else if (extensionDays === 30) {\n                        breakdown['30'] = (breakdown['30'] || 0) + sampleSize;\n                    } else if (extensionDays === 60) {\n                        breakdown['60'] = (breakdown['60'] || 0) + sampleSize;\n                    }\n                });\n                \n                return {\n                    extensionDays,\n                    totalSize: totalSampleSize,\n                    breakdown,\n                    attempts,\n                    perProductInfo\n                };\n            }\n        }\n        \n        return null;\n    };\n\n    // Function to simulate lookback information based on typical patterns (fallback only)\n    const simulateLookbackInfo = (ratesData, tableTitle) => {\n        // This is now only used as a fallback when backend data is not available\n        const sampleSize = ratesData?.aggregate_rates?.total_sample_size || ratesData?.total_sample_size || 0;\n        \n        // Only simulate for very specific cases where we know lookback is typically needed\n        if (tableTitle.includes('Renewal') && sampleSize < 10) {\n            return {\n                extensionDays: 60,\n                totalSize: sampleSize,\n                breakdown: {\n                    '0': Math.floor(sampleSize * 0.3),\n                    '30': Math.floor(sampleSize * 0.3),\n                    '60': Math.floor(sampleSize * 0.4)\n                }\n            };\n        }\n        \n        return null;\n    };\n\n    // Function to render sample size with lookback information\n    const renderSampleSizeInfo = (displayRates, globalSelectedProduct, tableTitle, rateCalculationData, isShowingProductData, isShowingFallbackData) => {\n        const sampleSize = displayRates.total_sample_size || 0;\n        const lookbackInfo = extractLookbackInfo(rateCalculationData, tableTitle);\n\n        // Check if we have product data but it's below threshold\n        let productSampleSize = 0;\n        let isBelowThreshold = false;\n        if (globalSelectedProduct && rateCalculationData.rates_by_product && rateCalculationData.rates_by_product[globalSelectedProduct]) {\n            productSampleSize = rateCalculationData.rates_by_product[globalSelectedProduct].total_sample_size || 0;\n            isBelowThreshold = productSampleSize > 0 && productSampleSize < 10;\n        }\n\n        // Get the actual extension days used for the current display\n        let actualExtensionDays = 0;\n        if (isShowingProductData && globalSelectedProduct && rateCalculationData.rates_by_product && rateCalculationData.rates_by_product[globalSelectedProduct]) {\n            actualExtensionDays = rateCalculationData.rates_by_product[globalSelectedProduct].extension_days_used || 0;\n        } else if (!isShowingProductData && rateCalculationData.aggregate_rates) {\n            actualExtensionDays = rateCalculationData.aggregate_rates.extension_days_used || 0;\n        }\n\n    return (\n            <div className=\"mb-4 p-3 bg-gray-50 dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\">\n                <div className=\"flex items-center justify-between\">\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                        Based on <span className=\"font-semibold text-gray-900 dark:text-white\">{sampleSize}</span> users\n                        {isShowingProductData && (\n                            <span className=\"ml-2 text-green-600 dark:text-green-400\">\n                                (Product: {globalSelectedProduct})\n                            </span>\n                        )}\n                        {isShowingFallbackData && !isBelowThreshold && (\n                            <span className=\"ml-2 text-orange-600 dark:text-orange-400\">\n                                (Aggregate data - {globalSelectedProduct} has no data for this lifecycle)\n                            </span>\n                        )}\n                        {isShowingFallbackData && isBelowThreshold && (\n                            <span className=\"ml-2 text-orange-600 dark:text-orange-400\">\n                                (Aggregate data - {globalSelectedProduct} has only {productSampleSize} users, minimum 10 required)\n                            </span>\n                        )}\n                        {!globalSelectedProduct && (\n                            <span className=\"ml-2 text-blue-600 dark:text-blue-400\">\n                                (All Products - Aggregate)\n                            </span>\n                        )}\n                    </p>\n                    \n                    <button\n                        onClick={() => openBreakdownModal(tableTitle, rateCalculationData)}\n                        className=\"ml-2 p-1 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 transition-colors\"\n                        title=\"View detailed breakdown by product\"\n                    >\n                        <HelpCircle size={16} />\n                    </button>\n                </div>\n                \n                {actualExtensionDays > 0 && (\n                    <div className=\"mt-2 p-2 bg-yellow-50 dark:bg-yellow-900/30 rounded border border-yellow-200 dark:border-yellow-700\">\n                        <p className=\"text-xs text-yellow-800 dark:text-yellow-200\">\n                            <strong>Lookback Applied:</strong> Extended {actualExtensionDays} days to capture more starter events\n                        </p>\n                        {lookbackInfo && lookbackInfo.breakdown && (\n                            <div className=\"mt-1 text-xs text-yellow-700 dark:text-yellow-300\">\n                                {Object.entries(lookbackInfo.breakdown).map(([days, count]) => (\n                                    <span key={days} className=\"mr-3\">\n                                        {days === '0' ? 'Base period' : `+${days} days`}: {count} users\n                                    </span>\n                                ))}\n                        </div>\n                        )}\n                    </div>\n                )}\n                        </div>\n        );\n    };\n\n    // Get all available product IDs from lifecycle rates\n    const getAllAvailableProducts = () => {\n        const allAvailableProducts = new Set();\n        \n        // Check per_product structure first (correct structure from lifecycle_calculator.py)\n        if (perProduct && Object.keys(perProduct).length > 0) {\n            Object.keys(perProduct).forEach(productId => {\n                allAvailableProducts.add(productId);\n            });\n        }\n        \n        // Also check aggregate rates for product-based data\n        if (aggregate && typeof aggregate === 'object') {\n            Object.values(aggregate).forEach(rateData => {\n                if (rateData && rateData.rates_by_product) {\n                    Object.keys(rateData.rates_by_product).forEach(productId => {\n                        allAvailableProducts.add(productId);\n                    });\n                }\n            });\n        }\n        \n        return Array.from(allAvailableProducts).sort();\n    };\n\n    const productList = getAllAvailableProducts();\n\n    // Function to open chart modal\n    const openChartModal = (title, ratesData) => {\n        setChartModalData({ title, ratesData });\n        setShowChartModal(true);\n    };\n\n    // Function to close chart modal\n    const closeChartModal = () => {\n        setChartModalData(null);\n        setShowChartModal(false);\n    };\n\n    // Function to open breakdown modal\n    const openBreakdownModal = (title, rateCalculationData) => {\n        setBreakdownModalData({ title, rateCalculationData });\n        setShowBreakdownModal(true);\n    };\n\n    // Function to close breakdown modal\n    const closeBreakdownModal = () => {\n        setBreakdownModalData(null);\n        setShowBreakdownModal(false);\n    };\n\n    // Function to render lifecycle table with precise requirements\n    const renderLifecycleTable = (title, ratesData, denominatorKey = \"rate_denominator_count\") => {\n        if (!ratesData) {\n            return (\n                <div className=\"mb-4 p-3 bg-gray-50 dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\">\n                    <div className=\"flex items-center justify-between\">\n                        <h4 className=\"text-sm font-medium text-gray-900 dark:text-white\">{title}</h4>\n                        <span className=\"text-xs text-gray-500 dark:text-gray-400\">No data available</span>\n                    </div>\n                </div>\n            );\n        }\n\n        // Determine table type from title to show only relevant metrics\n        const isCancellationTable = title.toLowerCase().includes('cancelled');\n        const isRefundTable = title.toLowerCase().includes('refund');\n        const isTrialOutcomeTable = title.toLowerCase().includes('trial started');\n\n        // Handle the correct data structure from lifecycle_calculator.py\n        // The backend now returns complete rate calculation data including extension_info\n        \n        console.log('renderLifecycleTable - title:', title, 'ratesData:', ratesData);\n        \n        // Check if we have the new complete structure or the old direct structure\n        let aggregateRates, ratesByProduct, rateExtensionInfo;\n        \n        if (ratesData.aggregate_rates) {\n            // New complete structure\n            aggregateRates = ratesData.aggregate_rates;\n            ratesByProduct = ratesData.rates_by_product || {};\n            rateExtensionInfo = ratesData.extension_info || {};\n        } else {\n            // Old direct structure (fallback)\n            aggregateRates = ratesData;\n            ratesByProduct = {};\n            rateExtensionInfo = {};\n        }\n        \n        // Get per-product data for this specific rate type\n        const currentTableKey = title.toLowerCase().includes('trial started') ? 'trial_to_outcome' :\n                               title.toLowerCase().includes('trial converted') && title.toLowerCase().includes('cancelled') ? 'trial_converted_to_cancellation' :\n                               title.toLowerCase().includes('trial converted') && title.toLowerCase().includes('refund') ? 'trial_converted_to_refund' :\n                               title.toLowerCase().includes('initial purchase') && title.toLowerCase().includes('cancelled') ? 'initial_purchase_to_cancellation' :\n                               title.toLowerCase().includes('initial purchase') && title.toLowerCase().includes('refund') ? 'initial_purchase_to_refund' :\n                               title.toLowerCase().includes('renewal') && title.toLowerCase().includes('cancelled') ? 'renewal_to_cancellation' :\n                               title.toLowerCase().includes('renewal') && title.toLowerCase().includes('refund') ? 'renewal_to_refund' : null;\n        \n        // For the new structure, we already have the rates_by_product for this specific lifecycle type\n        // For the old structure, we need to get it from the per-product data\n        if (!ratesData.aggregate_rates && currentTableKey) {\n            Object.keys(perProduct).forEach(productId => {\n                if (perProduct[productId][currentTableKey]) {\n                    ratesByProduct[productId] = perProduct[productId][currentTableKey];\n                }\n            });\n        }\n        \n        if (!aggregateRates || !aggregateRates.rates_by_day || Object.keys(aggregateRates.rates_by_day).length === 0) {\n            return (\n                <div className=\"mb-4 p-3 bg-gray-50 dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\">\n                    <div className=\"flex items-center justify-between\">\n                        <h4 className=\"text-sm font-medium text-gray-900 dark:text-white\">{title}</h4>\n                        <span className=\"text-xs text-gray-500 dark:text-gray-400\">No data available</span>\n                    </div>\n                </div>\n            );\n        }\n        \n        // Use global product selection to determine which rates to display\n        // If a product is selected but doesn't have data for this lifecycle type, fall back to aggregate\n        let displayRates = aggregateRates;\n        let isShowingProductData = false;\n        let isShowingFallbackData = false;\n        \n        if (globalSelectedProduct) {\n            // Add null checks to prevent undefined access errors\n            if (ratesByProduct && ratesByProduct[globalSelectedProduct]) {\n                const productSampleSize = ratesByProduct[globalSelectedProduct].total_sample_size || 0;\n                \n                // Only show product-specific data if it has at least 10 users\n                if (productSampleSize >= 10) {\n                    // Product has sufficient data for this lifecycle type\n                    displayRates = ratesByProduct[globalSelectedProduct];\n                    isShowingProductData = true;\n                } else {\n                    // Product has data but insufficient sample size - use aggregate as fallback\n                    displayRates = aggregateRates;\n                    isShowingFallbackData = true;\n                }\n            } else {\n                // Product selected but no data for this lifecycle type - use aggregate as fallback\n                displayRates = aggregateRates;\n                isShowingFallbackData = true;\n            }\n        }\n        \n        const ratesByDay = displayRates.rates_by_day;\n        const sortedDays = Object.keys(ratesByDay).map(Number).sort((a, b) => a - b);\n        \n        // Get sample size for display\n        const sampleSize = displayRates.total_sample_size || 0;\n        \n        // Create a mock rateCalculationData structure for the lookback info function\n        // But use real extension info from the backend if available\n        let extensionInfo = {\n            extension_days_used: displayRates.extension_days_used || 0,\n            total_sample_size: sampleSize,\n            attempts_made: displayRates.extension_attempts || 1,\n            per_product_info: {}\n        };\n        \n        // Use real extension info from the backend if available\n        if (rateExtensionInfo && Object.keys(rateExtensionInfo).length > 0) {\n            extensionInfo = rateExtensionInfo;\n        }\n        \n        // If we have a selected product, make sure its info is included\n        if (globalSelectedProduct && ratesByProduct[globalSelectedProduct]) {\n            const productRates = ratesByProduct[globalSelectedProduct];\n            if (!extensionInfo.per_product_info[globalSelectedProduct]) {\n                extensionInfo.per_product_info[globalSelectedProduct] = {\n                    extension_days_used: productRates.extension_days_used || 0,\n                    final_sample_size: productRates.total_sample_size || 0,\n                    attempts_made: productRates.extension_attempts || 1,\n                    user_counts_by_step: productRates.user_counts_by_step || {}\n                };\n            }\n        }\n        \n        const mockRateCalculationData = {\n            aggregate_rates: displayRates,\n            rates_by_product: ratesByProduct,\n            extension_info: extensionInfo\n        };\n        \n        // Prepare row data based on table type - only 4 rows per table\n        let rowData = [];\n        \n        if (isTrialOutcomeTable) {\n            // Trial Started table - show only cancellation metrics\n            rowData = [\n                {\n                    metric: \"Raw Daily Cancellation %\",\n                    dataKey: \"raw_daily_cancellation_rate\",\n                    bgClass: \"bg-red-50 dark:bg-red-900/20\",\n                    textClass: \"text-red-700 dark:text-red-300\"\n                },\n                {\n                    metric: \"Smoothed Daily Cancellation %\", \n                    dataKey: \"smoothed_daily_cancellation_rate\",\n                    bgClass: \"bg-red-100 dark:bg-red-900/30\",\n                    textClass: \"text-red-800 dark:text-red-200\"\n                },\n                {\n                    metric: \"Raw Cumulative Cancellation %\",\n                    dataKey: \"raw_cumulative_cancellation_rate\",\n                    bgClass: \"bg-red-150 dark:bg-red-900/40\",\n                    textClass: \"text-red-800 dark:text-red-200\"\n                },\n                {\n                    metric: \"Smoothed Cumulative Cancellation %\",\n                    dataKey: \"smoothed_cumulative_cancellation_rate\",\n                    bgClass: \"bg-red-200 dark:bg-red-900/50\",\n                    textClass: \"text-red-900 dark:text-red-100\"\n                }\n            ];\n        } else if (isCancellationTable) {\n            // Cancellation table - red theme\n            rowData = [\n                {\n                    metric: \"Raw Daily Cancellation %\",\n                    dataKey: \"raw_daily_cancellation_rate\",\n                    bgClass: \"bg-red-50 dark:bg-red-900/20\",\n                    textClass: \"text-red-700 dark:text-red-300\"\n                },\n                {\n                    metric: \"Smoothed Daily Cancellation %\", \n                    dataKey: \"smoothed_daily_cancellation_rate\",\n                    bgClass: \"bg-red-100 dark:bg-red-900/30\",\n                    textClass: \"text-red-800 dark:text-red-200\"\n                },\n                {\n                    metric: \"Raw Cumulative Cancellation %\",\n                    dataKey: \"raw_cumulative_cancellation_rate\",\n                    bgClass: \"bg-red-150 dark:bg-red-900/40\",\n                    textClass: \"text-red-800 dark:text-red-200\"\n                },\n                {\n                    metric: \"Smoothed Cumulative Cancellation %\",\n                    dataKey: \"smoothed_cumulative_cancellation_rate\",\n                    bgClass: \"bg-red-200 dark:bg-red-900/50\",\n                    textClass: \"text-red-900 dark:text-red-100\"\n                }\n            ];\n        } else if (isRefundTable) {\n            // Refund table - blue theme\n            rowData = [\n                {\n                    metric: \"Raw Daily Refund %\",\n                    dataKey: \"raw_daily_refund_rate\",\n                    bgClass: \"bg-blue-50 dark:bg-blue-900/20\",\n                    textClass: \"text-blue-700 dark:text-blue-300\"\n                },\n                {\n                    metric: \"Smoothed Daily Refund %\",\n                    dataKey: \"smoothed_daily_refund_rate\",\n                    bgClass: \"bg-blue-100 dark:bg-blue-900/30\",\n                    textClass: \"text-blue-800 dark:text-blue-200\"\n                },\n                {\n                    metric: \"Raw Cumulative Refund %\",\n                    dataKey: \"raw_cumulative_refund_rate\",\n                    bgClass: \"bg-blue-150 dark:bg-blue-900/40\",\n                    textClass: \"text-blue-800 dark:text-blue-200\"\n                },\n                {\n                    metric: \"Smoothed Cumulative Refund %\",\n                    dataKey: \"smoothed_cumulative_refund_rate\",\n                    bgClass: \"bg-blue-200 dark:bg-blue-900/50\",\n                    textClass: \"text-blue-900 dark:text-blue-100\"\n                }\n            ];\n        }\n\n        return (\n            <div className=\"mb-6\">\n                <div className=\"flex items-center justify-between mb-4\">\n                    <h4 className=\"text-lg font-semibold text-gray-900 dark:text-white\">{title}</h4>\n                    <button\n                        onClick={() => openChartModal(title, ratesData)}\n                        className=\"px-3 py-1 bg-blue-600 hover:bg-blue-700 text-white text-sm rounded-md transition-colors duration-200 flex items-center space-x-1\"\n                    >\n                        <LineChart size={16} />\n                        <span>Chart</span>\n                    </button>\n                </div>\n                \n                {renderSampleSizeInfo(displayRates, globalSelectedProduct, title, mockRateCalculationData, isShowingProductData, isShowingFallbackData)}\n\n                {/* Smoothing Information */}\n                <div className=\"mb-4 p-3 bg-blue-50 dark:bg-blue-900/30 rounded-lg\">\n                    <h5 className=\"font-semibold text-blue-800 dark:text-blue-200 mb-2\">Smoothing Method Information</h5>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm text-blue-700 dark:text-blue-300\">\n                        <div>\n                            <p><strong>Method:</strong> {displayRates.smoothing_method || 'none'}</p>\n                            <p><strong>Quality:</strong> {displayRates.smoothing_quality || 'N/A'}</p>\n                            <p><strong>Sample Size:</strong> {sampleSize}</p>\n                        </div>\n                        {displayRates.smoothing_details && (\n                            <div>\n                                <p><strong>Data Characteristics:</strong></p>\n                                <ul className=\"ml-4 mt-1\">\n                                    {displayRates.smoothing_details.cancellation && (\n                                        <>\n                                            <li>Early Concentration: {displayRates.smoothing_details.cancellation.early_concentration}</li>\n                                            <li>Sparsity: {displayRates.smoothing_details.cancellation.sparsity}</li>\n                                            <li>Max Rate: {displayRates.smoothing_details.cancellation.max_rate}</li>\n                                        </>\n                                    )}\n                                </ul>\n                        </div>\n                        )}\n                    </div>\n                </div>\n                \n                {/* Transposed Table with Frozen First Column and Color Coordination */}\n                <div className=\"border border-gray-200 dark:border-gray-700 rounded-lg overflow-hidden\">\n                    <div className=\"flex\">\n                        {/* Frozen First Column */}\n                        <div className=\"bg-gray-50 dark:bg-gray-800 border-r border-gray-200 dark:border-gray-700\">\n                            <div className=\"px-4 py-3 font-medium text-gray-900 dark:text-white border-b border-gray-200 dark:border-gray-700\">\n                                Metric\n                            </div>\n                            {rowData.map((row, index) => (\n                                <div key={index} className={`px-4 py-3 text-sm border-b border-gray-200 dark:border-gray-700 ${row.bgClass} ${row.textClass} font-medium`}>\n                                    {row.metric}\n                                </div>\n                            ))}\n                        </div>\n\n                        {/* Scrollable Data Columns */}\n                        <div className=\"flex-1 overflow-x-auto\">\n                            <div className=\"flex\">\n                                {sortedDays.map((day) => {\n                                    const dayStr = day.toString();\n                                    const dayData = ratesByDay[dayStr];\n                                    \n                                    return (\n                                        <div key={dayStr} className=\"min-w-[100px] border-r border-gray-200 dark:border-gray-700 last:border-r-0\">\n                                            {/* Header */}\n                                            <div className=\"px-4 py-3 bg-gray-50 dark:bg-gray-800 font-medium text-gray-900 dark:text-white text-center border-b border-gray-200 dark:border-gray-700\">\n                                                Day {day}\n                                            </div>\n                                            \n                                            {/* Data Cells */}\n                                            {rowData.map((row, index) => (\n                                                <div key={index} className={`px-4 py-3 text-sm text-center border-b border-gray-200 dark:border-gray-700 ${row.bgClass} ${row.textClass}`}>\n                                                    {dayData ? (dayData[row.dataKey] || 0).toFixed(2) : '0.00'}%\n                                                </div>\n                                            ))}\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    // Chart Modal Component\n    const ChartModal = () => {\n        if (!chartModalData) return null;\n\n        const { title, ratesData } = chartModalData;\n        \n        // Determine table type from title\n        const isCancellationTable = title.toLowerCase().includes('cancelled');\n        const isRefundTable = title.toLowerCase().includes('refund');\n        const isTrialOutcomeTable = title.toLowerCase().includes('trial started');\n        \n        const prepareChartData = () => {\n            // Handle the correct data structure from lifecycle_calculator.py\n            // ratesData might be the complete structure with aggregate_rates, rates_by_product, etc.\n            // OR it might be the direct rates data\n            \n            console.log('Chart ratesData:', ratesData);\n            \n            // Determine the correct rates to use based on current product selection and data structure\n            let displayRates = null;\n            \n            if (ratesData.aggregate_rates) {\n                // New complete structure - use the same logic as the table\n                const aggregateRates = ratesData.aggregate_rates;\n                const ratesByProduct = ratesData.rates_by_product || {};\n                \n                if (globalSelectedProduct && ratesByProduct[globalSelectedProduct]) {\n                    const productSampleSize = ratesByProduct[globalSelectedProduct].total_sample_size || 0;\n                    if (productSampleSize >= 10) {\n                        displayRates = ratesByProduct[globalSelectedProduct];\n                    } else {\n                        displayRates = aggregateRates;\n                    }\n                } else {\n                    displayRates = aggregateRates;\n                }\n            } else if (ratesData.rates_by_day) {\n                // Direct rates structure\n                displayRates = ratesData;\n            } else {\n                console.log('No valid rates structure found in:', ratesData);\n                return [];\n            }\n            \n            if (!displayRates || !displayRates.rates_by_day) {\n                console.log('No rates_by_day found in displayRates:', displayRates);\n                return [];\n            }\n            \n            const ratesByDay = displayRates.rates_by_day;\n            const sortedDays = Object.keys(ratesByDay).map(Number).sort((a, b) => a - b);\n            \n            console.log('Chart sortedDays:', sortedDays);\n            console.log('Chart ratesByDay sample:', ratesByDay[sortedDays[0]]);\n            \n            return sortedDays.map(day => {\n                const dayData = ratesByDay[day.toString()];\n                const chartPoint = { day };\n                \n                if (isTrialOutcomeTable) {\n                    // Trial Started table - show only cancellation metrics\n                    chartPoint.rawDailyCancellation = dayData?.raw_daily_cancellation_rate || 0;\n                    chartPoint.smoothedDailyCancellation = dayData?.smoothed_daily_cancellation_rate || 0;\n                    chartPoint.rawCumulativeCancellation = dayData?.raw_cumulative_cancellation_rate || 0;\n                    chartPoint.smoothedCumulativeCancellation = dayData?.smoothed_cumulative_cancellation_rate || 0;\n                    \n                    // Add conversion probability data for trial-to-outcome tables\n                    chartPoint.conversionProbabilityFromDayOnward = (dayData?.conversion_probability_from_day_onward || 0) * 100; // Convert to percentage\n                    chartPoint.survivalProbabilityThisDay = (dayData?.survival_probability_this_day || 0) * 100; // Convert to percentage\n                } else if (isCancellationTable) {\n                    // Only cancellation metrics for cancellation tables\n                    chartPoint.rawDailyCancellation = dayData?.raw_daily_cancellation_rate || 0;\n                    chartPoint.smoothedDailyCancellation = dayData?.smoothed_daily_cancellation_rate || 0;\n                    chartPoint.rawCumulativeCancellation = dayData?.raw_cumulative_cancellation_rate || 0;\n                    chartPoint.smoothedCumulativeCancellation = dayData?.smoothed_cumulative_cancellation_rate || 0;\n                } else if (isRefundTable) {\n                    // Only refund metrics for refund tables\n                    chartPoint.rawDailyRefund = dayData?.raw_daily_refund_rate || 0;\n                    chartPoint.smoothedDailyRefund = dayData?.smoothed_daily_refund_rate || 0;\n                    chartPoint.rawCumulativeRefund = dayData?.raw_cumulative_refund_rate || 0;\n                    chartPoint.smoothedCumulativeRefund = dayData?.smoothed_cumulative_refund_rate || 0;\n                    \n                    // Add refund probability data for refund tables\n                    chartPoint.totalRefundProbability = (dayData?.total_refund_probability || 0) * 100; // Convert to percentage\n                    chartPoint.noRefundProbability = (dayData?.no_refund_probability || 0) * 100; // Convert to percentage\n                }\n                \n                return chartPoint;\n            });\n        };\n\n        const customTooltip = ({ active, payload, label }) => {\n            if (active && payload && payload.length) {\n                return (\n                    <div className=\"bg-white dark:bg-gray-800 p-3 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg\">\n                        <p className=\"font-semibold text-gray-900 dark:text-white\">{`Day ${label}`}</p>\n                        {payload.map((entry, index) => (\n                            <p key={index} style={{ color: entry.color }} className=\"text-sm\">\n                                {`${entry.name}: ${entry.value.toFixed(2)}%`}\n                            </p>\n                        ))}\n                            </div>\n                );\n            }\n            return null;\n        };\n\n        const chartData = prepareChartData();\n        \n        // Define lines based on table type\n        const getChartLines = () => {\n            if (isTrialOutcomeTable) {\n                return [\n                    { dataKey: 'rawDailyCancellation', name: 'Raw Daily Cancellation', stroke: '#dc2626', strokeDasharray: '0' },\n                    { dataKey: 'smoothedDailyCancellation', name: 'Smoothed Daily Cancellation', stroke: '#dc2626', strokeDasharray: '5 5' },\n                    { dataKey: 'rawCumulativeCancellation', name: 'Raw Cumulative Cancellation', stroke: '#b91c1c', strokeDasharray: '0' },\n                    { dataKey: 'smoothedCumulativeCancellation', name: 'Smoothed Cumulative Cancellation', stroke: '#b91c1c', strokeDasharray: '5 5' }\n                ];\n            } else if (isCancellationTable) {\n                return [\n                    { dataKey: 'rawDailyCancellation', name: 'Raw Daily Cancellation', stroke: '#dc2626', strokeDasharray: '0' },\n                    { dataKey: 'smoothedDailyCancellation', name: 'Smoothed Daily Cancellation', stroke: '#dc2626', strokeDasharray: '5 5' },\n                    { dataKey: 'rawCumulativeCancellation', name: 'Raw Cumulative Cancellation', stroke: '#b91c1c', strokeDasharray: '0' },\n                    { dataKey: 'smoothedCumulativeCancellation', name: 'Smoothed Cumulative Cancellation', stroke: '#b91c1c', strokeDasharray: '5 5' }\n                ];\n            } else if (isRefundTable) {\n                return [\n                    { dataKey: 'rawDailyRefund', name: 'Raw Daily Refund', stroke: '#2563eb', strokeDasharray: '0' },\n                    { dataKey: 'smoothedDailyRefund', name: 'Smoothed Daily Refund', stroke: '#2563eb', strokeDasharray: '5 5' },\n                    { dataKey: 'rawCumulativeRefund', name: 'Raw Cumulative Refund', stroke: '#1d4ed8', strokeDasharray: '0' },\n                    { dataKey: 'smoothedCumulativeRefund', name: 'Smoothed Cumulative Refund', stroke: '#1d4ed8', strokeDasharray: '5 5' }\n                ];\n            }\n            \n            return [];\n        };\n\n        // Define conversion probability lines for trial-to-outcome tables\n        const getConversionProbabilityLines = () => {\n            if (isTrialOutcomeTable) {\n                return [\n                    { dataKey: 'conversionProbabilityFromDayOnward', name: 'Conversion Probability from Day Onward', stroke: '#059669', strokeDasharray: '0', strokeWidth: 3 },\n                    { dataKey: 'survivalProbabilityThisDay', name: 'Daily Survival Probability', stroke: '#10b981', strokeDasharray: '5 5', strokeWidth: 2 }\n                ];\n            }\n            return [];\n        };\n\n        // Define refund probability lines for refund tables\n        const getRefundProbabilityLines = () => {\n            if (isRefundTable) {\n                return [\n                    { dataKey: 'totalRefundProbability', name: 'Total Refund Probability', stroke: '#dc2626', strokeDasharray: '0', strokeWidth: 3 },\n                    { dataKey: 'noRefundProbability', name: 'No Refund Probability (Retention)', stroke: '#059669', strokeDasharray: '5 5', strokeWidth: 3 }\n                ];\n            }\n            return [];\n        };\n\n        const chartLines = getChartLines();\n        const conversionProbabilityLines = getConversionProbabilityLines();\n        const refundProbabilityLines = getRefundProbabilityLines();\n\n        return (\n            <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n                <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-6xl w-full max-h-[90vh] overflow-y-auto\">\n                    <div className=\"p-6\">\n                        <div className=\"flex justify-between items-center mb-6\">\n                            <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n                                {title} - Lifecycle Charts\n                            </h3>\n                            <button\n                                onClick={closeChartModal}\n                                className=\"text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\"\n                            >\n                                <X size={24} />\n                            </button>\n                        </div>\n\n                        {/* Product Filter Display */}\n                        <div className=\"mb-6 p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\">\n                            <div className=\"flex items-center justify-between\">\n                                <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                                    Current Filter: {globalSelectedProduct || 'All Products (Aggregate)'}\n                                </span>\n                                <span className=\"text-xs text-gray-600 dark:text-gray-400\">\n                                    Use the main product toggle to change filter\n                                </span>\n                            </div>\n                        </div>\n\n                        {chartData.length > 0 ? (\n                            <div className=\"space-y-8\">\n                                {/* Conversion Probability Chart - Only for Trial-to-Outcome */}\n                                {isTrialOutcomeTable && conversionProbabilityLines.length > 0 && (\n                                    <div>\n                                        <h4 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                                            🎯 Revenue Estimation: Conversion Probabilities\n                                        </h4>\n                                        <div className=\"mb-4 p-3 bg-green-50 dark:bg-green-900/30 rounded-lg\">\n                                            <p className=\"text-sm text-green-800 dark:text-green-200\">\n                                                <strong>Conversion Probability from Day Onward:</strong> Shows the likelihood that a user on day X will convert by the end of the trial.\n                                                This is used in revenue estimation: <code>Expected Revenue = P_convert(x) × P_not_refunded × ARPU</code>\n                                            </p>\n                                        </div>\n                                        <div className=\"h-80\">\n                                            <ResponsiveContainer width=\"100%\" height=\"100%\">\n                                                <RechartsLineChart data={chartData}>\n                                                    <CartesianGrid strokeDasharray=\"3 3\" />\n                                                    <XAxis \n                                                        dataKey=\"day\" \n                                                        label={{ value: 'Trial Day', position: 'insideBottom', offset: -5 }}\n                                                    />\n                                                    <YAxis \n                                                        label={{ value: 'Probability (%)', angle: -90, position: 'insideLeft' }}\n                                                        domain={[0, 100]}\n                                                    />\n                                                    <Tooltip content={customTooltip} />\n                                                    <Legend />\n                                                    {conversionProbabilityLines.map((line, index) => (\n                                                        <Line\n                                                            key={index}\n                                                            type=\"monotone\"\n                                                            dataKey={line.dataKey}\n                                                            stroke={line.stroke}\n                                                            strokeDasharray={line.strokeDasharray}\n                                                            name={line.name}\n                                                            strokeWidth={line.strokeWidth || 2}\n                                                            dot={{ r: 4 }}\n                                                        />\n                                                    ))}\n                                                </RechartsLineChart>\n                                            </ResponsiveContainer>\n                                        </div>\n                                    </div>\n                                )}\n\n                                {/* Refund Probability Chart - Only for Refund Tables */}\n                                {isRefundTable && refundProbabilityLines.length > 0 && (\n                                    <div>\n                                        <h4 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                                            💰 Revenue Estimation: Refund Probabilities\n                                        </h4>\n                                        <div className=\"mb-4 p-3 bg-blue-50 dark:bg-blue-900/30 rounded-lg\">\n                                            <p className=\"text-sm text-blue-800 dark:text-blue-200\">\n                                                <strong>Total Refund Probability:</strong> The total likelihood of refunding within the refund window.\n                                                <strong> No Refund Probability:</strong> Used in revenue estimation as the retention component.\n                                            </p>\n                                        </div>\n                                        <div className=\"h-80\">\n                                            <ResponsiveContainer width=\"100%\" height=\"100%\">\n                                                <RechartsLineChart data={chartData}>\n                                                    <CartesianGrid strokeDasharray=\"3 3\" />\n                                                    <XAxis \n                                                        dataKey=\"day\" \n                                                        label={{ value: 'Days Since Conversion', position: 'insideBottom', offset: -5 }}\n                                                    />\n                                                    <YAxis \n                                                        label={{ value: 'Probability (%)', angle: -90, position: 'insideLeft' }}\n                                                        domain={[0, 100]}\n                                                    />\n                                                    <Tooltip content={customTooltip} />\n                                                    <Legend />\n                                                    {refundProbabilityLines.map((line, index) => (\n                                                        <Line\n                                                            key={index}\n                                                            type=\"monotone\"\n                                                            dataKey={line.dataKey}\n                                                            stroke={line.stroke}\n                                                            strokeDasharray={line.strokeDasharray}\n                                                            name={line.name}\n                                                            strokeWidth={line.strokeWidth || 2}\n                                                            dot={{ r: 4 }}\n                                                        />\n                                                    ))}\n                                                </RechartsLineChart>\n                                            </ResponsiveContainer>\n                                        </div>\n                                    </div>\n                                )}\n\n                                {/* Daily and Cumulative Charts for all tables */}\n                                {/* Daily Rates Chart */}\n                        <div>\n                                    <h4 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                                        Daily Rates Chart\n                                    </h4>\n                                    <div className=\"h-80\">\n                                        <ResponsiveContainer width=\"100%\" height=\"100%\">\n                                            <RechartsLineChart data={chartData}>\n                                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                                <XAxis \n                                                    dataKey=\"day\" \n                                                    label={{ value: 'Days', position: 'insideBottom', offset: -5 }}\n                                                />\n                                                <YAxis \n                                                    label={{ value: 'Rate (%)', angle: -90, position: 'insideLeft' }}\n                                                />\n                                                <Tooltip content={customTooltip} />\n                                                <Legend />\n                                                {chartLines\n                                                    .filter(line => line.dataKey.includes('Daily') || line.dataKey.includes('daily'))\n                                                    .map((line, index) => (\n                                                        <Line\n                                                            key={index}\n                                                            type=\"monotone\"\n                                                            dataKey={line.dataKey}\n                                                            stroke={line.stroke}\n                                                            strokeDasharray={line.strokeDasharray}\n                                                            name={line.name}\n                                                            strokeWidth={2}\n                                                            dot={{ r: 3 }}\n                                                        />\n                                                    ))\n                                                }\n                                            </RechartsLineChart>\n                                        </ResponsiveContainer>\n                            </div>\n                        </div>\n\n                                {/* Cumulative Rates Chart */}\n                        <div>\n                                    <h4 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                                        Cumulative Rates Chart\n                                    </h4>\n                                    <div className=\"h-80\">\n                                        <ResponsiveContainer width=\"100%\" height=\"100%\">\n                                            <RechartsLineChart data={chartData}>\n                                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                                <XAxis \n                                                    dataKey=\"day\" \n                                                    label={{ value: 'Days', position: 'insideBottom', offset: -5 }}\n                                                />\n                                                <YAxis \n                                                    label={{ value: 'Rate (%)', angle: -90, position: 'insideLeft' }}\n                                                />\n                                                <Tooltip content={customTooltip} />\n                                                <Legend />\n                                                {chartLines\n                                                    .filter(line => line.dataKey.includes('Cumulative') || line.dataKey.includes('cumulative'))\n                                                    .map((line, index) => (\n                                                        <Line\n                                                            key={index}\n                                                            type=\"monotone\"\n                                                            dataKey={line.dataKey}\n                                                            stroke={line.stroke}\n                                                            strokeDasharray={line.strokeDasharray}\n                                                            name={line.name}\n                                                            strokeWidth={2}\n                                                            dot={{ r: 3 }}\n                                                        />\n                                                    ))\n                                                }\n                                            </RechartsLineChart>\n                                        </ResponsiveContainer>\n                                    </div>\n                                </div>\n\n                                {/* Chart Information */}\n                                <div className=\"mt-6 p-4 bg-blue-50 dark:bg-blue-900/30 rounded-lg\">\n                                    <h5 className=\"font-semibold text-blue-800 dark:text-blue-200 mb-2\">Chart Information</h5>\n                                    <div className=\"text-sm text-blue-700 dark:text-blue-300 space-y-1\">\n                                        <p><strong>Solid lines:</strong> Raw data points</p>\n                                        <p><strong>Dashed lines:</strong> Smoothed data (when available)</p>\n                                        {isTrialOutcomeTable && (\n                                            <>\n                                                <p><strong>Red colors:</strong> Cancellation metrics (Trial Started → Cancelled)</p>\n                                                <p><strong>Green colors:</strong> Conversion probabilities (used for revenue estimation)</p>\n                                                <p><strong>Thick green line:</strong> Pre-calculated conversion probability from each day onward</p>\n                                            </>\n                                        )}\n                                        {isCancellationTable && <p><strong>Red colors:</strong> Cancellation metrics</p>}\n                                        {isRefundTable && (\n                                            <>\n                                                <p><strong>Blue colors:</strong> Refund metrics</p>\n                                                <p><strong>Red/Green colors:</strong> Refund probabilities (used for revenue estimation)</p>\n                                                <p><strong>Thick lines:</strong> Pre-calculated total refund probabilities</p>\n                                            </>\n                                        )}\n                                    </div>\n                                </div>\n                            </div>\n                        ) : (\n                            <div className=\"text-center py-8\">\n                                <p className=\"text-gray-500 dark:text-gray-400\">\n                                    No chart data available for this lifecycle analysis.\n                                </p>\n                        </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    // Breakdown Modal Component\n    const BreakdownModal = () => {\n        if (!breakdownModalData) return null;\n\n        const { title, rateCalculationData } = breakdownModalData;\n        \n        // Extract per-product information from the rate calculation data\n        const extensionInfo = rateCalculationData.extension_info;\n        const perProductInfo = extensionInfo?.per_product_info || {};\n        const aggregateRates = rateCalculationData.aggregate_rates;\n        const ratesByProduct = rateCalculationData.rates_by_product || {};\n        \n        // Get ALL products from the global product list, not just ones with data for this lifecycle\n        const allAvailableProducts = getAllAvailableProducts();\n\n        return (\n            <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n                <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n                    <div className=\"p-6\">\n                        <div className=\"flex justify-between items-center mb-6\">\n                            <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n                                {title} - Product Breakdown\n                            </h3>\n                            <button\n                                onClick={closeBreakdownModal}\n                                className=\"text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\"\n                            >\n                                <X size={24} />\n                            </button>\n                        </div>\n\n                        {/* Aggregate Summary */}\n                        <div className=\"mb-6 p-4 bg-blue-50 dark:bg-blue-900/30 rounded-lg\">\n                            <h4 className=\"text-lg font-semibold text-blue-800 dark:text-blue-200 mb-2\">\n                                Aggregate Summary\n                            </h4>\n                            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\n                                <div>\n                                    <p className=\"text-blue-700 dark:text-blue-300\">\n                                        <strong>Total Users:</strong> {aggregateRates?.total_sample_size || 0}\n                                    </p>\n                                </div>\n                                <div>\n                                    <p className=\"text-blue-700 dark:text-blue-300\">\n                                        <strong>Extension Used:</strong> {aggregateRates?.extension_days_used || 0} days\n                                    </p>\n                                </div>\n                                <div>\n                                    <p className=\"text-blue-700 dark:text-blue-300\">\n                                        <strong>Products with Data:</strong> {Object.keys(ratesByProduct).length}\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n\n                        {/* Per-Product Breakdown */}\n                        <div className=\"space-y-4\">\n                            <h4 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                                Per-Product Details ({allAvailableProducts.length} products)\n                            </h4>\n                            \n                            {allAvailableProducts.map(productId => {\n                                const productInfo = perProductInfo[productId] || {};\n                                const productRates = ratesByProduct[productId] || {};\n                                const finalSampleSize = productInfo.final_sample_size || productRates.total_sample_size || 0;\n                                const extensionDays = productInfo.extension_days_used || productRates.extension_days_used || 0;\n                                const attempts = productInfo.attempts_made || productRates.extension_attempts || 1;\n                                \n                                // Determine status\n                                let status = 'No Data';\n                                let statusColor = 'text-gray-500';\n                                let bgColor = 'bg-gray-50 dark:bg-gray-700';\n                                \n                                if (finalSampleSize >= 10) {\n                                    status = 'Sufficient Data';\n                                    statusColor = 'text-green-600 dark:text-green-400';\n                                    bgColor = 'bg-green-50 dark:bg-green-900/20';\n                                } else if (finalSampleSize > 0) {\n                                    status = 'Insufficient Data (<10 users)';\n                                    statusColor = 'text-orange-600 dark:text-orange-400';\n                                    bgColor = 'bg-orange-50 dark:bg-orange-900/20';\n                                }\n                                \n                                // Create lookback breakdown text\n                                let lookbackText = 'No lookback data available';\n                                if (productInfo.final_sample_size !== undefined || productRates.total_sample_size !== undefined) {\n                                    // Check if we have detailed step-by-step breakdown from backend\n                                    const stepCounts = productInfo.user_counts_by_step;\n                                    if (stepCounts) {\n                                        const base = stepCounts.base || 0;\n                                        const thirtyDays = stepCounts[\"30_days\"] || 0;\n                                        const sixtyDays = stepCounts[\"60_days\"] || 0;\n                                        \n                                        if (extensionDays === 0) {\n                                            lookbackText = `Base: ${base}`;\n                                        } else if (extensionDays === 30) {\n                                            lookbackText = `Base: ${base}, +0-30: ${thirtyDays}`;\n                                        } else if (extensionDays === 60) {\n                                            lookbackText = `Base: ${base}, +0-30: ${thirtyDays}, +31-60: ${sixtyDays}`;\n                                        }\n                                    } else {\n                                        // Fallback to old format if detailed breakdown not available\n                                        if (extensionDays === 0) {\n                                            lookbackText = `Base: ${finalSampleSize}`;\n                                        } else if (extensionDays === 30) {\n                                            lookbackText = `Base: ?, +0-30: ${finalSampleSize} (final)`;\n                                        } else if (extensionDays === 60) {\n                                            lookbackText = `Base: ?, +0-30: ?, +31-60: ${finalSampleSize} (final)`;\n                                        }\n                                    }\n                                }\n                                \n                                return (\n                                    <div key={productId} className={`p-4 rounded-lg border ${bgColor} border-gray-200 dark:border-gray-600`}>\n                                        <div className=\"flex items-center justify-between mb-2\">\n                                            <h5 className=\"font-medium text-gray-900 dark:text-white\">\n                                                {productId}\n                                            </h5>\n                                            <span className={`text-sm font-medium ${statusColor}`}>\n                                                {status}\n                                            </span>\n                                        </div>\n                                        \n                                        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 text-sm text-gray-600 dark:text-gray-400\">\n                                            <div>\n                                                <p><strong>Final Users:</strong> {finalSampleSize}</p>\n                                            </div>\n                                            <div>\n                                                <p><strong>Extension:</strong> {extensionDays} days</p>\n                                            </div>\n                                            <div>\n                                                <p><strong>Attempts:</strong> {attempts}</p>\n                                            </div>\n                                            <div>\n                                                <p><strong>Used in Display:</strong> {\n                                                    globalSelectedProduct === productId \n                                                        ? (finalSampleSize >= 10 ? 'Yes (Product-specific)' : 'No (Fallback to aggregate)')\n                                                        : 'N/A'\n                                                }</p>\n                                            </div>\n                                        </div>\n                                        \n                                        <div className=\"mt-2 text-xs text-gray-500 dark:text-gray-400\">\n                                            <p><strong>Lookback breakdown:</strong> {lookbackText}</p>\n                                        </div>\n                                    </div>\n                                );\n                            })}\n                        </div>\n\n                        {/* Explanation */}\n                        <div className=\"mt-6 p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\">\n                            <h5 className=\"font-semibold text-gray-800 dark:text-gray-200 mb-2\">How This Works</h5>\n                            <div className=\"text-sm text-gray-600 dark:text-gray-400 space-y-1\">\n                                <p><strong>Lookback Strategy:</strong> Each product tries to reach 100+ users by extending lookback period (Base → +0-30 days → +31-60 days)</p>\n                                <p><strong>Display Logic:</strong> Product-specific data shown only if ≥10 users, otherwise falls back to aggregate</p>\n                                <p><strong>Aggregate:</strong> Combined data from all products that have sufficient data</p>\n                                <p><strong>Current Filter:</strong> {globalSelectedProduct || 'All Products (Aggregate)'}</p>\n                                <p><strong>Note:</strong> Products with \"No Data\" for this lifecycle type don't participate in the aggregate calculation</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    if (!data) {\n        return (\n            <div className=\"p-6 bg-gray-50 dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\">\n                <p className=\"text-gray-500 dark:text-gray-400\">\n                    No lifecycle rate data available.\n                </p>\n            </div>\n        );\n    }\n\n    // Define the exact order of tables as requested\n    const lifecycleTableOrder = [\n        {\n            key: 'trial_to_outcome',\n            title: 'Trial Started → Cancelled',\n            dataKey: 'trial_to_outcome'\n        },\n        {\n            key: 'trial_converted_to_cancellation',\n            title: 'Trial Converted → Cancelled',\n            dataKey: 'trial_converted_to_cancellation'\n        },\n        {\n            key: 'trial_converted_to_refund',\n            title: 'Trial Converted → Refunded',\n            dataKey: 'trial_converted_to_refund'\n        },\n        {\n            key: 'initial_purchase_to_cancellation',\n            title: 'Initial Purchase → Cancelled',\n            dataKey: 'initial_purchase_to_cancellation'\n        },\n        {\n            key: 'initial_purchase_to_refund',\n            title: 'Initial Purchase → Refunded',\n            dataKey: 'initial_purchase_to_refund'\n        },\n        {\n            key: 'renewal_to_cancellation',\n            title: 'Renewal → Cancelled',\n            dataKey: 'renewal_to_cancellation'\n        },\n        {\n            key: 'renewal_to_refund',\n            title: 'Renewal → Refunded',\n            dataKey: 'renewal_to_refund'\n        }\n    ];\n\n    return (\n        <div className=\"space-y-6\">\n            {/* Global Product Toggle */}\n            <div className=\"p-4 bg-blue-50 dark:bg-blue-900/30 rounded-lg border border-blue-200 dark:border-blue-700\">\n                <div className=\"flex items-center justify-between\">\n                    <div>\n                        <h3 className=\"text-lg font-semibold text-blue-800 dark:text-blue-200\">\n                            Lifecycle Analysis - Product Filter\n                        </h3>\n                        <p className=\"text-sm text-blue-600 dark:text-blue-300\">\n                            {globalSelectedProduct \n                                ? `Showing data for: ${globalSelectedProduct}` \n                                : 'Showing aggregate data across all products'\n                            }\n                        </p>\n                        <p className=\"text-xs text-blue-500 dark:text-blue-400 mt-1\">\n                            Note: Product-specific data requires minimum 10 users per lifecycle type. \n                            Tables with fewer users will show aggregate data.\n                        </p>\n                    </div>\n                    <select\n                        value={globalSelectedProduct || ''}\n                        onChange={(e) => setGlobalSelectedProduct(e.target.value || null)}\n                        className=\"px-4 py-2 border border-blue-300 dark:border-blue-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                    >\n                        <option value=\"\">All Products (Aggregate)</option>\n                        {productList.map(productId => (\n                            <option key={productId} value={productId}>\n                                {productId}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n            </div>\n\n            {/* Render tables in the specified order */}\n            <div className=\"space-y-8\">\n                {lifecycleTableOrder.map((tableConfig) => {\n                    // Add safety check for aggregate data\n                    const ratesData = aggregate && aggregate[tableConfig.dataKey] ? aggregate[tableConfig.dataKey] : null;\n                    \n                    if (!ratesData) {\n                        return (\n                            <div key={tableConfig.key} className=\"mb-4 p-3 bg-gray-50 dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700\">\n                                <div className=\"flex items-center justify-between\">\n                                    <h4 className=\"text-sm font-medium text-gray-900 dark:text-white\">{tableConfig.title}</h4>\n                                    <span className=\"text-xs text-gray-500 dark:text-gray-400\">No data available</span>\n                                </div>\n                            </div>\n                        );\n                    }\n\n                    return renderLifecycleTable(tableConfig.title, ratesData);\n                })}\n            </div>\n\n            {/* Chart Modal */}\n            {showChartModal && <ChartModal />}\n\n            {/* Breakdown Modal */}\n            {showBreakdownModal && <BreakdownModal />}\n        </div>\n    );\n};\n\nexport default LifecycleRatesTable; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}