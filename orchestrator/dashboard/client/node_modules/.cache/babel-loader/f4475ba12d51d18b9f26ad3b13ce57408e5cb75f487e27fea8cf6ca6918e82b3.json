{"ast":null,"code":"import React,{useEffect,useState}from'react';import{X}from'lucide-react';import{LineChart,Line,XAxis,YAxis,CartesianGrid,Tooltip,Legend,ResponsiveContainer,BarChart,Bar}from'recharts';import{dashboardApi}from'../services/dashboardApi';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const GraphModal=_ref=>{let{isOpen,onClose,data,dashboardParams}=_ref;const[modalData,setModalData]=useState({trendData:[],summaryStats:{},entityInfo:{}});const[isLoading,setIsLoading]=useState(false);const[error,setError]=useState(null);useEffect(()=>{if(isOpen&&data&&dashboardParams){const fetchModalData=async()=>{setIsLoading(true);setError(null);try{// Determine entity type and ID based on the data structure\nlet entityType,entityId,entityName;if(data.id&&data.id.startsWith('campaign_')){entityType='campaign';entityId=data.id.replace('campaign_','');entityName=data.campaign_name||data.name;}else if(data.id&&data.id.startsWith('adset_')){entityType='adset';entityId=data.id.replace('adset_','');entityName=data.adset_name||data.name;}else if(data.id&&data.id.startsWith('ad_')){entityType='ad';entityId=data.id.replace('ad_','');entityName=data.ad_name||data.name;}else{throw new Error('Unable to determine entity type from data');}const chartParams={entity_type:entityType,entity_id:entityId,breakdown:dashboardParams.breakdown||'all',start_date:dashboardParams.start_date,end_date:dashboardParams.end_date};const response=await dashboardApi.getAnalyticsChartData(chartParams);if(response.success){// Analytics chart data returns chart_data array with daily metrics\nconst chartData=response.chart_data||[];// Calculate summary stats from chart data\nconst summaryStats=chartData.length>0?{total_spend:chartData.reduce((sum,day)=>sum+(parseFloat(day.spend)||0),0),total_revenue:chartData.reduce((sum,day)=>sum+(parseFloat(day.estimated_revenue_usd)||0),0),avg_roas:chartData.reduce((sum,day)=>sum+(parseFloat(day.estimated_roas)||0),0)/chartData.length,avg_ctr:chartData.reduce((sum,day)=>sum+(parseFloat(day.ctr)||0),0)/chartData.length}:{};setModalData({trendData:chartData.map(day=>({date:day.date,spend:parseFloat(day.spend)||0,revenue_usd:parseFloat(day.estimated_revenue_usd)||0,total_trials_started:parseInt(day.mixpanel_trials)||0,roas:parseFloat(day.estimated_roas)||0,ctr:(parseFloat(day.clicks)||0)/(parseFloat(day.impressions)||1)*100,impressions:parseInt(day.impressions)||0,clicks:parseInt(day.clicks)||0})),summaryStats,entityInfo:{name:entityName,type:entityType,id:entityId,dateRange:response.date_range}});}else{throw new Error(response.error||'Failed to load chart data');}}catch(err){console.error('Error fetching graph modal data:',err);setError(err.message||'Failed to load graph data. Please try again later.');}finally{setIsLoading(false);}};fetchModalData();}},[isOpen,data,dashboardParams]);if(!isOpen||!data)return null;const formatCurrency=value=>{return new Intl.NumberFormat('en-US',{style:'currency',currency:'USD',minimumFractionDigits:0,maximumFractionDigits:0}).format(value||0);};const formatNumber=function(value){let decimals=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;return new Intl.NumberFormat('en-US',{minimumFractionDigits:decimals,maximumFractionDigits:decimals}).format(value||0);};const formatPercentage=function(value){let decimals=arguments.length>1&&arguments[1]!==undefined?arguments[1]:2;return\"\".concat(formatNumber((value||0)*100,decimals),\"%\");};return/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 z-50 overflow-y-auto \".concat(isOpen?'block':'hidden'),children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 transition-opacity\",\"aria-hidden\":\"true\",children:/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 bg-black/50\"})}),/*#__PURE__*/_jsx(\"span\",{className:\"hidden sm:inline-block sm:align-middle sm:h-screen\",\"aria-hidden\":\"true\",children:\"\\u200B\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"inline-block align-bottom bg-white dark:bg-gray-800 rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-6xl sm:w-full\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-white dark:bg-gray-800 px-4 pt-5 pb-4 sm:p-6 sm:pb-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"sm:flex sm:items-start\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left w-full\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-xl leading-6 font-semibold text-gray-900 dark:text-gray-100\",id:\"modal-title\",children:[\"Performance Trends: \",modalData.entityInfo.name||data.name]}),/*#__PURE__*/_jsx(\"button\",{onClick:onClose,className:\"absolute top-4 right-4 p-1 text-gray-400 hover:text-gray-600 dark:text-gray-500 dark:hover:text-gray-300\",children:/*#__PURE__*/_jsx(X,{size:20})}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-4\",children:isLoading?/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center items-center h-64\",children:/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500\"})}):error?/*#__PURE__*/_jsx(\"div\",{className:\"text-center text-red-500 p-4\",children:error}):/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-8\",children:[modalData.summaryStats&&Object.keys(modalData.summaryStats).length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 md:grid-cols-4 gap-4 p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl font-bold text-blue-600\",children:formatCurrency(modalData.summaryStats.total_spend)}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600 dark:text-gray-400\",children:\"Total Spend\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl font-bold text-green-600\",children:formatCurrency(modalData.summaryStats.total_revenue)}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600 dark:text-gray-400\",children:\"Total Revenue\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl font-bold text-purple-600\",children:formatNumber(modalData.summaryStats.avg_roas,2)}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600 dark:text-gray-400\",children:\"Avg ROAS\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl font-bold text-orange-600\",children:formatPercentage(modalData.summaryStats.avg_ctr)}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600 dark:text-gray-400\",children:\"Avg CTR\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium mb-2 dark:text-gray-100\",children:\"Daily Performance Trends\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:400,children:/*#__PURE__*/_jsxs(LineChart,{data:modalData.trendData,children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\",stroke:\"#4A5568\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"date\",stroke:\"#A0AEC0\",tick:{fontSize:12},tickFormatter:value=>{const date=new Date(value);return\"\".concat(date.getMonth()+1,\"/\").concat(date.getDate());}}),/*#__PURE__*/_jsx(YAxis,{yAxisId:\"left\",label:{value:'USD / Count',angle:-90,position:'insideLeft',fill:'#A0AEC0'},stroke:\"#A0AEC0\"}),/*#__PURE__*/_jsx(YAxis,{yAxisId:\"right\",orientation:\"right\",label:{value:'ROAS',angle:90,position:'insideRight',fill:'#A0AEC0'},stroke:\"#A0AEC0\"}),/*#__PURE__*/_jsx(Tooltip,{contentStyle:{backgroundColor:'#2D3748',borderColor:'#4A5568'},itemStyle:{color:'#E2E8F0'},labelFormatter:value=>\"Date: \".concat(value),formatter:(value,name)=>{if(name==='Spend (USD)'||name==='Revenue (USD)'){return[formatCurrency(value),name];}else if(name==='ROAS'){return[formatNumber(value,2),name];}else if(name==='CTR'){return[formatPercentage(value),name];}return[formatNumber(value),name];}}),/*#__PURE__*/_jsx(Legend,{wrapperStyle:{color:'#A0AEC0'}}),/*#__PURE__*/_jsx(Line,{yAxisId:\"left\",type:\"monotone\",dataKey:\"spend\",stroke:\"#8884d8\",name:\"Spend (USD)\",strokeWidth:2}),/*#__PURE__*/_jsx(Line,{yAxisId:\"left\",type:\"monotone\",dataKey:\"revenue_usd\",stroke:\"#82ca9d\",name:\"Revenue (USD)\",strokeWidth:2}),/*#__PURE__*/_jsx(Line,{yAxisId:\"left\",type:\"monotone\",dataKey:\"total_trials_started\",stroke:\"#ffc658\",name:\"Trials Started\",strokeWidth:2}),/*#__PURE__*/_jsx(Line,{yAxisId:\"right\",type:\"monotone\",dataKey:\"roas\",stroke:\"#ff7300\",name:\"ROAS\",strokeWidth:2}),/*#__PURE__*/_jsx(Line,{yAxisId:\"right\",type:\"monotone\",dataKey:\"ctr\",stroke:\"#8dd1e1\",name:\"CTR\",strokeWidth:2})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-8\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium mb-2 dark:text-gray-100\",children:\"Impressions vs Clicks\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(BarChart,{data:modalData.trendData,children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\",stroke:\"#4A5568\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"date\",stroke:\"#A0AEC0\",tick:{fontSize:10},tickFormatter:value=>{const date=new Date(value);return\"\".concat(date.getMonth()+1,\"/\").concat(date.getDate());}}),/*#__PURE__*/_jsx(YAxis,{stroke:\"#A0AEC0\"}),/*#__PURE__*/_jsx(Tooltip,{contentStyle:{backgroundColor:'#2D3748',borderColor:'#4A5568'},itemStyle:{color:'#E2E8F0'},formatter:(value,name)=>[formatNumber(value),name]}),/*#__PURE__*/_jsx(Bar,{dataKey:\"impressions\",fill:\"#82ca9d\",name:\"Impressions\"}),/*#__PURE__*/_jsx(Bar,{dataKey:\"clicks\",fill:\"#8884d8\",name:\"Clicks\"})]})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium mb-2 dark:text-gray-100\",children:\"Cost Metrics\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(LineChart,{data:modalData.trendData,children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\",stroke:\"#4A5568\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"date\",stroke:\"#A0AEC0\",tick:{fontSize:10},tickFormatter:value=>{const date=new Date(value);return\"\".concat(date.getMonth()+1,\"/\").concat(date.getDate());}}),/*#__PURE__*/_jsx(YAxis,{stroke:\"#A0AEC0\"}),/*#__PURE__*/_jsx(Tooltip,{contentStyle:{backgroundColor:'#2D3748',borderColor:'#4A5568'},itemStyle:{color:'#E2E8F0'},formatter:(value,name)=>{if(name==='CPC'||name==='CPM'){return[formatCurrency(value),name];}return[formatNumber(value,2),name];}}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"cpc\",stroke:\"#ff7300\",name:\"CPC\",strokeWidth:2}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"cpm\",stroke:\"#8dd1e1\",name:\"CPM\",strokeWidth:2})]})})]})]})]})})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-50 dark:bg-gray-700 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\",children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:onClose,className:\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 dark:border-gray-600 shadow-sm px-4 py-2 bg-white dark:bg-gray-800 text-base font-medium text-gray-700 dark:text-gray-200 hover:bg-gray-50 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\",children:\"Close\"})})]})]})});};","map":{"version":3,"names":["React","useEffect","useState","X","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","BarChart","Bar","dashboardApi","jsx","_jsx","jsxs","_jsxs","GraphModal","_ref","isOpen","onClose","data","dashboardParams","modalData","setModalData","trendData","summaryStats","entityInfo","isLoading","setIsLoading","error","setError","fetchModalData","entityType","entityId","entityName","id","startsWith","replace","campaign_name","name","adset_name","ad_name","Error","chartParams","entity_type","entity_id","breakdown","start_date","end_date","response","getAnalyticsChartData","success","chartData","chart_data","length","total_spend","reduce","sum","day","parseFloat","spend","total_revenue","estimated_revenue_usd","avg_roas","estimated_roas","avg_ctr","ctr","map","date","revenue_usd","total_trials_started","parseInt","mixpanel_trials","roas","clicks","impressions","type","dateRange","date_range","err","console","message","formatCurrency","value","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","formatNumber","decimals","arguments","undefined","formatPercentage","concat","className","children","onClick","size","Object","keys","width","height","strokeDasharray","stroke","dataKey","tick","fontSize","tickFormatter","Date","getMonth","getDate","yAxisId","label","angle","position","fill","orientation","contentStyle","backgroundColor","borderColor","itemStyle","color","labelFormatter","formatter","wrapperStyle","strokeWidth"],"sources":["/Users/joshuakaufman/untitled folder 3/orchestrator/dashboard/client/src/components/GraphModal.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { X } from 'lucide-react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, BarChart, Bar } from 'recharts';\nimport { dashboardApi } from '../services/dashboardApi';\n\nexport const GraphModal = ({ isOpen, onClose, data, dashboardParams }) => {\n  const [modalData, setModalData] = useState({\n    trendData: [],\n    summaryStats: {},\n    entityInfo: {}\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (isOpen && data && dashboardParams) {\n      const fetchModalData = async () => {\n        setIsLoading(true);\n        setError(null);\n        try {\n          // Determine entity type and ID based on the data structure\n          let entityType, entityId, entityName;\n          \n          if (data.id && data.id.startsWith('campaign_')) {\n            entityType = 'campaign';\n            entityId = data.id.replace('campaign_', '');\n            entityName = data.campaign_name || data.name;\n          } else if (data.id && data.id.startsWith('adset_')) {\n            entityType = 'adset';\n            entityId = data.id.replace('adset_', '');\n            entityName = data.adset_name || data.name;\n          } else if (data.id && data.id.startsWith('ad_')) {\n            entityType = 'ad';\n            entityId = data.id.replace('ad_', '');\n            entityName = data.ad_name || data.name;\n          } else {\n            throw new Error('Unable to determine entity type from data');\n          }\n\n          const chartParams = {\n            entity_type: entityType,\n            entity_id: entityId,\n            breakdown: dashboardParams.breakdown || 'all',\n            start_date: dashboardParams.start_date,\n            end_date: dashboardParams.end_date\n          };\n\n          const response = await dashboardApi.getAnalyticsChartData(chartParams);\n          \n          if (response.success) {\n            // Analytics chart data returns chart_data array with daily metrics\n            const chartData = response.chart_data || [];\n            \n            // Calculate summary stats from chart data\n            const summaryStats = chartData.length > 0 ? {\n              total_spend: chartData.reduce((sum, day) => sum + (parseFloat(day.spend) || 0), 0),\n              total_revenue: chartData.reduce((sum, day) => sum + (parseFloat(day.estimated_revenue_usd) || 0), 0),\n              avg_roas: chartData.reduce((sum, day) => sum + (parseFloat(day.estimated_roas) || 0), 0) / chartData.length,\n              avg_ctr: chartData.reduce((sum, day) => sum + (parseFloat(day.ctr) || 0), 0) / chartData.length\n            } : {};\n            \n            setModalData({\n              trendData: chartData.map(day => ({\n                date: day.date,\n                spend: parseFloat(day.spend) || 0,\n                revenue_usd: parseFloat(day.estimated_revenue_usd) || 0,\n                total_trials_started: parseInt(day.mixpanel_trials) || 0,\n                roas: parseFloat(day.estimated_roas) || 0,\n                ctr: (parseFloat(day.clicks) || 0) / (parseFloat(day.impressions) || 1) * 100,\n                impressions: parseInt(day.impressions) || 0,\n                clicks: parseInt(day.clicks) || 0\n              })),\n              summaryStats,\n              entityInfo: {\n                name: entityName,\n                type: entityType,\n                id: entityId,\n                dateRange: response.date_range\n              }\n            });\n          } else {\n            throw new Error(response.error || 'Failed to load chart data');\n          }\n        } catch (err) {\n          console.error('Error fetching graph modal data:', err);\n          setError(err.message || 'Failed to load graph data. Please try again later.');\n        } finally {\n          setIsLoading(false);\n        }\n      };\n      fetchModalData();\n    }\n  }, [isOpen, data, dashboardParams]);\n\n  if (!isOpen || !data) return null;\n\n  const formatCurrency = (value) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(value || 0);\n  };\n\n  const formatNumber = (value, decimals = 0) => {\n    return new Intl.NumberFormat('en-US', {\n      minimumFractionDigits: decimals,\n      maximumFractionDigits: decimals,\n    }).format(value || 0);\n  };\n\n  const formatPercentage = (value, decimals = 2) => {\n    return `${formatNumber((value || 0) * 100, decimals)}%`;\n  };\n\n  return (\n    <div className={`fixed inset-0 z-50 overflow-y-auto ${isOpen ? 'block' : 'hidden'}`}>\n      <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n        <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\n          <div className=\"absolute inset-0 bg-black/50\"></div>\n        </div>\n        <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\n        <div className=\"inline-block align-bottom bg-white dark:bg-gray-800 rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-6xl sm:w-full\">\n          <div className=\"bg-white dark:bg-gray-800 px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\n            <div className=\"sm:flex sm:items-start\">\n              <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left w-full\">\n                <h3 className=\"text-xl leading-6 font-semibold text-gray-900 dark:text-gray-100\" id=\"modal-title\">\n                  Performance Trends: {modalData.entityInfo.name || data.name}\n                </h3>\n                <button onClick={onClose} className=\"absolute top-4 right-4 p-1 text-gray-400 hover:text-gray-600 dark:text-gray-500 dark:hover:text-gray-300\">\n                  <X size={20} />\n                </button>\n                <div className=\"mt-4\">\n                  {isLoading ? (\n                    <div className=\"flex justify-center items-center h-64\">\n                      <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500\"></div>\n                    </div>\n                  ) : error ? (\n                    <div className=\"text-center text-red-500 p-4\">{error}</div>\n                  ) : (\n                    <div className=\"space-y-8\">\n                      {/* Summary Stats */}\n                      {modalData.summaryStats && Object.keys(modalData.summaryStats).length > 0 && (\n                        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\">\n                          <div className=\"text-center\">\n                            <div className=\"text-2xl font-bold text-blue-600\">{formatCurrency(modalData.summaryStats.total_spend)}</div>\n                            <div className=\"text-sm text-gray-600 dark:text-gray-400\">Total Spend</div>\n                          </div>\n                          <div className=\"text-center\">\n                            <div className=\"text-2xl font-bold text-green-600\">{formatCurrency(modalData.summaryStats.total_revenue)}</div>\n                            <div className=\"text-sm text-gray-600 dark:text-gray-400\">Total Revenue</div>\n                          </div>\n                          <div className=\"text-center\">\n                            <div className=\"text-2xl font-bold text-purple-600\">{formatNumber(modalData.summaryStats.avg_roas, 2)}</div>\n                            <div className=\"text-sm text-gray-600 dark:text-gray-400\">Avg ROAS</div>\n                          </div>\n                          <div className=\"text-center\">\n                            <div className=\"text-2xl font-bold text-orange-600\">{formatPercentage(modalData.summaryStats.avg_ctr)}</div>\n                            <div className=\"text-sm text-gray-600 dark:text-gray-400\">Avg CTR</div>\n                          </div>\n                        </div>\n                      )}\n\n                      {/* Trend Chart */}\n                      <div>\n                        <h3 className=\"text-lg font-medium mb-2 dark:text-gray-100\">Daily Performance Trends</h3>\n                        <ResponsiveContainer width=\"100%\" height={400}>\n                          <LineChart data={modalData.trendData}>\n                            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#4A5568\" />\n                            <XAxis \n                              dataKey=\"date\" \n                              stroke=\"#A0AEC0\"\n                              tick={{ fontSize: 12 }}\n                              tickFormatter={(value) => {\n                                const date = new Date(value);\n                                return `${date.getMonth() + 1}/${date.getDate()}`;\n                              }}\n                            />\n                            <YAxis yAxisId=\"left\" label={{ value: 'USD / Count', angle: -90, position: 'insideLeft', fill: '#A0AEC0' }} stroke=\"#A0AEC0\" />\n                            <YAxis yAxisId=\"right\" orientation=\"right\" label={{ value: 'ROAS', angle: 90, position: 'insideRight', fill: '#A0AEC0' }} stroke=\"#A0AEC0\" />\n                            <Tooltip \n                              contentStyle={{ backgroundColor: '#2D3748', borderColor: '#4A5568' }} \n                              itemStyle={{ color: '#E2E8F0' }}\n                              labelFormatter={(value) => `Date: ${value}`}\n                              formatter={(value, name) => {\n                                if (name === 'Spend (USD)' || name === 'Revenue (USD)') {\n                                  return [formatCurrency(value), name];\n                                } else if (name === 'ROAS') {\n                                  return [formatNumber(value, 2), name];\n                                } else if (name === 'CTR') {\n                                  return [formatPercentage(value), name];\n                                }\n                                return [formatNumber(value), name];\n                              }}\n                            />\n                            <Legend wrapperStyle={{ color: '#A0AEC0' }} />\n                            <Line yAxisId=\"left\" type=\"monotone\" dataKey=\"spend\" stroke=\"#8884d8\" name=\"Spend (USD)\" strokeWidth={2} />\n                            <Line yAxisId=\"left\" type=\"monotone\" dataKey=\"revenue_usd\" stroke=\"#82ca9d\" name=\"Revenue (USD)\" strokeWidth={2} />\n                            <Line yAxisId=\"left\" type=\"monotone\" dataKey=\"total_trials_started\" stroke=\"#ffc658\" name=\"Trials Started\" strokeWidth={2} />\n                            <Line yAxisId=\"right\" type=\"monotone\" dataKey=\"roas\" stroke=\"#ff7300\" name=\"ROAS\" strokeWidth={2} />\n                            <Line yAxisId=\"right\" type=\"monotone\" dataKey=\"ctr\" stroke=\"#8dd1e1\" name=\"CTR\" strokeWidth={2} />\n                          </LineChart>\n                        </ResponsiveContainer>\n                      </div>\n\n                      {/* Additional Metrics Charts */}\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n                        <div>\n                          <h3 className=\"text-lg font-medium mb-2 dark:text-gray-100\">Impressions vs Clicks</h3>\n                          <ResponsiveContainer width=\"100%\" height={250}>\n                            <BarChart data={modalData.trendData}>\n                              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#4A5568\" />\n                              <XAxis \n                                dataKey=\"date\" \n                                stroke=\"#A0AEC0\"\n                                tick={{ fontSize: 10 }}\n                                tickFormatter={(value) => {\n                                  const date = new Date(value);\n                                  return `${date.getMonth() + 1}/${date.getDate()}`;\n                                }}\n                              />\n                              <YAxis stroke=\"#A0AEC0\" />\n                              <Tooltip \n                                contentStyle={{ backgroundColor: '#2D3748', borderColor: '#4A5568' }} \n                                itemStyle={{ color: '#E2E8F0' }}\n                                formatter={(value, name) => [formatNumber(value), name]}\n                              />\n                              <Bar dataKey=\"impressions\" fill=\"#82ca9d\" name=\"Impressions\" />\n                              <Bar dataKey=\"clicks\" fill=\"#8884d8\" name=\"Clicks\" />\n                            </BarChart>\n                          </ResponsiveContainer>\n                        </div>\n                        <div>\n                          <h3 className=\"text-lg font-medium mb-2 dark:text-gray-100\">Cost Metrics</h3>\n                          <ResponsiveContainer width=\"100%\" height={250}>\n                            <LineChart data={modalData.trendData}>\n                              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#4A5568\" />\n                              <XAxis \n                                dataKey=\"date\" \n                                stroke=\"#A0AEC0\"\n                                tick={{ fontSize: 10 }}\n                                tickFormatter={(value) => {\n                                  const date = new Date(value);\n                                  return `${date.getMonth() + 1}/${date.getDate()}`;\n                                }}\n                              />\n                              <YAxis stroke=\"#A0AEC0\" />\n                              <Tooltip \n                                contentStyle={{ backgroundColor: '#2D3748', borderColor: '#4A5568' }} \n                                itemStyle={{ color: '#E2E8F0' }}\n                                formatter={(value, name) => {\n                                  if (name === 'CPC' || name === 'CPM') {\n                                    return [formatCurrency(value), name];\n                                  }\n                                  return [formatNumber(value, 2), name];\n                                }}\n                              />\n                              <Line type=\"monotone\" dataKey=\"cpc\" stroke=\"#ff7300\" name=\"CPC\" strokeWidth={2} />\n                              <Line type=\"monotone\" dataKey=\"cpm\" stroke=\"#8dd1e1\" name=\"CPM\" strokeWidth={2} />\n                            </LineChart>\n                          </ResponsiveContainer>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"bg-gray-50 dark:bg-gray-700 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n            <button\n              type=\"button\"\n              onClick={onClose}\n              className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 dark:border-gray-600 shadow-sm px-4 py-2 bg-white dark:bg-gray-800 text-base font-medium text-gray-700 dark:text-gray-200 hover:bg-gray-50 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}