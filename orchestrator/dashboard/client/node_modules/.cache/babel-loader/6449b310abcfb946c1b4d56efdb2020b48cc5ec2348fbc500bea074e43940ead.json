{"ast":null,"code":"var _jsxFileName = \"/Users/joshuakaufman/untitled folder 3/orchestrator/dashboard/client/src/components/GraphModal.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { X } from 'lucide-react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, BarChart, Bar } from 'recharts';\nimport { dashboardApi } from '../services/dashboardApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GraphModal = ({\n  isOpen,\n  onClose,\n  data,\n  dashboardParams\n}) => {\n  _s();\n  const [modalData, setModalData] = useState({\n    trendData: [],\n    summaryStats: {},\n    entityInfo: {}\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (isOpen && data && dashboardParams) {\n      const fetchModalData = async () => {\n        setIsLoading(true);\n        setError(null);\n        try {\n          // Determine entity type and ID based on the data structure\n          let entityType, entityId, entityName;\n          if (data.id && data.id.startsWith('campaign_')) {\n            entityType = 'campaign';\n            entityId = data.id.replace('campaign_', '');\n            entityName = data.campaign_name || data.name;\n          } else if (data.id && data.id.startsWith('adset_')) {\n            entityType = 'adset';\n            entityId = data.id.replace('adset_', '');\n            entityName = data.adset_name || data.name;\n          } else if (data.id && data.id.startsWith('ad_')) {\n            entityType = 'ad';\n            entityId = data.id.replace('ad_', '');\n            entityName = data.ad_name || data.name;\n          } else {\n            throw new Error('Unable to determine entity type from data');\n          }\n          const chartParams = {\n            entity_type: entityType,\n            entity_id: entityId,\n            breakdown: dashboardParams.breakdown || 'all',\n            start_date: dashboardParams.start_date,\n            end_date: dashboardParams.end_date\n          };\n          const response = await dashboardApi.getAnalyticsChartData(chartParams);\n          if (response.success) {\n            // Analytics chart data returns chart_data array with daily metrics\n            const chartData = response.chart_data || [];\n\n            // Calculate summary stats from chart data\n            const summaryStats = chartData.length > 0 ? {\n              total_spend: chartData.reduce((sum, day) => sum + (parseFloat(day.spend) || 0), 0),\n              total_revenue: chartData.reduce((sum, day) => sum + (parseFloat(day.estimated_revenue_usd) || 0), 0),\n              avg_roas: chartData.reduce((sum, day) => sum + (parseFloat(day.estimated_roas) || 0), 0) / chartData.length,\n              avg_ctr: chartData.reduce((sum, day) => sum + (parseFloat(day.ctr) || 0), 0) / chartData.length\n            } : {};\n            setModalData({\n              trendData: chartData.map(day => ({\n                date: day.date,\n                spend: parseFloat(day.spend) || 0,\n                revenue_usd: parseFloat(day.estimated_revenue_usd) || 0,\n                total_trials_started: parseInt(day.mixpanel_trials) || 0,\n                roas: parseFloat(day.estimated_roas) || 0,\n                ctr: (parseFloat(day.clicks) || 0) / (parseFloat(day.impressions) || 1) * 100,\n                impressions: parseInt(day.impressions) || 0,\n                clicks: parseInt(day.clicks) || 0\n              })),\n              summaryStats,\n              entityInfo: {\n                name: entityName,\n                type: entityType,\n                id: entityId,\n                dateRange: response.date_range\n              }\n            });\n          } else {\n            throw new Error(response.error || 'Failed to load chart data');\n          }\n        } catch (err) {\n          console.error('Error fetching graph modal data:', err);\n          setError(err.message || 'Failed to load graph data. Please try again later.');\n        } finally {\n          setIsLoading(false);\n        }\n      };\n      fetchModalData();\n    }\n  }, [isOpen, data, dashboardParams]);\n  if (!isOpen || !data) return null;\n  const formatCurrency = value => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(value || 0);\n  };\n  const formatNumber = (value, decimals = 0) => {\n    return new Intl.NumberFormat('en-US', {\n      minimumFractionDigits: decimals,\n      maximumFractionDigits: decimals\n    }).format(value || 0);\n  };\n  const formatPercentage = (value, decimals = 2) => {\n    return `${formatNumber((value || 0) * 100, decimals)}%`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `fixed inset-0 z-50 overflow-y-auto ${isOpen ? 'block' : 'hidden'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 transition-opacity\",\n        \"aria-hidden\": \"true\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute inset-0 bg-black/50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"hidden sm:inline-block sm:align-middle sm:h-screen\",\n        \"aria-hidden\": \"true\",\n        children: \"\\u200B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline-block align-bottom bg-white dark:bg-gray-800 rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-6xl sm:w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white dark:bg-gray-800 px-4 pt-5 pb-4 sm:p-6 sm:pb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sm:flex sm:items-start\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left w-full\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-xl leading-6 font-semibold text-gray-900 dark:text-gray-100\",\n                id: \"modal-title\",\n                children: [\"Performance Trends: \", modalData.entityInfo.name || data.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: onClose,\n                className: \"absolute top-4 right-4 p-1 text-gray-400 hover:text-gray-600 dark:text-gray-500 dark:hover:text-gray-300\",\n                children: /*#__PURE__*/_jsxDEV(X, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-4\",\n                children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-center items-center h-64\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 21\n                }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center text-red-500 p-4\",\n                  children: error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"space-y-8\",\n                  children: [modalData.summaryStats && Object.keys(modalData.summaryStats).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"grid grid-cols-2 md:grid-cols-4 gap-4 p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-2xl font-bold text-blue-600\",\n                        children: formatCurrency(modalData.summaryStats.total_spend)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 147,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-sm text-gray-600 dark:text-gray-400\",\n                        children: \"Total Spend\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 148,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 146,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-2xl font-bold text-green-600\",\n                        children: formatCurrency(modalData.summaryStats.total_revenue)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 151,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-sm text-gray-600 dark:text-gray-400\",\n                        children: \"Total Revenue\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 152,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 150,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-2xl font-bold text-purple-600\",\n                        children: formatNumber(modalData.summaryStats.avg_roas, 2)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 155,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-sm text-gray-600 dark:text-gray-400\",\n                        children: \"Avg ROAS\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 156,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 154,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-2xl font-bold text-orange-600\",\n                        children: formatPercentage(modalData.summaryStats.avg_ctr)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 159,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text-sm text-gray-600 dark:text-gray-400\",\n                        children: \"Avg CTR\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 160,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 158,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"text-lg font-medium mb-2 dark:text-gray-100\",\n                      children: \"Daily Performance Trends\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 167,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                      width: \"100%\",\n                      height: 400,\n                      children: /*#__PURE__*/_jsxDEV(LineChart, {\n                        data: modalData.trendData,\n                        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                          strokeDasharray: \"3 3\",\n                          stroke: \"#4A5568\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 170,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                          dataKey: \"date\",\n                          stroke: \"#A0AEC0\",\n                          tick: {\n                            fontSize: 12\n                          },\n                          tickFormatter: value => {\n                            const date = new Date(value);\n                            return `${date.getMonth() + 1}/${date.getDate()}`;\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 171,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                          yAxisId: \"left\",\n                          label: {\n                            value: 'USD / Count',\n                            angle: -90,\n                            position: 'insideLeft',\n                            fill: '#A0AEC0'\n                          },\n                          stroke: \"#A0AEC0\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 180,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                          yAxisId: \"right\",\n                          orientation: \"right\",\n                          label: {\n                            value: 'ROAS',\n                            angle: 90,\n                            position: 'insideRight',\n                            fill: '#A0AEC0'\n                          },\n                          stroke: \"#A0AEC0\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 181,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                          contentStyle: {\n                            backgroundColor: '#2D3748',\n                            borderColor: '#4A5568'\n                          },\n                          itemStyle: {\n                            color: '#E2E8F0'\n                          },\n                          labelFormatter: value => `Date: ${value}`,\n                          formatter: (value, name) => {\n                            if (name === 'Spend (USD)' || name === 'Revenue (USD)') {\n                              return [formatCurrency(value), name];\n                            } else if (name === 'ROAS') {\n                              return [formatNumber(value, 2), name];\n                            } else if (name === 'CTR') {\n                              return [formatPercentage(value), name];\n                            }\n                            return [formatNumber(value), name];\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 182,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Legend, {\n                          wrapperStyle: {\n                            color: '#A0AEC0'\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 197,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Line, {\n                          yAxisId: \"left\",\n                          type: \"monotone\",\n                          dataKey: \"spend\",\n                          stroke: \"#8884d8\",\n                          name: \"Spend (USD)\",\n                          strokeWidth: 2\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 198,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Line, {\n                          yAxisId: \"left\",\n                          type: \"monotone\",\n                          dataKey: \"revenue_usd\",\n                          stroke: \"#82ca9d\",\n                          name: \"Revenue (USD)\",\n                          strokeWidth: 2\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 199,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Line, {\n                          yAxisId: \"left\",\n                          type: \"monotone\",\n                          dataKey: \"total_trials_started\",\n                          stroke: \"#ffc658\",\n                          name: \"Trials Started\",\n                          strokeWidth: 2\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 200,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Line, {\n                          yAxisId: \"right\",\n                          type: \"monotone\",\n                          dataKey: \"roas\",\n                          stroke: \"#ff7300\",\n                          name: \"ROAS\",\n                          strokeWidth: 2\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 201,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Line, {\n                          yAxisId: \"right\",\n                          type: \"monotone\",\n                          dataKey: \"ctr\",\n                          stroke: \"#8dd1e1\",\n                          name: \"CTR\",\n                          strokeWidth: 2\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 202,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 169,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 168,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"grid grid-cols-1 md:grid-cols-2 gap-8\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                        className: \"text-lg font-medium mb-2 dark:text-gray-100\",\n                        children: \"Impressions vs Clicks\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 210,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                        width: \"100%\",\n                        height: 250,\n                        children: /*#__PURE__*/_jsxDEV(BarChart, {\n                          data: modalData.trendData,\n                          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                            strokeDasharray: \"3 3\",\n                            stroke: \"#4A5568\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 213,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                            dataKey: \"date\",\n                            stroke: \"#A0AEC0\",\n                            tick: {\n                              fontSize: 10\n                            },\n                            tickFormatter: value => {\n                              const date = new Date(value);\n                              return `${date.getMonth() + 1}/${date.getDate()}`;\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 214,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                            stroke: \"#A0AEC0\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 223,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                            contentStyle: {\n                              backgroundColor: '#2D3748',\n                              borderColor: '#4A5568'\n                            },\n                            itemStyle: {\n                              color: '#E2E8F0'\n                            },\n                            formatter: (value, name) => [formatNumber(value), name]\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 224,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                            dataKey: \"impressions\",\n                            fill: \"#82ca9d\",\n                            name: \"Impressions\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 229,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                            dataKey: \"clicks\",\n                            fill: \"#8884d8\",\n                            name: \"Clicks\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 230,\n                            columnNumber: 31\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 212,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 211,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                        className: \"text-lg font-medium mb-2 dark:text-gray-100\",\n                        children: \"Cost Metrics\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 235,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                        width: \"100%\",\n                        height: 250,\n                        children: /*#__PURE__*/_jsxDEV(LineChart, {\n                          data: modalData.trendData,\n                          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                            strokeDasharray: \"3 3\",\n                            stroke: \"#4A5568\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 238,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                            dataKey: \"date\",\n                            stroke: \"#A0AEC0\",\n                            tick: {\n                              fontSize: 10\n                            },\n                            tickFormatter: value => {\n                              const date = new Date(value);\n                              return `${date.getMonth() + 1}/${date.getDate()}`;\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 239,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                            stroke: \"#A0AEC0\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 248,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                            contentStyle: {\n                              backgroundColor: '#2D3748',\n                              borderColor: '#4A5568'\n                            },\n                            itemStyle: {\n                              color: '#E2E8F0'\n                            },\n                            formatter: (value, name) => {\n                              if (name === 'CPC' || name === 'CPM') {\n                                return [formatCurrency(value), name];\n                              }\n                              return [formatNumber(value, 2), name];\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 249,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(Line, {\n                            type: \"monotone\",\n                            dataKey: \"cpc\",\n                            stroke: \"#ff7300\",\n                            name: \"CPC\",\n                            strokeWidth: 2\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 259,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(Line, {\n                            type: \"monotone\",\n                            dataKey: \"cpm\",\n                            stroke: \"#8dd1e1\",\n                            name: \"CPM\",\n                            strokeWidth: 2\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 260,\n                            columnNumber: 31\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 237,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 236,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 234,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-50 dark:bg-gray-700 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onClose,\n            className: \"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 dark:border-gray-600 shadow-sm px-4 py-2 bg-white dark:bg-gray-800 text-base font-medium text-gray-700 dark:text-gray-200 hover:bg-gray-50 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(GraphModal, \"6jHczrBXnvZ6d8tsWzb+s/wLOmI=\");\n_c = GraphModal;\nvar _c;\n$RefreshReg$(_c, \"GraphModal\");","map":{"version":3,"names":["React","useEffect","useState","X","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","BarChart","Bar","dashboardApi","jsxDEV","_jsxDEV","GraphModal","isOpen","onClose","data","dashboardParams","_s","modalData","setModalData","trendData","summaryStats","entityInfo","isLoading","setIsLoading","error","setError","fetchModalData","entityType","entityId","entityName","id","startsWith","replace","campaign_name","name","adset_name","ad_name","Error","chartParams","entity_type","entity_id","breakdown","start_date","end_date","response","getAnalyticsChartData","success","chartData","chart_data","length","total_spend","reduce","sum","day","parseFloat","spend","total_revenue","estimated_revenue_usd","avg_roas","estimated_roas","avg_ctr","ctr","map","date","revenue_usd","total_trials_started","parseInt","mixpanel_trials","roas","clicks","impressions","type","dateRange","date_range","err","console","message","formatCurrency","value","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","formatNumber","decimals","formatPercentage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","Object","keys","width","height","strokeDasharray","stroke","dataKey","tick","fontSize","tickFormatter","Date","getMonth","getDate","yAxisId","label","angle","position","fill","orientation","contentStyle","backgroundColor","borderColor","itemStyle","color","labelFormatter","formatter","wrapperStyle","strokeWidth","_c","$RefreshReg$"],"sources":["/Users/joshuakaufman/untitled folder 3/orchestrator/dashboard/client/src/components/GraphModal.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { X } from 'lucide-react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, BarChart, Bar } from 'recharts';\nimport { dashboardApi } from '../services/dashboardApi';\n\nexport const GraphModal = ({ isOpen, onClose, data, dashboardParams }) => {\n  const [modalData, setModalData] = useState({\n    trendData: [],\n    summaryStats: {},\n    entityInfo: {}\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (isOpen && data && dashboardParams) {\n      const fetchModalData = async () => {\n        setIsLoading(true);\n        setError(null);\n        try {\n          // Determine entity type and ID based on the data structure\n          let entityType, entityId, entityName;\n          \n          if (data.id && data.id.startsWith('campaign_')) {\n            entityType = 'campaign';\n            entityId = data.id.replace('campaign_', '');\n            entityName = data.campaign_name || data.name;\n          } else if (data.id && data.id.startsWith('adset_')) {\n            entityType = 'adset';\n            entityId = data.id.replace('adset_', '');\n            entityName = data.adset_name || data.name;\n          } else if (data.id && data.id.startsWith('ad_')) {\n            entityType = 'ad';\n            entityId = data.id.replace('ad_', '');\n            entityName = data.ad_name || data.name;\n          } else {\n            throw new Error('Unable to determine entity type from data');\n          }\n\n          const chartParams = {\n            entity_type: entityType,\n            entity_id: entityId,\n            breakdown: dashboardParams.breakdown || 'all',\n            start_date: dashboardParams.start_date,\n            end_date: dashboardParams.end_date\n          };\n\n          const response = await dashboardApi.getAnalyticsChartData(chartParams);\n          \n          if (response.success) {\n            // Analytics chart data returns chart_data array with daily metrics\n            const chartData = response.chart_data || [];\n            \n            // Calculate summary stats from chart data\n            const summaryStats = chartData.length > 0 ? {\n              total_spend: chartData.reduce((sum, day) => sum + (parseFloat(day.spend) || 0), 0),\n              total_revenue: chartData.reduce((sum, day) => sum + (parseFloat(day.estimated_revenue_usd) || 0), 0),\n              avg_roas: chartData.reduce((sum, day) => sum + (parseFloat(day.estimated_roas) || 0), 0) / chartData.length,\n              avg_ctr: chartData.reduce((sum, day) => sum + (parseFloat(day.ctr) || 0), 0) / chartData.length\n            } : {};\n            \n            setModalData({\n              trendData: chartData.map(day => ({\n                date: day.date,\n                spend: parseFloat(day.spend) || 0,\n                revenue_usd: parseFloat(day.estimated_revenue_usd) || 0,\n                total_trials_started: parseInt(day.mixpanel_trials) || 0,\n                roas: parseFloat(day.estimated_roas) || 0,\n                ctr: (parseFloat(day.clicks) || 0) / (parseFloat(day.impressions) || 1) * 100,\n                impressions: parseInt(day.impressions) || 0,\n                clicks: parseInt(day.clicks) || 0\n              })),\n              summaryStats,\n              entityInfo: {\n                name: entityName,\n                type: entityType,\n                id: entityId,\n                dateRange: response.date_range\n              }\n            });\n          } else {\n            throw new Error(response.error || 'Failed to load chart data');\n          }\n        } catch (err) {\n          console.error('Error fetching graph modal data:', err);\n          setError(err.message || 'Failed to load graph data. Please try again later.');\n        } finally {\n          setIsLoading(false);\n        }\n      };\n      fetchModalData();\n    }\n  }, [isOpen, data, dashboardParams]);\n\n  if (!isOpen || !data) return null;\n\n  const formatCurrency = (value) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(value || 0);\n  };\n\n  const formatNumber = (value, decimals = 0) => {\n    return new Intl.NumberFormat('en-US', {\n      minimumFractionDigits: decimals,\n      maximumFractionDigits: decimals,\n    }).format(value || 0);\n  };\n\n  const formatPercentage = (value, decimals = 2) => {\n    return `${formatNumber((value || 0) * 100, decimals)}%`;\n  };\n\n  return (\n    <div className={`fixed inset-0 z-50 overflow-y-auto ${isOpen ? 'block' : 'hidden'}`}>\n      <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n        <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\n          <div className=\"absolute inset-0 bg-black/50\"></div>\n        </div>\n        <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\n        <div className=\"inline-block align-bottom bg-white dark:bg-gray-800 rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-6xl sm:w-full\">\n          <div className=\"bg-white dark:bg-gray-800 px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\n            <div className=\"sm:flex sm:items-start\">\n              <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left w-full\">\n                <h3 className=\"text-xl leading-6 font-semibold text-gray-900 dark:text-gray-100\" id=\"modal-title\">\n                  Performance Trends: {modalData.entityInfo.name || data.name}\n                </h3>\n                <button onClick={onClose} className=\"absolute top-4 right-4 p-1 text-gray-400 hover:text-gray-600 dark:text-gray-500 dark:hover:text-gray-300\">\n                  <X size={20} />\n                </button>\n                <div className=\"mt-4\">\n                  {isLoading ? (\n                    <div className=\"flex justify-center items-center h-64\">\n                      <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500\"></div>\n                    </div>\n                  ) : error ? (\n                    <div className=\"text-center text-red-500 p-4\">{error}</div>\n                  ) : (\n                    <div className=\"space-y-8\">\n                      {/* Summary Stats */}\n                      {modalData.summaryStats && Object.keys(modalData.summaryStats).length > 0 && (\n                        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\">\n                          <div className=\"text-center\">\n                            <div className=\"text-2xl font-bold text-blue-600\">{formatCurrency(modalData.summaryStats.total_spend)}</div>\n                            <div className=\"text-sm text-gray-600 dark:text-gray-400\">Total Spend</div>\n                          </div>\n                          <div className=\"text-center\">\n                            <div className=\"text-2xl font-bold text-green-600\">{formatCurrency(modalData.summaryStats.total_revenue)}</div>\n                            <div className=\"text-sm text-gray-600 dark:text-gray-400\">Total Revenue</div>\n                          </div>\n                          <div className=\"text-center\">\n                            <div className=\"text-2xl font-bold text-purple-600\">{formatNumber(modalData.summaryStats.avg_roas, 2)}</div>\n                            <div className=\"text-sm text-gray-600 dark:text-gray-400\">Avg ROAS</div>\n                          </div>\n                          <div className=\"text-center\">\n                            <div className=\"text-2xl font-bold text-orange-600\">{formatPercentage(modalData.summaryStats.avg_ctr)}</div>\n                            <div className=\"text-sm text-gray-600 dark:text-gray-400\">Avg CTR</div>\n                          </div>\n                        </div>\n                      )}\n\n                      {/* Trend Chart */}\n                      <div>\n                        <h3 className=\"text-lg font-medium mb-2 dark:text-gray-100\">Daily Performance Trends</h3>\n                        <ResponsiveContainer width=\"100%\" height={400}>\n                          <LineChart data={modalData.trendData}>\n                            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#4A5568\" />\n                            <XAxis \n                              dataKey=\"date\" \n                              stroke=\"#A0AEC0\"\n                              tick={{ fontSize: 12 }}\n                              tickFormatter={(value) => {\n                                const date = new Date(value);\n                                return `${date.getMonth() + 1}/${date.getDate()}`;\n                              }}\n                            />\n                            <YAxis yAxisId=\"left\" label={{ value: 'USD / Count', angle: -90, position: 'insideLeft', fill: '#A0AEC0' }} stroke=\"#A0AEC0\" />\n                            <YAxis yAxisId=\"right\" orientation=\"right\" label={{ value: 'ROAS', angle: 90, position: 'insideRight', fill: '#A0AEC0' }} stroke=\"#A0AEC0\" />\n                            <Tooltip \n                              contentStyle={{ backgroundColor: '#2D3748', borderColor: '#4A5568' }} \n                              itemStyle={{ color: '#E2E8F0' }}\n                              labelFormatter={(value) => `Date: ${value}`}\n                              formatter={(value, name) => {\n                                if (name === 'Spend (USD)' || name === 'Revenue (USD)') {\n                                  return [formatCurrency(value), name];\n                                } else if (name === 'ROAS') {\n                                  return [formatNumber(value, 2), name];\n                                } else if (name === 'CTR') {\n                                  return [formatPercentage(value), name];\n                                }\n                                return [formatNumber(value), name];\n                              }}\n                            />\n                            <Legend wrapperStyle={{ color: '#A0AEC0' }} />\n                            <Line yAxisId=\"left\" type=\"monotone\" dataKey=\"spend\" stroke=\"#8884d8\" name=\"Spend (USD)\" strokeWidth={2} />\n                            <Line yAxisId=\"left\" type=\"monotone\" dataKey=\"revenue_usd\" stroke=\"#82ca9d\" name=\"Revenue (USD)\" strokeWidth={2} />\n                            <Line yAxisId=\"left\" type=\"monotone\" dataKey=\"total_trials_started\" stroke=\"#ffc658\" name=\"Trials Started\" strokeWidth={2} />\n                            <Line yAxisId=\"right\" type=\"monotone\" dataKey=\"roas\" stroke=\"#ff7300\" name=\"ROAS\" strokeWidth={2} />\n                            <Line yAxisId=\"right\" type=\"monotone\" dataKey=\"ctr\" stroke=\"#8dd1e1\" name=\"CTR\" strokeWidth={2} />\n                          </LineChart>\n                        </ResponsiveContainer>\n                      </div>\n\n                      {/* Additional Metrics Charts */}\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n                        <div>\n                          <h3 className=\"text-lg font-medium mb-2 dark:text-gray-100\">Impressions vs Clicks</h3>\n                          <ResponsiveContainer width=\"100%\" height={250}>\n                            <BarChart data={modalData.trendData}>\n                              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#4A5568\" />\n                              <XAxis \n                                dataKey=\"date\" \n                                stroke=\"#A0AEC0\"\n                                tick={{ fontSize: 10 }}\n                                tickFormatter={(value) => {\n                                  const date = new Date(value);\n                                  return `${date.getMonth() + 1}/${date.getDate()}`;\n                                }}\n                              />\n                              <YAxis stroke=\"#A0AEC0\" />\n                              <Tooltip \n                                contentStyle={{ backgroundColor: '#2D3748', borderColor: '#4A5568' }} \n                                itemStyle={{ color: '#E2E8F0' }}\n                                formatter={(value, name) => [formatNumber(value), name]}\n                              />\n                              <Bar dataKey=\"impressions\" fill=\"#82ca9d\" name=\"Impressions\" />\n                              <Bar dataKey=\"clicks\" fill=\"#8884d8\" name=\"Clicks\" />\n                            </BarChart>\n                          </ResponsiveContainer>\n                        </div>\n                        <div>\n                          <h3 className=\"text-lg font-medium mb-2 dark:text-gray-100\">Cost Metrics</h3>\n                          <ResponsiveContainer width=\"100%\" height={250}>\n                            <LineChart data={modalData.trendData}>\n                              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#4A5568\" />\n                              <XAxis \n                                dataKey=\"date\" \n                                stroke=\"#A0AEC0\"\n                                tick={{ fontSize: 10 }}\n                                tickFormatter={(value) => {\n                                  const date = new Date(value);\n                                  return `${date.getMonth() + 1}/${date.getDate()}`;\n                                }}\n                              />\n                              <YAxis stroke=\"#A0AEC0\" />\n                              <Tooltip \n                                contentStyle={{ backgroundColor: '#2D3748', borderColor: '#4A5568' }} \n                                itemStyle={{ color: '#E2E8F0' }}\n                                formatter={(value, name) => {\n                                  if (name === 'CPC' || name === 'CPM') {\n                                    return [formatCurrency(value), name];\n                                  }\n                                  return [formatNumber(value, 2), name];\n                                }}\n                              />\n                              <Line type=\"monotone\" dataKey=\"cpc\" stroke=\"#ff7300\" name=\"CPC\" strokeWidth={2} />\n                              <Line type=\"monotone\" dataKey=\"cpm\" stroke=\"#8dd1e1\" name=\"CPM\" strokeWidth={2} />\n                            </LineChart>\n                          </ResponsiveContainer>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"bg-gray-50 dark:bg-gray-700 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n            <button\n              type=\"button\"\n              onClick={onClose}\n              className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 dark:border-gray-600 shadow-sm px-4 py-2 bg-white dark:bg-gray-800 text-base font-medium text-gray-700 dark:text-gray-200 hover:bg-gray-50 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}