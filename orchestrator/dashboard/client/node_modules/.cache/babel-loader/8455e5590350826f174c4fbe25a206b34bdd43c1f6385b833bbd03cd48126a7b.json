{"ast":null,"code":"import React,{useState,useEffect}from'react';import{api}from'../../services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const HistoricalDataViewer=()=>{const[configurations,setConfigurations]=useState([]);const[configData,setConfigData]=useState({});const[loading,setLoading]=useState(true);const[expandedConfigs,setExpandedConfigs]=useState(new Set());const[deletingConfig,setDeletingConfig]=useState(null);// Load all configurations and their data on component mount\nuseEffect(()=>{loadAllData();},[]);const loadAllData=async()=>{setLoading(true);try{// Get all configurations\nconst configs=await api.getHistoricalConfigurations();setConfigurations(configs);// Load data for each configuration\nconst dataPromises=configs.map(async config=>{if(config.day_count>0){try{const data=await api.exportHistoricalData({start_date:config.earliest_date,end_date:config.latest_date,fields:config.fields,breakdowns:config.breakdowns});return{configHash:config.config_hash,data};}catch(error){console.error(\"Error loading data for config \".concat(config.config_hash,\":\"),error);return{configHash:config.config_hash,data:null};}}return{configHash:config.config_hash,data:null};});const results=await Promise.all(dataPromises);const dataMap={};results.forEach(_ref=>{let{configHash,data}=_ref;dataMap[configHash]=data;});setConfigData(dataMap);}catch(error){console.error('Error loading configurations:',error);}finally{setLoading(false);}};const deleteConfiguration=async configHash=>{if(!window.confirm('Are you sure you want to delete this entire dataset? This action cannot be undone.')){return;}setDeletingConfig(configHash);try{await api.deleteHistoricalConfiguration(configHash);// Reload data to reflect the deletion\nawait loadAllData();}catch(error){console.error('Error deleting configuration:',error);alert('Failed to delete configuration. Please try again.');}finally{setDeletingConfig(null);}};const toggleConfigExpansion=configHash=>{const newExpanded=new Set(expandedConfigs);if(newExpanded.has(configHash)){newExpanded.delete(configHash);}else{newExpanded.add(configHash);}setExpandedConfigs(newExpanded);};const processDataForTable=exportData=>{if(!exportData||!exportData.data||exportData.data.length===0){return null;}const fields=exportData.config.fields.split(',').map(f=>f.trim());const hasBreakdowns=exportData.config.breakdowns&&exportData.config.breakdowns.trim();// Get all dates (should now be unique since backend duplicates are fixed)\nconst dates=exportData.data.map(d=>d.date).sort();// Process data by date\nconst dateData={};const businessMetrics={};exportData.data.forEach(dayData=>{const date=dayData.date;// Extract business metrics if available\nif(dayData.business_metrics){businessMetrics[date]=dayData.business_metrics;}// Extract metaData from the API response structure\nlet metaData=[];if(dayData.data){// Historical export API structure: dayData.data.data.data contains the actual records array\nif(dayData.data.data&&Array.isArray(dayData.data.data.data)){metaData=dayData.data.data.data;}else if(Array.isArray(dayData.data.data)){metaData=dayData.data.data;}else if(Array.isArray(dayData.data)){metaData=dayData.data;}else{console.warn('Unexpected data structure for date:',date,dayData.data);metaData=[];}}dateData[date]=processMetricsForDate(metaData,fields,hasBreakdowns);});return{dates,dateData,fields,hasBreakdowns,config:exportData.config,businessMetrics};};const processMetricsForDate=(records,fields,hasBreakdowns)=>{// Ensure records is always an array\nif(!records){return{};}if(!Array.isArray(records)){console.warn('processMetricsForDate: records is not an array:',typeof records,records);return{};}if(records.length===0){return{};}const result={};fields.forEach(field=>{if(isNumericField(field)){// For numeric fields, sum all values\nconst total=records.reduce((sum,record)=>{const value=parseFloat(record[field])||0;return sum+value;},0);result[field]=total;}else if(isCountableField(field)){// For text fields, count unique values\nconst uniqueValues=new Set();records.forEach(record=>{if(record[field]){uniqueValues.add(record[field]);}});result[field]=uniqueValues.size;}else{// For other fields, just indicate presence\nresult[field]=records.length>0?'Data':'No Data';}});// If there are breakdowns, also process breakdown-specific data\nif(hasBreakdowns){result._breakdownData=processBreakdownData(records,fields);}return result;};const processBreakdownData=(records,fields)=>{const breakdownGroups={};// Ensure records is an array\nif(!Array.isArray(records)){console.warn('processBreakdownData: records is not an array:',typeof records,records);return breakdownGroups;}records.forEach(record=>{// Get breakdown values (all keys that aren't in fields)\nconst breakdownKey=Object.keys(record).filter(key=>!fields.includes(key)&&!['date_start','date_stop'].includes(key)).map(key=>\"\".concat(key,\":\").concat(record[key])).join(' | ');if(!breakdownGroups[breakdownKey]){breakdownGroups[breakdownKey]={};}fields.forEach(field=>{if(isNumericField(field)){const value=parseFloat(record[field])||0;breakdownGroups[breakdownKey][field]=(breakdownGroups[breakdownKey][field]||0)+value;}});});return breakdownGroups;};const isNumericField=field=>{const numericFields=['impressions','clicks','spend','reach','frequency','cpc','cpm','cpp','unique_clicks','unique_ctr','inline_link_clicks','outbound_clicks','estimated_ad_recallers','estimated_ad_recall_rate'];return numericFields.includes(field)||field.includes('action')||field.includes('conversion');};const isCountableField=field=>{const countableFields=['ad_name','campaign_name','adset_name','ad_id','campaign_id','adset_id'];return countableFields.includes(field);};const formatValue=(field,value)=>{if(typeof value==='number'){if(field==='spend'||field.includes('cost')){return\"$\".concat(value.toFixed(2));}else if(field.includes('rate')||field.includes('ctr')){return\"\".concat((value*100).toFixed(2),\"%\");}else if(Number.isInteger(value)){return value.toLocaleString();}else{return value.toFixed(2);}}else if(typeof value==='number'&&isCountableField(field)){return\"\".concat(value,\" \").concat(field.includes('campaign')?'campaigns':field.includes('ad')?'ads':'items');}return value;};const renderDataTable=(config,tableData)=>{if(!tableData){return/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-500 text-center py-4\",children:\"No data available for this configuration\"});}const{dates,dateData,fields,hasBreakdowns,businessMetrics}=tableData;const configHash=config.config_hash;return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[businessMetrics&&Object.keys(businessMetrics).length>0&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-md font-medium mb-3 text-blue-800\",children:\"\\uD83D\\uDCB0 Business Metrics Summary\"}),/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full border border-gray-200 bg-blue-50\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-blue-100\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"px-4 py-2 text-left text-sm font-medium text-blue-800 border-r\",children:\"Business Concept\"}),dates.map(date=>/*#__PURE__*/_jsx(\"th\",{className:\"px-3 py-2 text-center text-sm font-medium text-blue-800 border-r\",children:date},\"\".concat(configHash,\"-bm-header-\").concat(date)))]})}),/*#__PURE__*/_jsx(\"tbody\",{className:\"bg-white\",children:(()=>{const firstDateWithData=dates.find(date=>businessMetrics[date]&&Object.keys(businessMetrics[date]).length>0);if(!firstDateWithData)return null;const conceptNames=Object.keys(businessMetrics[firstDateWithData]);return conceptNames.map((conceptName,conceptIndex)=>/*#__PURE__*/_jsxs(\"tr\",{className:conceptIndex%2===0?'bg-blue-25':'bg-white',children:[/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-2 text-sm font-medium text-blue-900 border-r capitalize\",children:conceptName==='trial_started'?'Trial Started':conceptName==='initial_purchase'?'Initial Purchase':conceptName.replace(/_/g,' ')}),dates.map(date=>{var _businessMetrics$date;return/*#__PURE__*/_jsx(\"td\",{className:\"px-3 py-2 text-sm text-blue-800 text-center border-r font-medium\",children:businessMetrics[date]&&((_businessMetrics$date=businessMetrics[date][conceptName])===null||_businessMetrics$date===void 0?void 0:_businessMetrics$date.count)!==undefined?businessMetrics[date][conceptName].count:'-'},\"\".concat(configHash,\"-bm-\").concat(conceptName,\"-\").concat(date));})]},\"\".concat(configHash,\"-bm-\").concat(conceptName)));})()})]})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-md font-medium mb-3 text-gray-800\",children:\"\\uD83D\\uDCCA Raw Data Metrics\"}),/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full border border-gray-200\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-gray-50\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"px-4 py-2 text-left text-sm font-medium text-gray-700 border-r\",children:\"Metric\"}),dates.map(date=>/*#__PURE__*/_jsx(\"th\",{className:\"px-3 py-2 text-center text-sm font-medium text-gray-700 border-r\",children:date},\"\".concat(configHash,\"-rm-header-\").concat(date)))]})}),/*#__PURE__*/_jsx(\"tbody\",{className:\"bg-white\",children:fields.map((field,fieldIndex)=>/*#__PURE__*/_jsxs(\"tr\",{className:fieldIndex%2===0?'bg-gray-50':'bg-white',children:[/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-2 text-sm font-medium text-gray-900 border-r\",children:field}),dates.map(date=>/*#__PURE__*/_jsx(\"td\",{className:\"px-3 py-2 text-sm text-gray-700 text-center border-r\",children:dateData[date]&&dateData[date][field]!==undefined?formatValue(field,dateData[date][field]):'-'},\"\".concat(configHash,\"-rm-\").concat(field,\"-\").concat(date)))]},\"\".concat(configHash,\"-rm-\").concat(field)))})]})})]}),hasBreakdowns&&Object.keys(dateData).some(date=>dateData[date]._breakdownData)&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"text-sm font-medium text-gray-700 mb-3\",children:\"Breakdown Data\"}),dates.map(date=>{const breakdownData=dateData[date]._breakdownData;if(!breakdownData||Object.keys(breakdownData).length===0)return null;return/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"h6\",{className:\"text-xs font-medium text-gray-600 mb-2\",children:date}),/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full border border-gray-200 text-xs\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-gray-100\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"px-2 py-1 text-left text-gray-700 border-r\",children:\"Breakdown\"}),fields.filter(isNumericField).map(field=>/*#__PURE__*/_jsx(\"th\",{className:\"px-2 py-1 text-center text-gray-700 border-r\",children:field},\"\".concat(configHash,\"-bd-\").concat(date,\"-header-\").concat(field)))]})}),/*#__PURE__*/_jsx(\"tbody\",{children:Object.entries(breakdownData).map(_ref2=>{let[breakdownKey,values]=_ref2;return/*#__PURE__*/_jsxs(\"tr\",{className:\"bg-white\",children:[/*#__PURE__*/_jsx(\"td\",{className:\"px-2 py-1 text-gray-900 border-r\",children:breakdownKey}),fields.filter(isNumericField).map(field=>/*#__PURE__*/_jsx(\"td\",{className:\"px-2 py-1 text-center text-gray-700 border-r\",children:formatValue(field,values[field]||0)},\"\".concat(configHash,\"-bd-\").concat(date,\"-\").concat(breakdownKey,\"-\").concat(field)))]},\"\".concat(configHash,\"-bd-\").concat(date,\"-\").concat(breakdownKey));})})]})})]},\"\".concat(configHash,\"-bd-\").concat(date));})]})]});};if(loading){return/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-center py-8\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500 mr-3\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Loading historical data...\"})]});}if(configurations.length===0){return/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8 text-gray-500\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"No historical data configurations found.\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm mt-2\",children:\"Start a historical collection job to see data here.\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium\",children:\"Historical Data Overview\"}),/*#__PURE__*/_jsx(\"button\",{onClick:loadAllData,className:\"text-sm text-blue-600 hover:text-blue-800\",children:\"Refresh Data\"})]}),configurations.map(config=>{const isExpanded=expandedConfigs.has(config.config_hash);const data=configData[config.config_hash];const tableData=data?processDataForTable(data):null;return/*#__PURE__*/_jsxs(\"div\",{className:\"border border-gray-200 rounded-lg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-4 bg-gray-50 cursor-pointer hover:bg-gray-100\",onClick:()=>toggleConfigExpansion(config.config_hash),children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"font-medium text-gray-900\",children:[\"Fields: \",config.fields]}),config.breakdowns&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-600\",children:[\"Breakdowns: \",config.breakdowns]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-500 mt-1\",children:[config.day_count,\" days \\u2022 \",config.earliest_date,\" to \",config.latest_date]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:e=>{e.stopPropagation();deleteConfiguration(config.config_hash);},disabled:deletingConfig===config.config_hash,className:\"px-2 py-1 text-xs bg-red-500 text-white rounded hover:bg-red-600 disabled:bg-gray-400\",title:\"Delete this entire dataset\",children:deletingConfig===config.config_hash?'Deleting...':'Delete'}),/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-400\",children:isExpanded?'−':'+'})]})]})}),isExpanded&&/*#__PURE__*/_jsx(\"div\",{className:\"p-4 border-t\",children:renderDataTable(config,tableData)})]},config.config_hash);})]});};export default HistoricalDataViewer;","map":{"version":3,"names":["React","useState","useEffect","api","jsx","_jsx","jsxs","_jsxs","HistoricalDataViewer","configurations","setConfigurations","configData","setConfigData","loading","setLoading","expandedConfigs","setExpandedConfigs","Set","deletingConfig","setDeletingConfig","loadAllData","configs","getHistoricalConfigurations","dataPromises","map","config","day_count","data","exportHistoricalData","start_date","earliest_date","end_date","latest_date","fields","breakdowns","configHash","config_hash","error","console","concat","results","Promise","all","dataMap","forEach","_ref","deleteConfiguration","window","confirm","deleteHistoricalConfiguration","alert","toggleConfigExpansion","newExpanded","has","delete","add","processDataForTable","exportData","length","split","f","trim","hasBreakdowns","dates","d","date","sort","dateData","businessMetrics","dayData","business_metrics","metaData","Array","isArray","warn","processMetricsForDate","records","result","field","isNumericField","total","reduce","sum","record","value","parseFloat","isCountableField","uniqueValues","size","_breakdownData","processBreakdownData","breakdownGroups","breakdownKey","Object","keys","filter","key","includes","join","numericFields","countableFields","formatValue","toFixed","Number","isInteger","toLocaleString","renderDataTable","tableData","className","children","firstDateWithData","find","conceptNames","conceptName","conceptIndex","replace","_businessMetrics$date","count","undefined","fieldIndex","some","breakdownData","entries","_ref2","values","onClick","isExpanded","e","stopPropagation","disabled","title"],"sources":["/Users/joshuakaufman/untitled folder 3/orchestrator/dashboard/client/src/components/meta/HistoricalDataViewer.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { api } from '../../services/api';\n\nconst HistoricalDataViewer = () => {\n  const [configurations, setConfigurations] = useState([]);\n  const [configData, setConfigData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [expandedConfigs, setExpandedConfigs] = useState(new Set());\n  const [deletingConfig, setDeletingConfig] = useState(null);\n\n  // Load all configurations and their data on component mount\n  useEffect(() => {\n    loadAllData();\n  }, []);\n\n  const loadAllData = async () => {\n    setLoading(true);\n    try {\n      // Get all configurations\n      const configs = await api.getHistoricalConfigurations();\n      setConfigurations(configs);\n\n      // Load data for each configuration\n      const dataPromises = configs.map(async (config) => {\n        if (config.day_count > 0) {\n          try {\n            const data = await api.exportHistoricalData({\n              start_date: config.earliest_date,\n              end_date: config.latest_date,\n              fields: config.fields,\n              breakdowns: config.breakdowns\n            });\n            return { configHash: config.config_hash, data };\n          } catch (error) {\n            console.error(`Error loading data for config ${config.config_hash}:`, error);\n            return { configHash: config.config_hash, data: null };\n          }\n        }\n        return { configHash: config.config_hash, data: null };\n      });\n\n      const results = await Promise.all(dataPromises);\n      const dataMap = {};\n      results.forEach(({ configHash, data }) => {\n        dataMap[configHash] = data;\n      });\n      \n      setConfigData(dataMap);\n    } catch (error) {\n      console.error('Error loading configurations:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const deleteConfiguration = async (configHash) => {\n    if (!window.confirm('Are you sure you want to delete this entire dataset? This action cannot be undone.')) {\n      return;\n    }\n\n    setDeletingConfig(configHash);\n    try {\n      await api.deleteHistoricalConfiguration(configHash);\n      // Reload data to reflect the deletion\n      await loadAllData();\n    } catch (error) {\n      console.error('Error deleting configuration:', error);\n      alert('Failed to delete configuration. Please try again.');\n    } finally {\n      setDeletingConfig(null);\n    }\n  };\n\n  const toggleConfigExpansion = (configHash) => {\n    const newExpanded = new Set(expandedConfigs);\n    if (newExpanded.has(configHash)) {\n      newExpanded.delete(configHash);\n    } else {\n      newExpanded.add(configHash);\n    }\n    setExpandedConfigs(newExpanded);\n  };\n\n  const processDataForTable = (exportData) => {\n    if (!exportData || !exportData.data || exportData.data.length === 0) {\n      return null;\n    }\n\n    const fields = exportData.config.fields.split(',').map(f => f.trim());\n    const hasBreakdowns = exportData.config.breakdowns && exportData.config.breakdowns.trim();\n    \n    // Get all dates (should now be unique since backend duplicates are fixed)\n    const dates = exportData.data.map(d => d.date).sort();\n    \n    // Process data by date\n    const dateData = {};\n    const businessMetrics = {};\n    \n    exportData.data.forEach(dayData => {\n      const date = dayData.date;\n      \n      // Extract business metrics if available\n      if (dayData.business_metrics) {\n        businessMetrics[date] = dayData.business_metrics;\n      }\n      \n      // Extract metaData from the API response structure\n      let metaData = [];\n      if (dayData.data) {\n        // Historical export API structure: dayData.data.data.data contains the actual records array\n        if (dayData.data.data && Array.isArray(dayData.data.data.data)) {\n          metaData = dayData.data.data.data;\n        } else if (Array.isArray(dayData.data.data)) {\n          metaData = dayData.data.data;\n        } else if (Array.isArray(dayData.data)) {\n          metaData = dayData.data;\n        } else {\n          console.warn('Unexpected data structure for date:', date, dayData.data);\n          metaData = [];\n        }\n      }\n      \n      dateData[date] = processMetricsForDate(metaData, fields, hasBreakdowns);\n    });\n\n    return {\n      dates,\n      dateData,\n      fields,\n      hasBreakdowns,\n      config: exportData.config,\n      businessMetrics\n    };\n  };\n\n  const processMetricsForDate = (records, fields, hasBreakdowns) => {\n    // Ensure records is always an array\n    if (!records) {\n      return {};\n    }\n    \n    if (!Array.isArray(records)) {\n      console.warn('processMetricsForDate: records is not an array:', typeof records, records);\n      return {};\n    }\n    \n    if (records.length === 0) {\n      return {};\n    }\n\n    const result = {};\n    \n    fields.forEach(field => {\n      if (isNumericField(field)) {\n        // For numeric fields, sum all values\n        const total = records.reduce((sum, record) => {\n          const value = parseFloat(record[field]) || 0;\n          return sum + value;\n        }, 0);\n        result[field] = total;\n      } else if (isCountableField(field)) {\n        // For text fields, count unique values\n        const uniqueValues = new Set();\n        records.forEach(record => {\n          if (record[field]) {\n            uniqueValues.add(record[field]);\n          }\n        });\n        result[field] = uniqueValues.size;\n      } else {\n        // For other fields, just indicate presence\n        result[field] = records.length > 0 ? 'Data' : 'No Data';\n      }\n    });\n\n    // If there are breakdowns, also process breakdown-specific data\n    if (hasBreakdowns) {\n      result._breakdownData = processBreakdownData(records, fields);\n    }\n\n    return result;\n  };\n\n  const processBreakdownData = (records, fields) => {\n    const breakdownGroups = {};\n    \n    // Ensure records is an array\n    if (!Array.isArray(records)) {\n      console.warn('processBreakdownData: records is not an array:', typeof records, records);\n      return breakdownGroups;\n    }\n    \n    records.forEach(record => {\n      // Get breakdown values (all keys that aren't in fields)\n      const breakdownKey = Object.keys(record)\n        .filter(key => !fields.includes(key) && !['date_start', 'date_stop'].includes(key))\n        .map(key => `${key}:${record[key]}`)\n        .join(' | ');\n      \n      if (!breakdownGroups[breakdownKey]) {\n        breakdownGroups[breakdownKey] = {};\n      }\n      \n      fields.forEach(field => {\n        if (isNumericField(field)) {\n          const value = parseFloat(record[field]) || 0;\n          breakdownGroups[breakdownKey][field] = (breakdownGroups[breakdownKey][field] || 0) + value;\n        }\n      });\n    });\n    \n    return breakdownGroups;\n  };\n\n  const isNumericField = (field) => {\n    const numericFields = [\n      'impressions', 'clicks', 'spend', 'reach', 'frequency', 'cpc', 'cpm', 'cpp',\n      'unique_clicks', 'unique_ctr', 'inline_link_clicks', 'outbound_clicks',\n      'estimated_ad_recallers', 'estimated_ad_recall_rate'\n    ];\n    return numericFields.includes(field) || field.includes('action') || field.includes('conversion');\n  };\n\n  const isCountableField = (field) => {\n    const countableFields = [\n      'ad_name', 'campaign_name', 'adset_name', 'ad_id', 'campaign_id', 'adset_id'\n    ];\n    return countableFields.includes(field);\n  };\n\n  const formatValue = (field, value) => {\n    if (typeof value === 'number') {\n      if (field === 'spend' || field.includes('cost')) {\n        return `$${value.toFixed(2)}`;\n      } else if (field.includes('rate') || field.includes('ctr')) {\n        return `${(value * 100).toFixed(2)}%`;\n      } else if (Number.isInteger(value)) {\n        return value.toLocaleString();\n      } else {\n        return value.toFixed(2);\n      }\n    } else if (typeof value === 'number' && isCountableField(field)) {\n      return `${value} ${field.includes('campaign') ? 'campaigns' : field.includes('ad') ? 'ads' : 'items'}`;\n    }\n    return value;\n  };\n\n  const renderDataTable = (config, tableData) => {\n    if (!tableData) {\n      return (\n        <div className=\"text-gray-500 text-center py-4\">\n          No data available for this configuration\n        </div>\n      );\n    }\n\n    const { dates, dateData, fields, hasBreakdowns, businessMetrics } = tableData;\n    const configHash = config.config_hash;\n\n    return (\n      <div className=\"space-y-6\">\n        {/* Business Metrics Section */}\n        {businessMetrics && Object.keys(businessMetrics).length > 0 && (\n          <div>\n            <h4 className=\"text-md font-medium mb-3 text-blue-800\">💰 Business Metrics Summary</h4>\n            <div className=\"overflow-x-auto\">\n              <table className=\"min-w-full border border-gray-200 bg-blue-50\">\n                <thead className=\"bg-blue-100\">\n                  <tr>\n                    <th className=\"px-4 py-2 text-left text-sm font-medium text-blue-800 border-r\">\n                      Business Concept\n                    </th>\n                    {dates.map(date => (\n                      <th key={`${configHash}-bm-header-${date}`} className=\"px-3 py-2 text-center text-sm font-medium text-blue-800 border-r\">\n                        {date}\n                      </th>\n                    ))}\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white\">\n                  {/* Get concept names from the first date that has data */}\n                  {(() => {\n                    const firstDateWithData = dates.find(date => businessMetrics[date] && Object.keys(businessMetrics[date]).length > 0);\n                    if (!firstDateWithData) return null;\n                    \n                    const conceptNames = Object.keys(businessMetrics[firstDateWithData]);\n                    return conceptNames.map((conceptName, conceptIndex) => (\n                      <tr key={`${configHash}-bm-${conceptName}`} className={conceptIndex % 2 === 0 ? 'bg-blue-25' : 'bg-white'}>\n                        <td className=\"px-4 py-2 text-sm font-medium text-blue-900 border-r capitalize\">\n                          {conceptName === 'trial_started' ? 'Trial Started' : \n                           conceptName === 'initial_purchase' ? 'Initial Purchase' : \n                           conceptName.replace(/_/g, ' ')}\n                        </td>\n                        {dates.map(date => (\n                          <td key={`${configHash}-bm-${conceptName}-${date}`} className=\"px-3 py-2 text-sm text-blue-800 text-center border-r font-medium\">\n                            {businessMetrics[date] && businessMetrics[date][conceptName]?.count !== undefined \n                              ? businessMetrics[date][conceptName].count\n                              : '-'\n                            }\n                          </td>\n                        ))}\n                      </tr>\n                    ));\n                  })()}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        )}\n        \n        {/* Raw Data Table */}\n        <div>\n          <h4 className=\"text-md font-medium mb-3 text-gray-800\">📊 Raw Data Metrics</h4>\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full border border-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-4 py-2 text-left text-sm font-medium text-gray-700 border-r\">\n                    Metric\n                  </th>\n                  {dates.map(date => (\n                    <th key={`${configHash}-rm-header-${date}`} className=\"px-3 py-2 text-center text-sm font-medium text-gray-700 border-r\">\n                      {date}\n                    </th>\n                  ))}\n                </tr>\n              </thead>\n              <tbody className=\"bg-white\">\n                {fields.map((field, fieldIndex) => (\n                  <tr key={`${configHash}-rm-${field}`} className={fieldIndex % 2 === 0 ? 'bg-gray-50' : 'bg-white'}>\n                    <td className=\"px-4 py-2 text-sm font-medium text-gray-900 border-r\">\n                      {field}\n                    </td>\n                    {dates.map(date => (\n                      <td key={`${configHash}-rm-${field}-${date}`} className=\"px-3 py-2 text-sm text-gray-700 text-center border-r\">\n                        {dateData[date] && dateData[date][field] !== undefined \n                          ? formatValue(field, dateData[date][field])\n                          : '-'\n                        }\n                      </td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        {/* Breakdown data if available */}\n        {hasBreakdowns && Object.keys(dateData).some(date => dateData[date]._breakdownData) && (\n          <div className=\"mt-6\">\n            <h5 className=\"text-sm font-medium text-gray-700 mb-3\">Breakdown Data</h5>\n            {dates.map(date => {\n              const breakdownData = dateData[date]._breakdownData;\n              if (!breakdownData || Object.keys(breakdownData).length === 0) return null;\n              \n              return (\n                <div key={`${configHash}-bd-${date}`} className=\"mb-4\">\n                  <h6 className=\"text-xs font-medium text-gray-600 mb-2\">{date}</h6>\n                  <div className=\"overflow-x-auto\">\n                    <table className=\"min-w-full border border-gray-200 text-xs\">\n                      <thead className=\"bg-gray-100\">\n                        <tr>\n                          <th className=\"px-2 py-1 text-left text-gray-700 border-r\">Breakdown</th>\n                          {fields.filter(isNumericField).map(field => (\n                            <th key={`${configHash}-bd-${date}-header-${field}`} className=\"px-2 py-1 text-center text-gray-700 border-r\">\n                              {field}\n                            </th>\n                          ))}\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {Object.entries(breakdownData).map(([breakdownKey, values]) => (\n                          <tr key={`${configHash}-bd-${date}-${breakdownKey}`} className=\"bg-white\">\n                            <td className=\"px-2 py-1 text-gray-900 border-r\">{breakdownKey}</td>\n                            {fields.filter(isNumericField).map(field => (\n                              <td key={`${configHash}-bd-${date}-${breakdownKey}-${field}`} className=\"px-2 py-1 text-center text-gray-700 border-r\">\n                                {formatValue(field, values[field] || 0)}\n                              </td>\n                            ))}\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center py-8\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500 mr-3\"></div>\n        <span>Loading historical data...</span>\n      </div>\n    );\n  }\n\n  if (configurations.length === 0) {\n    return (\n      <div className=\"text-center py-8 text-gray-500\">\n        <p>No historical data configurations found.</p>\n        <p className=\"text-sm mt-2\">Start a historical collection job to see data here.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex justify-between items-center\">\n        <h3 className=\"text-lg font-medium\">Historical Data Overview</h3>\n        <button \n          onClick={loadAllData}\n          className=\"text-sm text-blue-600 hover:text-blue-800\"\n        >\n          Refresh Data\n        </button>\n      </div>\n\n      {configurations.map(config => {\n        const isExpanded = expandedConfigs.has(config.config_hash);\n        const data = configData[config.config_hash];\n        const tableData = data ? processDataForTable(data) : null;\n\n        return (\n          <div key={config.config_hash} className=\"border border-gray-200 rounded-lg\">\n            <div \n              className=\"p-4 bg-gray-50 cursor-pointer hover:bg-gray-100\"\n              onClick={() => toggleConfigExpansion(config.config_hash)}\n            >\n              <div className=\"flex justify-between items-center\">\n                <div>\n                  <div className=\"font-medium text-gray-900\">\n                    Fields: {config.fields}\n                  </div>\n                  {config.breakdowns && (\n                    <div className=\"text-sm text-gray-600\">\n                      Breakdowns: {config.breakdowns}\n                    </div>\n                  )}\n                  <div className=\"text-sm text-gray-500 mt-1\">\n                    {config.day_count} days • {config.earliest_date} to {config.latest_date}\n                  </div>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <button\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      deleteConfiguration(config.config_hash);\n                    }}\n                    disabled={deletingConfig === config.config_hash}\n                    className=\"px-2 py-1 text-xs bg-red-500 text-white rounded hover:bg-red-600 disabled:bg-gray-400\"\n                    title=\"Delete this entire dataset\"\n                  >\n                    {deletingConfig === config.config_hash ? 'Deleting...' : 'Delete'}\n                  </button>\n                  <div className=\"text-gray-400\">\n                    {isExpanded ? '−' : '+'}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {isExpanded && (\n              <div className=\"p-4 border-t\">\n                {renderDataTable(config, tableData)}\n              </div>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default HistoricalDataViewer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}