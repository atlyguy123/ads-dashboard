{"ast":null,"code":"import _objectSpread from\"/Users/joshuakaufman/untitled folder 3/orchestrator/dashboard/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{api}from'../../services/api';import{FIELD_CATEGORIES,BREAKDOWN_CATEGORIES,ACTION_METRICS,ACTION_TYPE_ALLOWED_BREAKDOWNS}from'./utils/metaConstants';import{validateMetaBreakdownCombo,isBreakdownDisabled,getDisabledTooltip,getSelectedFieldsString,getSelectedBreakdownsString,buildApiParams,isValidDate}from'./utils/metaApiUtils';import{applyMappingsToRecords,getMappedConceptSummary,loadActionMappings}from'./utils/actionMappingUtils';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const LiveApiTester=_ref=>{var _results$meta,_results$meta2,_results$meta3,_results$meta4,_results$meta5,_results$meta6,_results$meta7,_results$meta8;let{startDateInput,setStartDateInput,endDateInput,setEndDateInput,incrementInput,setIncrementInput,selectedFields,setSelectedFields,selectedBreakdowns,setSelectedBreakdowns,error,setError}=_ref;// API request state\nconst[isLoading,setIsLoading]=useState(false);const[loadingProgress,setLoadingProgress]=useState({stage:'',pagesLoaded:0,percentage:0});const[results,setResults]=useState(null);const[asyncJobInfo,setAsyncJobInfo]=useState(null);const[jobPollingInterval,setJobPollingInterval]=useState(null);// Show/hide instructions and breakdowns\nconst[showInstructions,setShowInstructions]=useState(false);const[showBreakdowns,setShowBreakdowns]=useState(false);const[showMappedData,setShowMappedData]=useState(true);const[actionMappings,setActionMappings]=useState({});// Load action mappings on component mount\nuseEffect(()=>{const mappings=loadActionMappings();setActionMappings(mappings);},[]);// Helper function to format nested action values for better readability\nconst formatNestedValues=data=>{if(!Array.isArray(data))return data;return data.map(record=>{const formatted=_objectSpread({},record);// Format common nested fields\n['actions','action_values','conversions','conversion_values'].forEach(field=>{if(formatted[field]&&Array.isArray(formatted[field])){formatted[field+'_formatted']=formatted[field].reduce((acc,item)=>{acc[item.action_type]=item.value;return acc;},{});}});return formatted;});};// Check for action metrics and deselect incompatible breakdowns when fields change\nuseEffect(()=>{// Determine if any action metrics are selected\nconst hasActionMetrics=Object.entries(selectedFields).some(_ref2=>{let[field,isSelected]=_ref2;return isSelected&&ACTION_METRICS.includes(field);});if(hasActionMetrics){// Get currently selected breakdown IDs\nconst selectedBreakdownIds=Object.entries(selectedBreakdowns).filter(_ref3=>{let[_,isSelected]=_ref3;return isSelected;}).map(_ref4=>{let[id,_]=_ref4;return id;}).sort();// enforce order deterministically\n// If we have more than one breakdown selected with action metrics\nif(selectedBreakdownIds.length>1){// Create a new object with incompatible breakdowns turned off\nconst updatedBreakdowns=_objectSpread({},selectedBreakdowns);// Keep only the first action-compatible breakdown if one exists\nlet keptOne=false;selectedBreakdownIds.forEach(breakdownId=>{if(ACTION_TYPE_ALLOWED_BREAKDOWNS.includes(breakdownId)&&!keptOne){// Keep the first compatible breakdown\nkeptOne=true;}else{// Deselect all others\nupdatedBreakdowns[breakdownId]=false;}});// Update the state with the fixed breakdown selection\nsetSelectedBreakdowns(updatedBreakdowns);// Show a notification or alert to inform the user\nsetError(\"Some breakdowns were deselected because with action metrics, at most one breakdown is allowed\");setTimeout(()=>setError(null),5000);// Clear the error after 5 seconds\n}// If only one breakdown is selected and it's not action-compatible\nelse if(selectedBreakdownIds.length===1&&!ACTION_TYPE_ALLOWED_BREAKDOWNS.includes(selectedBreakdownIds[0])){const updatedBreakdowns=_objectSpread({},selectedBreakdowns);updatedBreakdowns[selectedBreakdownIds[0]]=false;setSelectedBreakdowns(updatedBreakdowns);setError(\"Selected breakdown '\".concat(selectedBreakdownIds[0],\"' was deselected because it's incompatible with action metrics\"));setTimeout(()=>setError(null),5000);// Clear the error after 5 seconds\n}}},[selectedFields,selectedBreakdowns,setSelectedBreakdowns,setError]);// Toggle a field selection\nconst toggleField=fieldId=>{setSelectedFields(prev=>_objectSpread(_objectSpread({},prev),{},{[fieldId]:!prev[fieldId]}));};// Toggle a breakdown selection\nconst toggleBreakdown=breakdownId=>{if(isBreakdownDisabled(breakdownId,selectedFields,selectedBreakdowns)){return;// Don't toggle if disabled\n}setSelectedBreakdowns(prev=>_objectSpread(_objectSpread({},prev),{},{[breakdownId]:!prev[breakdownId]}));};// Clean up polling interval on unmount\nuseEffect(()=>{return()=>{if(jobPollingInterval){clearInterval(jobPollingInterval);}};},[jobPollingInterval]);// Poll async job status\nconst pollJobStatus=async reportRunId=>{try{const statusResponse=await api.checkMetaJobStatus(reportRunId);setLoadingProgress(prev=>_objectSpread(_objectSpread({},prev),{},{stage:\"Processing in Meta servers... (\".concat(statusResponse.async_status,\")\"),percentage:statusResponse.async_percent_completion||0}));if(statusResponse.async_status==='Job Completed'){// Job is done, fetch results\nsetLoadingProgress(prev=>_objectSpread(_objectSpread({},prev),{},{stage:'Fetching results...',percentage:100}));const resultsResponse=await api.getMetaJobResults(reportRunId);if(resultsResponse.data&&resultsResponse.data.data){// Apply action mappings to the results\nconst mappedData=applyMappingsToRecords(resultsResponse.data.data,actionMappings);const conceptSummary=getMappedConceptSummary(mappedData,actionMappings);setResults(_objectSpread(_objectSpread({},resultsResponse),{},{data:_objectSpread(_objectSpread({},resultsResponse.data),{},{data:mappedData,business_summary:conceptSummary})}));}else{setResults(resultsResponse);}// Clear polling\nif(jobPollingInterval){clearInterval(jobPollingInterval);setJobPollingInterval(null);}setIsLoading(false);setAsyncJobInfo(null);}else if(statusResponse.async_status==='Job Failed'){setError('Meta API job failed. Please try again.');if(jobPollingInterval){clearInterval(jobPollingInterval);setJobPollingInterval(null);}setIsLoading(false);setAsyncJobInfo(null);}}catch(err){console.error('Error polling job status:',err);// If we already have results, don't show this as an error - just stop polling\nif(results&&results.data){console.log('Job status check failed but we already have results - stopping polling');if(jobPollingInterval){clearInterval(jobPollingInterval);setJobPollingInterval(null);}setIsLoading(false);setAsyncJobInfo(null);return;}// Only show error if we don't have results yet\nsetError('Error checking job status: '+(err.message||'Unknown error'));if(jobPollingInterval){clearInterval(jobPollingInterval);setJobPollingInterval(null);}setIsLoading(false);setAsyncJobInfo(null);}};// Handle submitting the form to fetch Meta data\nconst handleFetchData=async()=>{if(!startDateInput||!endDateInput){setError('Start date and end date are required');return;}if(!isValidDate(startDateInput)||!isValidDate(endDateInput)){setError('Start or end date is invalid. Use YYYY-MM-DD format.');return;}const fieldsString=getSelectedFieldsString(selectedFields);if(!fieldsString){setError('At least one field must be selected');return;}// Check for incompatible combinations before submitting\nconst validation=validateMetaBreakdownCombo(selectedFields,selectedBreakdowns);if(!validation.valid){setError(validation.errors[0]);// Show first error\nreturn;}setIsLoading(true);setError(null);setResults(null);setAsyncJobInfo(null);setLoadingProgress({stage:'Initializing request...',pagesLoaded:0,percentage:0});try{// Build request parameters\nconst params=buildApiParams(startDateInput,endDateInput,incrementInput,selectedFields,selectedBreakdowns);setLoadingProgress(prev=>_objectSpread(_objectSpread({},prev),{},{stage:'Sending request to Meta API...'}));// Make the API request\nconst response=await api.fetchMetaData(params);// Check if this is an async job\nif(response.async_job&&response.report_run_id){// This is an async job - start polling\nsetAsyncJobInfo({reportRunId:response.report_run_id,status:response.async_status});setLoadingProgress(prev=>_objectSpread(_objectSpread({},prev),{},{stage:\"Started async job (\".concat(response.async_status,\")...\"),percentage:0}));// Start polling every 3 seconds\nconst interval=setInterval(()=>{pollJobStatus(response.report_run_id);},3000);setJobPollingInterval(interval);// Poll immediately once\npollJobStatus(response.report_run_id);}else{var _response$meta;// This is a synchronous response\nif(response.data&&response.data.data){// Apply action mappings to the results\nconst mappedData=applyMappingsToRecords(response.data.data,actionMappings);const conceptSummary=getMappedConceptSummary(mappedData,actionMappings);setResults(_objectSpread(_objectSpread({},response),{},{data:_objectSpread(_objectSpread({},response.data),{},{data:mappedData,business_summary:conceptSummary})}));}else{setResults(response);}if(((_response$meta=response.meta)===null||_response$meta===void 0?void 0:_response$meta.pages_fetched)>0){setLoadingProgress({stage:'Processing results...',pagesLoaded:response.meta.pages_fetched,percentage:100});}// Short delay to show the processing message\nsetTimeout(()=>{setIsLoading(false);},500);}}catch(err){var _err$response,_err$response$data;setError(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.error)||err.message||'An unknown error occurred');setIsLoading(false);setAsyncJobInfo(null);}};// Handle predefined API request templates\nconst handlePredefinedRequest=async templateType=>{if(!startDateInput||!endDateInput){setError('Start date and end date are required');return;}if(!isValidDate(startDateInput)||!isValidDate(endDateInput)){setError('Start or end date is invalid. Use YYYY-MM-DD format.');return;}setIsLoading(true);setError(null);setResults(null);setAsyncJobInfo(null);setLoadingProgress({stage:'Initializing predefined request...',pagesLoaded:0,percentage:0});try{let params;if(templateType==='country'){// Country-level conversions template\nparams={start_date:startDateInput,end_date:endDateInput,time_increment:parseInt(incrementInput,10)||1,fields:'ad_id,ad_name,adset_id,adset_name,campaign_id,campaign_name,impressions,clicks,spend,actions',breakdowns:'country'};}else if(templateType==='device'){// Device-level conversions template (impression_device requires placement)\nparams={start_date:startDateInput,end_date:endDateInput,time_increment:parseInt(incrementInput,10)||1,fields:'ad_id,ad_name,adset_id,adset_name,campaign_id,campaign_name,impressions,clicks,spend,actions',breakdowns:'impression_device,placement'};}else if(templateType==='region'){// Region-level conversions template\nparams={start_date:startDateInput,end_date:endDateInput,time_increment:parseInt(incrementInput,10)||1,fields:'ad_id,ad_name,adset_id,adset_name,campaign_id,campaign_name,impressions,clicks,spend,actions',breakdowns:'region'};}else if(templateType==='country_device'){// EXACT RECIPE: Country breakdown with device action splitting\nparams={start_date:startDateInput,end_date:endDateInput,time_increment:parseInt(incrementInput,10)||1,fields:'ad_id,ad_name,adset_id,adset_name,campaign_id,campaign_name,impressions,clicks,spend,actions',breakdowns:'country',action_breakdowns:'action_device',limit:500// As specified in your recipe\n};}setLoadingProgress(prev=>_objectSpread(_objectSpread({},prev),{},{stage:'Sending request to Meta API...'}));// Make the API request\nconst response=await api.fetchMetaData(params);// Check if this is an async job\nif(response.async_job&&response.report_run_id){// This is an async job - start polling\nsetAsyncJobInfo({reportRunId:response.report_run_id,status:response.async_status});setLoadingProgress(prev=>_objectSpread(_objectSpread({},prev),{},{stage:\"Started async job (\".concat(response.async_status,\")...\"),percentage:0}));// Start polling every 3 seconds\nconst interval=setInterval(()=>{pollJobStatus(response.report_run_id);},3000);setJobPollingInterval(interval);// Poll immediately once\npollJobStatus(response.report_run_id);}else{var _response$meta2;// This is a synchronous response\nif(response.data&&response.data.data){// Apply action mappings to the results\nconst mappedData=applyMappingsToRecords(response.data.data,actionMappings);const conceptSummary=getMappedConceptSummary(mappedData,actionMappings);setResults(_objectSpread(_objectSpread({},response),{},{data:_objectSpread(_objectSpread({},response.data),{},{data:mappedData,business_summary:conceptSummary})}));}else{setResults(response);}if(((_response$meta2=response.meta)===null||_response$meta2===void 0?void 0:_response$meta2.pages_fetched)>0){setLoadingProgress({stage:'Processing results...',pagesLoaded:response.meta.pages_fetched,percentage:100});}// Short delay to show the processing message\nsetTimeout(()=>{setIsLoading(false);},500);}}catch(err){var _err$response2,_err$response2$data;setError(((_err$response2=err.response)===null||_err$response2===void 0?void 0:(_err$response2$data=_err$response2.data)===null||_err$response2$data===void 0?void 0:_err$response2$data.error)||err.message||'An unknown error occurred');setIsLoading(false);setAsyncJobInfo(null);}};// Toggle instructions visibility\nconst toggleInstructions=()=>{setShowInstructions(!showInstructions);};// Select all fields in a category\nconst selectAllInCategory=categoryFields=>{const newSelectedFields=_objectSpread({},selectedFields);categoryFields.forEach(field=>{newSelectedFields[field.id]=true;});setSelectedFields(newSelectedFields);};// Deselect all fields in a category\nconst deselectAllInCategory=categoryFields=>{const newSelectedFields=_objectSpread({},selectedFields);categoryFields.forEach(field=>{newSelectedFields[field.id]=false;});setSelectedFields(newSelectedFields);};// Select all breakdowns in a category\nconst selectAllBreakdownsInCategory=categoryBreakdowns=>{// Check if all breakdowns in this category are enabled first\nconst allEnabled=categoryBreakdowns.every(breakdown=>!isBreakdownDisabled(breakdown.id,selectedFields,selectedBreakdowns));if(!allEnabled){return;// Don't select all if any are disabled\n}const newSelectedBreakdowns=_objectSpread({},selectedBreakdowns);categoryBreakdowns.forEach(breakdown=>{newSelectedBreakdowns[breakdown.id]=true;});setSelectedBreakdowns(newSelectedBreakdowns);};// Deselect all breakdowns in a category\nconst deselectAllBreakdownsInCategory=categoryBreakdowns=>{const newSelectedBreakdowns=_objectSpread({},selectedBreakdowns);categoryBreakdowns.forEach(breakdown=>{newSelectedBreakdowns[breakdown.id]=false;});setSelectedBreakdowns(newSelectedBreakdowns);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-blue-50 dark:bg-blue-900 rounded-lg shadow p-4 mb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center cursor-pointer\",onClick:toggleInstructions,children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-semibold text-blue-800 dark:text-blue-200\",children:\"How to use this tool\"}),/*#__PURE__*/_jsxs(\"button\",{className:\"text-blue-500\",children:[showInstructions?'Hide':'Show',\" instructions\"]})]}),showInstructions&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 text-sm text-blue-800 dark:text-blue-200\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"mb-2\",children:\"This tool allows you to fetch data from the Meta Ads API for a specified date range.\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"font-semibold mt-3 mb-1\",children:\"Parameters:\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"list-disc pl-5 space-y-1\",children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Start Date and End Date:\"}),\" Define the time period for data retrieval (YYYY-MM-DD format)\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Time Increment:\"}),\" Controls how data is grouped:\",/*#__PURE__*/_jsxs(\"ul\",{className:\"list-disc pl-5 mt-1\",children:[/*#__PURE__*/_jsxs(\"li\",{children:[\"Set to \",/*#__PURE__*/_jsx(\"strong\",{children:\"0\"}),\" to get aggregated data for the entire date range\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Set to \",/*#__PURE__*/_jsx(\"strong\",{children:\"1\"}),\" for daily breakdowns\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Set to \",/*#__PURE__*/_jsx(\"strong\",{children:\"7\"}),\" for weekly breakdowns\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Set to \",/*#__PURE__*/_jsx(\"strong\",{children:\"30\"}),\" for monthly breakdowns (approximate)\"]})]})]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Fields:\"}),\" Click on the pills to select which data fields to retrieve\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Breakdowns:\"}),\" Select dimension breakdowns to segment your data (optional)\"]})]}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-3\",children:/*#__PURE__*/_jsx(\"strong\",{children:\"Breakdown Rules:\"})}),/*#__PURE__*/_jsxs(\"ul\",{className:\"list-disc pl-5 space-y-1\",children:[/*#__PURE__*/_jsx(\"li\",{children:\"Maximum of 2 breakdown dimensions allowed at once\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Certain breakdowns cannot be used together (disabled options will appear grayed out)\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Breakdowns in the same category (e.g., multiple geography options) cannot be combined\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Hourly stats breakdowns must be used alone\"}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Action/Conversion Metrics Limitations:\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"list-disc pl-5 mt-1 text-red-800 dark:text-red-300\",children:[/*#__PURE__*/_jsxs(\"li\",{children:[\"When selecting \",/*#__PURE__*/_jsx(\"strong\",{children:\"\\u26A1 action metrics\"}),\" Meta always adds an internal \",/*#__PURE__*/_jsx(\"code\",{children:\"action_type\"}),\" breakdown\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"With \",/*#__PURE__*/_jsx(\"strong\",{children:\"\\u26A1 action metrics\"}),\" you may add \",/*#__PURE__*/_jsx(\"strong\",{children:\"only one\"}),\" other breakdown, and it must be \",/*#__PURE__*/_jsx(\"code\",{children:\"conversion_destination\"})]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Common breakdowns like country, age, gender, device_platform \",/*#__PURE__*/_jsx(\"strong\",{children:\"cannot\"}),\" be used with action metrics\"]}),/*#__PURE__*/_jsx(\"li\",{children:\"To get both action data and country/device breakdowns, you need to run separate reports and join them offline\"})]})]}),/*#__PURE__*/_jsx(\"li\",{children:\"Your selected fields and parameters are saved automatically for future sessions\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-lg shadow p-6 mb-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold mb-4\",children:\"Fetch Meta API Data\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{className:\"block text-sm font-medium mb-1\",htmlFor:\"start_date_input\",children:[\"Start Date (YYYY-MM-DD)\",/*#__PURE__*/_jsx(\"span\",{className:\"text-red-500\",children:\" *\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"start_date_input\",value:startDateInput,onChange:e=>setStartDateInput(e.target.value),className:\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600\",placeholder:\"e.g., 2023-05-01\",required:true,disabled:isLoading})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{className:\"block text-sm font-medium mb-1\",htmlFor:\"end_date_input\",children:[\"End Date (YYYY-MM-DD)\",/*#__PURE__*/_jsx(\"span\",{className:\"text-red-500\",children:\" *\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"end_date_input\",value:endDateInput,onChange:e=>setEndDateInput(e.target.value),className:\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600\",placeholder:\"e.g., 2023-05-31\",required:true,disabled:isLoading})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium mb-1\",htmlFor:\"increment_input\",children:\"Time Increment (days)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"increment_input\",value:incrementInput,onChange:e=>setIncrementInput(e.target.value),className:\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600\",placeholder:\"1\",min:\"0\",disabled:isLoading}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500 mt-1\",children:\"0 = entire range, 1 = daily, 7 = weekly, 30 = monthly\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-2\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"block text-sm font-medium\",children:[\"Select Fields\",/*#__PURE__*/_jsx(\"span\",{className:\"text-red-500\",children:\" *\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"text-gray-500\",children:[Object.values(selectedFields).filter(Boolean).length,\" fields selected\"]})})]}),FIELD_CATEGORIES.map((category,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-2\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-sm font-semibold text-gray-700 dark:text-gray-300\",children:category.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-x-2\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>selectAllInCategory(category.fields),className:\"text-xs text-blue-600 hover:text-blue-800\",disabled:isLoading,children:\"Select All\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>deselectAllInCategory(category.fields),className:\"text-xs text-red-600 hover:text-red-800\",disabled:isLoading,children:\"Clear\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap gap-2\",children:category.fields.map(field=>{const isAction=field.isActionMetric;return/*#__PURE__*/_jsxs(\"button\",{type:\"button\",onClick:()=>toggleField(field.id),className:\"px-3 py-1 rounded-full text-sm \".concat(selectedFields[field.id]?'bg-blue-500 text-white':'bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300'),disabled:isLoading,children:[field.label,/*#__PURE__*/_jsx(\"span\",{className:\"ml-1 text-xs\",children:isAction&&'⚡'})]},field.id);})})]},index))]}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-4\",children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>setShowBreakdowns(!showBreakdowns),className:\"text-blue-600 hover:text-blue-800 text-sm font-medium flex items-center\",children:/*#__PURE__*/_jsxs(\"span\",{children:[showBreakdowns?'- Hide':'+ Show',\" Breakdowns (Advanced)\"]})})}),showBreakdowns&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6 pl-4 border-l-2 border-blue-200\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-2\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium\",children:\"Select Breakdowns (Optional)\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"text-gray-500\",children:[Object.values(selectedBreakdowns).filter(Boolean).length,\" breakdowns selected\"]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs bg-gray-100 dark:bg-gray-700 p-2 rounded mb-3 text-gray-800 dark:text-gray-300\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Note:\"}),\" The Meta API has strict rules about which breakdowns can be used together.\",/*#__PURE__*/_jsxs(\"ul\",{className:\"mt-1 ml-2 list-disc pl-4\",children:[/*#__PURE__*/_jsx(\"li\",{children:\"Maximum 2 breakdowns allowed\"}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Important:\"}),\" When using \",/*#__PURE__*/_jsx(\"strong\",{children:\"\\u26A1 action metrics\"}),\" Meta always adds an internal \",/*#__PURE__*/_jsx(\"code\",{children:\"action_type\"}),\" breakdown\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"With \",/*#__PURE__*/_jsx(\"strong\",{children:\"\\u26A1 action metrics\"}),\" you may add \",/*#__PURE__*/_jsx(\"strong\",{children:\"only one\"}),\" other breakdown, and it must be \",/*#__PURE__*/_jsx(\"code\",{children:\"conversion_destination\"})]}),/*#__PURE__*/_jsx(\"li\",{children:\"Disabled options are incompatible with your current selection\"})]})]}),BREAKDOWN_CATEGORIES.map((category,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-2\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-sm font-semibold text-gray-700 dark:text-gray-300\",children:category.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-x-2\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>selectAllBreakdownsInCategory(category.breakdowns),className:\"text-xs text-blue-600 hover:text-blue-800\",disabled:isLoading||category.breakdowns.some(b=>isBreakdownDisabled(b.id,selectedFields,selectedBreakdowns)),children:\"Select All\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>deselectAllBreakdownsInCategory(category.breakdowns),className:\"text-xs text-red-600 hover:text-red-800\",disabled:isLoading,children:\"Clear\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap gap-2\",children:category.breakdowns.map(breakdown=>{const isDisabled=isBreakdownDisabled(breakdown.id,selectedFields,selectedBreakdowns);const disabledTooltip=isDisabled?getDisabledTooltip(breakdown.id,selectedFields,selectedBreakdowns):'';const isActionCompatible=ACTION_TYPE_ALLOWED_BREAKDOWNS.includes(breakdown.id);return/*#__PURE__*/_jsxs(\"button\",{type:\"button\",onClick:()=>toggleBreakdown(breakdown.id),className:\"px-3 py-1 rounded-full text-sm \".concat(selectedBreakdowns[breakdown.id]?'bg-green-500 text-white':isDisabled?'bg-gray-300 dark:bg-gray-600 text-gray-500 dark:text-gray-400 cursor-not-allowed':'bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-300'),disabled:isLoading||isDisabled,title:disabledTooltip,children:[breakdown.label,isActionCompatible&&/*#__PURE__*/_jsx(\"span\",{className:\"ml-1 text-xs\",title:\"Compatible with action metrics\",children:\"\\u2605\"})]},breakdown.id);})}),category.name===\"Others\"&&/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-500 mt-1\",children:\"\\u2605 Breakdowns marked with a star are compatible with action metrics (actions, conversions, ROAS)\"})]},index))]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex space-x-4\",children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleFetchData,disabled:isLoading,className:\"px-6 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 disabled:opacity-50\",children:isLoading?'Loading...':'Fetch Data'})})]}),isLoading&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 p-4 bg-slate-50 dark:bg-slate-800 rounded-lg border border-blue-200 dark:border-blue-800\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center mb-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-5 w-5 border-b-2 border-blue-500 mr-3\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:loadingProgress.stage}),asyncJobInfo&&/*#__PURE__*/_jsxs(\"span\",{className:\"ml-2 px-2 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 text-xs rounded-full\",children:[\"Job ID: \",asyncJobInfo.reportRunId.substring(0,8),\"...\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-200 dark:bg-gray-700 rounded-full h-3 w-full mb-2\",children:/*#__PURE__*/_jsx(\"div\",{className:\"h-3 rounded-full transition-all duration-300 \".concat(asyncJobInfo?'bg-gradient-to-r from-blue-500 to-purple-500':'bg-blue-600 animate-pulse'),style:{width:asyncJobInfo?\"\".concat(loadingProgress.percentage,\"%\"):'100%'}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center text-sm text-gray-600 dark:text-gray-400\",children:[/*#__PURE__*/_jsx(\"span\",{children:asyncJobInfo?\"\".concat(loadingProgress.percentage,\"% complete\"):loadingProgress.pagesLoaded>0?\"\".concat(loadingProgress.pagesLoaded,\" pages loaded\"):'Processing...'}),asyncJobInfo&&/*#__PURE__*/_jsx(\"span\",{className:\"text-xs font-mono bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded\",children:\"Async Mode\"})]}),asyncJobInfo&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-3 p-3 bg-blue-50 dark:bg-blue-900/20 rounded border border-blue-200 dark:border-blue-800\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-start\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm flex-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-blue-800 dark:text-blue-200 mb-1\",children:\"\\uD83D\\uDCCA Meta is processing your request on their servers\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-blue-600 dark:text-blue-300 text-xs\",children:\"Large requests are processed asynchronously for better performance. You'll see progress updates every few seconds.\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{if(jobPollingInterval){clearInterval(jobPollingInterval);setJobPollingInterval(null);}setIsLoading(false);setAsyncJobInfo(null);setLoadingProgress({stage:'',pagesLoaded:0,percentage:0});},className:\"ml-3 px-3 py-1 bg-red-100 hover:bg-red-200 dark:bg-red-900 dark:hover:bg-red-800  text-red-800 dark:text-red-200 text-xs rounded border border-red-300 dark:border-red-700  transition-colors duration-200\",children:\"Cancel\"})]})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative overflow-hidden bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 rounded-3xl shadow-2xl border border-purple-500/20 mb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"absolute inset-0 overflow-hidden\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute top-0 left-1/4 w-2 h-2 bg-cyan-400 rounded-full animate-pulse opacity-60\"}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute top-1/3 right-1/4 w-1 h-1 bg-purple-400 rounded-full animate-ping opacity-40\"}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute bottom-1/4 left-1/3 w-1.5 h-1.5 bg-emerald-400 rounded-full animate-pulse opacity-50\"}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute top-1/2 right-1/3 w-1 h-1 bg-pink-400 rounded-full animate-ping opacity-30\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 bg-gradient-to-r from-transparent via-cyan-500/5 to-transparent animate-pulse\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative p-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-center mb-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"inline-flex items-center space-x-3 mb-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 bg-gradient-to-r from-cyan-400 to-blue-500 rounded-full animate-pulse\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"text-3xl font-bold bg-gradient-to-r from-cyan-300 via-purple-300 to-pink-300 bg-clip-text text-transparent tracking-wide\",children:\"QUANTUM API COMMAND CENTER\"}),/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 bg-gradient-to-r from-pink-400 to-purple-500 rounded-full animate-pulse\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-center items-center space-x-2 mb-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"h-px bg-gradient-to-r from-transparent via-cyan-400 to-transparent w-20\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-cyan-300 text-sm font-mono tracking-wider\",children:\"NEURAL INTERFACE v2100.1\"}),/*#__PURE__*/_jsx(\"div\",{className:\"h-px bg-gradient-to-r from-transparent via-cyan-400 to-transparent w-20\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-slate-300 text-sm max-w-2xl mx-auto leading-relaxed\",children:\"Advanced Meta API templates with quantum-enhanced data processing and holographic visualization\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-4 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"group relative\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute -inset-1 bg-gradient-to-r from-emerald-500 to-cyan-500 rounded-2xl blur opacity-20 group-hover:opacity-40 transition duration-300\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative bg-gradient-to-br from-slate-800/80 to-slate-900/80 backdrop-blur-xl border border-emerald-500/30 rounded-2xl p-6 hover:border-emerald-400/60 transition-all duration-300\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3 mb-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-10 h-10 bg-gradient-to-br from-emerald-400 to-cyan-500 rounded-xl flex items-center justify-center shadow-lg shadow-emerald-500/20\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-white font-bold text-lg\",children:\"\\uD83C\\uDF0D\"})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold text-emerald-300 tracking-wide\",children:\"GEO-MATRIX SCAN\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-emerald-400/70 font-mono\",children:\"MODULE_001 \\u2022 COUNTRY_ANALYTICS\"})]})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-slate-300 text-sm mb-4 leading-relaxed\",children:\"Quantum-enhanced geographical performance analysis. Maps ad efficiency across global territories with neural pattern recognition.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-slate-900/60 rounded-xl p-4 mb-6 border border-emerald-500/20\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-emerald-400 font-mono mb-2\",children:\"NEURAL PARAMETERS:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-slate-300 font-mono space-y-1\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-cyan-400\",children:\"fields:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-yellow-300\",children:\"ad_id, ad_name, campaign_*, impressions, clicks, spend, actions\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-cyan-400\",children:\"breakdowns:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-emerald-300\",children:\"country\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-cyan-400\",children:\"output:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-pink-300\",children:\"ad-country matrix pairs\"})]})]})]}),/*#__PURE__*/_jsxs(\"button\",{type:\"button\",onClick:()=>handlePredefinedRequest('country'),disabled:isLoading||!startDateInput||!endDateInput,className:\"w-full h-14 bg-gradient-to-r from-emerald-500 to-cyan-500 text-white font-bold rounded-xl  hover:from-emerald-400 hover:to-cyan-400 disabled:from-gray-600 disabled:to-gray-700  transition-all duration-300 transform hover:scale-[1.02] active:scale-[0.98]  shadow-lg shadow-emerald-500/25 hover:shadow-emerald-500/40  disabled:opacity-50 disabled:cursor-not-allowed relative overflow-hidden group/btn\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 bg-gradient-to-r from-white/0 via-white/20 to-white/0 transform -skew-x-12 -translate-x-full group-hover/btn:translate-x-full transition-transform duration-700\"}),/*#__PURE__*/_jsx(\"span\",{className:\"relative flex items-center justify-center space-x-2\",children:/*#__PURE__*/_jsx(\"span\",{children:isLoading?'⚡ PROCESSING...':'🚀 EXECUTE GEO-SCAN'})})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"group relative\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute -inset-1 bg-gradient-to-r from-purple-500 to-pink-500 rounded-2xl blur opacity-20 group-hover:opacity-40 transition duration-300\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative bg-gradient-to-br from-slate-800/80 to-slate-900/80 backdrop-blur-xl border border-purple-500/30 rounded-2xl p-6 hover:border-purple-400/60 transition-all duration-300\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3 mb-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-10 h-10 bg-gradient-to-br from-purple-400 to-pink-500 rounded-xl flex items-center justify-center shadow-lg shadow-purple-500/20\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-white font-bold text-lg\",children:\"\\uD83D\\uDCF1\"})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold text-purple-300 tracking-wide\",children:\"DEVICE-NEXUS PROBE\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-purple-400/70 font-mono\",children:\"MODULE_002 \\u2022 DEVICE_ANALYTICS\"})]})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-slate-300 text-sm mb-4 leading-relaxed\",children:\"Multi-dimensional device ecosystem analysis. Identifies user behavior patterns across all connected platforms with AI precision.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-slate-900/60 rounded-xl p-4 mb-6 border border-purple-500/20\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-purple-400 font-mono mb-2\",children:\"NEURAL PARAMETERS:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-slate-300 font-mono space-y-1\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-cyan-400\",children:\"fields:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-yellow-300\",children:\"ad_id, ad_name, campaign_*, impressions, clicks, spend, actions\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-cyan-400\",children:\"breakdowns:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-purple-300\",children:\"impression_device\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-cyan-400\",children:\"actions:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-pink-300\",children:\"action_device [optional_split]\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-cyan-400\",children:\"output:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-pink-300\",children:\"ad-device matrix pairs\"})]})]})]}),/*#__PURE__*/_jsxs(\"button\",{type:\"button\",onClick:()=>handlePredefinedRequest('device'),disabled:isLoading||!startDateInput||!endDateInput,className:\"w-full h-14 bg-gradient-to-r from-purple-500 to-pink-500 text-white font-bold rounded-xl  hover:from-purple-400 hover:to-pink-400 disabled:from-gray-600 disabled:to-gray-700  transition-all duration-300 transform hover:scale-[1.02] active:scale-[0.98]  shadow-lg shadow-purple-500/25 hover:shadow-purple-500/40  disabled:opacity-50 disabled:cursor-not-allowed relative overflow-hidden group/btn\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 bg-gradient-to-r from-white/0 via-white/20 to-white/0 transform -skew-x-12 -translate-x-full group-hover/btn:translate-x-full transition-transform duration-700\"}),/*#__PURE__*/_jsx(\"span\",{className:\"relative flex items-center justify-center space-x-2\",children:/*#__PURE__*/_jsx(\"span\",{children:isLoading?'⚡ PROCESSING...':'🔬 EXECUTE DEVICE-SCAN'})})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"group relative\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute -inset-1 bg-gradient-to-r from-orange-500 to-red-500 rounded-2xl blur opacity-20 group-hover:opacity-40 transition duration-300\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative bg-gradient-to-br from-slate-800/80 to-slate-900/80 backdrop-blur-xl border border-orange-500/30 rounded-2xl p-6 hover:border-orange-400/60 transition-all duration-300\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3 mb-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-10 h-10 bg-gradient-to-br from-orange-400 to-red-500 rounded-xl flex items-center justify-center shadow-lg shadow-orange-500/20\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-white font-bold text-lg\",children:\"\\uD83D\\uDDFA\\uFE0F\"})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold text-orange-300 tracking-wide\",children:\"REGIONAL-ZONE MAPPER\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-orange-400/70 font-mono\",children:\"MODULE_003 \\u2022 REGION_ANALYTICS\"})]})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-slate-300 text-sm mb-4 leading-relaxed\",children:\"Continental-scale performance intelligence. Aggregates advertising metrics across major world regions with territorial AI clustering.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-slate-900/60 rounded-xl p-4 mb-6 border border-orange-500/20\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-orange-400 font-mono mb-2\",children:\"NEURAL PARAMETERS:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-slate-300 font-mono space-y-1\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-cyan-400\",children:\"fields:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-yellow-300\",children:\"ad_id, ad_name, campaign_*, impressions, clicks, spend, actions\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-cyan-400\",children:\"breakdowns:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-orange-300\",children:\"region\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-cyan-400\",children:\"output:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-pink-300\",children:\"ad-region matrix pairs\"})]})]})]}),/*#__PURE__*/_jsxs(\"button\",{type:\"button\",onClick:()=>handlePredefinedRequest('region'),disabled:isLoading||!startDateInput||!endDateInput,className:\"w-full h-14 bg-gradient-to-r from-orange-500 to-red-500 text-white font-bold rounded-xl  hover:from-orange-400 hover:to-red-400 disabled:from-gray-600 disabled:to-gray-700  transition-all duration-300 transform hover:scale-[1.02] active:scale-[0.98]  shadow-lg shadow-orange-500/25 hover:shadow-orange-500/40  disabled:opacity-50 disabled:cursor-not-allowed relative overflow-hidden group/btn\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 bg-gradient-to-r from-white/0 via-white/20 to-white/0 transform -skew-x-12 -translate-x-full group-hover/btn:translate-x-full transition-transform duration-700\"}),/*#__PURE__*/_jsx(\"span\",{className:\"relative flex items-center justify-center space-x-2\",children:/*#__PURE__*/_jsx(\"span\",{children:isLoading?'⚡ PROCESSING...':'🌐 EXECUTE REGION-SCAN'})})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"group relative\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute -inset-1 bg-gradient-to-r from-yellow-500 to-amber-500 rounded-2xl blur opacity-20 group-hover:opacity-40 transition duration-300\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative bg-gradient-to-br from-slate-800/80 to-slate-900/80 backdrop-blur-xl border border-yellow-500/30 rounded-2xl p-6 hover:border-yellow-400/60 transition-all duration-300\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3 mb-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-10 h-10 bg-gradient-to-br from-yellow-400 to-amber-500 rounded-xl flex items-center justify-center shadow-lg shadow-yellow-500/20\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-white font-bold text-lg\",children:\"\\uD83C\\uDF0D\\uD83D\\uDCF1\"})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-bold text-yellow-300 tracking-wide\",children:\"HYBRID GEO-DEVICE\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-yellow-400/70 font-mono\",children:\"MODULE_004 \\u2022 CROSS_DIMENSIONAL\"})]})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-slate-300 text-xs mb-3 leading-relaxed\",children:\"TESTED RECIPE: Attempts to get country rows with device-attributed actions. Meta API has confirmed this combination is not supported.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-slate-900/60 rounded-xl p-3 mb-4 border border-red-500/20\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-red-400 font-mono mb-2\",children:\"FAILED PARAMS:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-slate-300 font-mono space-y-1\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-cyan-400\",children:\"fields:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-yellow-300\",children:\"campaign_*, impressions, actions\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-cyan-400\",children:\"breakdowns:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-yellow-300\",children:\"country\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-cyan-400\",children:\"action_breakdowns:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-pink-300\",children:\"action_device\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-red-400\",children:\"error:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-red-300\",children:\"Invalid combination\"})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-red-900/40 border border-red-500/30 rounded-lg p-2 mb-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-red-200\",children:[\"\\u274C \",/*#__PURE__*/_jsx(\"strong\",{children:\"Meta API Error:\"}),\" \\\"Current combination of data breakdown columns (action_device, country) is invalid\\\"\"]})}),/*#__PURE__*/_jsxs(\"button\",{type:\"button\",onClick:()=>handlePredefinedRequest('country_device'),disabled:isLoading||!startDateInput||!endDateInput,className:\"w-full h-12 bg-gradient-to-r from-red-500 to-red-600 text-white font-bold rounded-xl  hover:from-red-400 hover:to-red-500 disabled:from-gray-600 disabled:to-gray-700  transition-all duration-300 transform hover:scale-[1.02] active:scale-[0.98]  shadow-lg shadow-red-500/25 hover:shadow-red-500/40  disabled:opacity-50 disabled:cursor-not-allowed relative overflow-hidden group/btn text-sm\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 bg-gradient-to-r from-white/0 via-white/20 to-white/0 transform -skew-x-12 -translate-x-full group-hover/btn:translate-x-full transition-transform duration-700\"}),/*#__PURE__*/_jsx(\"span\",{className:\"relative flex items-center justify-center space-x-2\",children:/*#__PURE__*/_jsx(\"span\",{children:isLoading?'⚡ FAILING...':'❌ DEMO ERROR'})})]})]})]})]}),!startDateInput||!endDateInput?/*#__PURE__*/_jsxs(\"div\",{className:\"mt-8 relative\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute -inset-1 bg-gradient-to-r from-orange-500 to-red-500 rounded-2xl blur opacity-20\"}),/*#__PURE__*/_jsx(\"div\",{className:\"relative bg-slate-900/80 backdrop-blur-xl border border-orange-500/40 rounded-2xl p-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-8 h-8 bg-gradient-to-br from-orange-400 to-red-500 rounded-lg flex items-center justify-center\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-white font-bold\",children:\"\\u26A0\\uFE0F\"})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-orange-300 font-bold\",children:\"TEMPORAL PARAMETERS REQUIRED\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-orange-200 text-sm\",children:\"Initialize start and end dates in the chronometer above to activate quantum templates\"})]})]})})]}):/*#__PURE__*/_jsx(\"div\",{className:\"mt-8 text-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"inline-flex items-center space-x-2 text-cyan-300 text-sm\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-2 h-2 bg-cyan-400 rounded-full animate-pulse\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-mono\",children:\"QUANTUM TEMPLATES \\u2022 READY FOR EXECUTION\"}),/*#__PURE__*/_jsx(\"div\",{className:\"w-2 h-2 bg-cyan-400 rounded-full animate-pulse\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-8 bg-slate-900/60 backdrop-blur-xl border border-blue-500/20 rounded-2xl p-6\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-lg font-bold text-blue-300 mb-4 flex items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"mr-2\",children:\"\\uD83E\\uDDE0\"}),\"DIMENSIONAL ANALYSIS LIMITATIONS\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-6 text-sm text-slate-300\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-semibold text-cyan-300 mb-2\",children:\"\\u2705 Single Dimension (Supported)\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"space-y-1 text-xs\",children:[/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u2022 \",/*#__PURE__*/_jsx(\"span\",{className:\"text-emerald-300\",children:\"Country only\"}),\" - Shows performance by country\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u2022 \",/*#__PURE__*/_jsx(\"span\",{className:\"text-purple-300\",children:\"Device only\"}),\" - Shows performance by device + placement\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u2022 \",/*#__PURE__*/_jsx(\"span\",{className:\"text-orange-300\",children:\"Region only\"}),\" - Shows performance by region/state\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-semibold text-red-300 mb-2\",children:\"\\u274C Hybrid Experiment Failed\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"mb-2\",children:[\"The \",/*#__PURE__*/_jsx(\"span\",{className:\"text-red-300\",children:\"HYBRID GEO-DEVICE\"}),\" tested Meta's \",/*#__PURE__*/_jsx(\"code\",{children:\"action_breakdowns\"}),\":\"]}),/*#__PURE__*/_jsxs(\"ul\",{className:\"space-y-1\",children:[/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u2022 \",/*#__PURE__*/_jsx(\"span\",{className:\"text-cyan-300\",children:\"Goal:\"}),\" Country rows + device action splits\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u2022 \",/*#__PURE__*/_jsx(\"span\",{className:\"text-red-300\",children:\"Error:\"}),\" \\\"Invalid combination of data breakdown columns\\\"\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u2022 \",/*#__PURE__*/_jsx(\"span\",{className:\"text-red-300\",children:\"Result:\"}),\" Meta API rejects this combination\"]})]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 p-4 bg-red-900/30 border border-red-500/30 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-semibold text-red-300 mb-2\",children:\"\\u26A0\\uFE0F Attribution Problem\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-red-200 leading-relaxed\",children:\"Separate API calls cannot be combined for full attribution. Example: You cannot determine \\\"iOS users in USA vs Android users in USA\\\" by making separate country and device calls, because there's no way to cross-reference the user data between calls.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 p-4 bg-blue-900/30 border border-blue-500/30 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-semibold text-blue-300 mb-2\",children:\"\\uD83D\\uDCA1 Confirmed Solution\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-xs text-blue-200 leading-relaxed\",children:[\"The \",/*#__PURE__*/_jsx(\"span\",{className:\"text-red-300\",children:\"HYBRID GEO-DEVICE\"}),\" test confirms Meta API doesn't support cross-dimensional attribution. For geo-device insights, you must make separate API calls (country-only and device-only) and analyze the data independently. Full cross-attribution is not possible.\"]})]})]})]})]}),results&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold mb-4\",children:\"Results\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-4 mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-100 dark:bg-gray-700 p-3 rounded\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Total Records:\"}),\" \",((_results$meta=results.meta)===null||_results$meta===void 0?void 0:_results$meta.total_records)||0]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-100 dark:bg-gray-700 p-3 rounded\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Pages Fetched:\"}),\" \",((_results$meta2=results.meta)===null||_results$meta2===void 0?void 0:_results$meta2.pages_fetched)||0]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-100 dark:bg-gray-700 p-3 rounded\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Date Range:\"}),\" \",(_results$meta3=results.meta)===null||_results$meta3===void 0?void 0:_results$meta3.start_date,\" to \",(_results$meta4=results.meta)===null||_results$meta4===void 0?void 0:_results$meta4.end_date]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-100 dark:bg-gray-700 p-3 rounded\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Time Increment:\"}),\" \",((_results$meta5=results.meta)===null||_results$meta5===void 0?void 0:_results$meta5.time_increment)||1,\" day(s)\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-100 dark:bg-gray-700 p-3 rounded mb-4\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Fields:\"}),\" \",(_results$meta6=results.meta)===null||_results$meta6===void 0?void 0:_results$meta6.fields]}),((_results$meta7=results.meta)===null||_results$meta7===void 0?void 0:_results$meta7.breakdowns)&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-100 dark:bg-gray-700 p-3 rounded mb-4\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"Breakdowns:\"}),\" \",(_results$meta8=results.meta)===null||_results$meta8===void 0?void 0:_results$meta8.breakdowns]})]}),results.data&&results.data.data&&results.data.data.length>0?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-4\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-lg font-medium\",children:[\"Data Sample (\",results.data.data.length,\" records)\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center space-x-4\",children:/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:showMappedData,onChange:e=>setShowMappedData(e.target.checked),className:\"mr-2\"}),\"Show Business Concepts\"]})})]}),showMappedData&&Object.keys(actionMappings).length>0&&results.data.business_summary&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-md font-medium mb-3\",children:\"Business Concepts Summary\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-4\",children:Object.entries(results.data.business_summary).map(_ref5=>{let[conceptName,summary]=_ref5;return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-blue-50 dark:bg-blue-900 p-4 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"font-medium text-blue-800 dark:text-blue-200 capitalize\",children:conceptName}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-blue-600 dark:text-blue-300 mt-2 space-y-1\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[\"Count: \",summary.total_count.toFixed(0)]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Value: $\",summary.total_value.toFixed(2)]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Conversions: \",summary.total_conversions.toFixed(0)]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Conv. Value: $\",summary.total_conversion_value.toFixed(2)]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs\",children:[\"Records: \",summary.records_with_data,\"/\",results.data.data.length]})]})]},conceptName);})}),Object.keys(actionMappings).length===0&&/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-500 italic\",children:\"No action mappings configured. Go to the Action Mapping tab to set up business concepts.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-2\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-md font-medium\",children:\"Raw JSON Data\"}),/*#__PURE__*/_jsxs(\"button\",{onClick:e=>{const jsonData=JSON.stringify(formatNestedValues(results.data.data),null,2);navigator.clipboard.writeText(jsonData).then(()=>{// Show a temporary success message\nconst button=e.target;const originalText=button.textContent;button.textContent='✅ Copied!';button.classList.add('bg-green-500','text-white');setTimeout(()=>{button.textContent=originalText;button.classList.remove('bg-green-500','text-white');},2000);}).catch(err=>{console.error('Failed to copy:',err);alert('Failed to copy to clipboard');});},className:\"px-3 py-1 bg-blue-500 hover:bg-blue-600 text-white text-sm rounded  transition-colors duration-200 flex items-center space-x-1\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDCCB\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Copy All JSON\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-100 dark:bg-gray-900 p-4 rounded overflow-auto max-h-96\",children:/*#__PURE__*/_jsx(\"pre\",{className:\"text-xs\",children:JSON.stringify(formatNestedValues(results.data.data),null,2)})})]})]}):/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500\",children:\"No data returned from API\"})]})]});};export default LiveApiTester;","map":{"version":3,"names":["React","useState","useEffect","api","FIELD_CATEGORIES","BREAKDOWN_CATEGORIES","ACTION_METRICS","ACTION_TYPE_ALLOWED_BREAKDOWNS","validateMetaBreakdownCombo","isBreakdownDisabled","getDisabledTooltip","getSelectedFieldsString","getSelectedBreakdownsString","buildApiParams","isValidDate","applyMappingsToRecords","getMappedConceptSummary","loadActionMappings","jsx","_jsx","jsxs","_jsxs","LiveApiTester","_ref","_results$meta","_results$meta2","_results$meta3","_results$meta4","_results$meta5","_results$meta6","_results$meta7","_results$meta8","startDateInput","setStartDateInput","endDateInput","setEndDateInput","incrementInput","setIncrementInput","selectedFields","setSelectedFields","selectedBreakdowns","setSelectedBreakdowns","error","setError","isLoading","setIsLoading","loadingProgress","setLoadingProgress","stage","pagesLoaded","percentage","results","setResults","asyncJobInfo","setAsyncJobInfo","jobPollingInterval","setJobPollingInterval","showInstructions","setShowInstructions","showBreakdowns","setShowBreakdowns","showMappedData","setShowMappedData","actionMappings","setActionMappings","mappings","formatNestedValues","data","Array","isArray","map","record","formatted","_objectSpread","forEach","field","reduce","acc","item","action_type","value","hasActionMetrics","Object","entries","some","_ref2","isSelected","includes","selectedBreakdownIds","filter","_ref3","_","_ref4","id","sort","length","updatedBreakdowns","keptOne","breakdownId","setTimeout","concat","toggleField","fieldId","prev","toggleBreakdown","clearInterval","pollJobStatus","reportRunId","statusResponse","checkMetaJobStatus","async_status","async_percent_completion","resultsResponse","getMetaJobResults","mappedData","conceptSummary","business_summary","err","console","log","message","handleFetchData","fieldsString","validation","valid","errors","params","response","fetchMetaData","async_job","report_run_id","status","interval","setInterval","_response$meta","meta","pages_fetched","_err$response","_err$response$data","handlePredefinedRequest","templateType","start_date","end_date","time_increment","parseInt","fields","breakdowns","action_breakdowns","limit","_response$meta2","_err$response2","_err$response2$data","toggleInstructions","selectAllInCategory","categoryFields","newSelectedFields","deselectAllInCategory","selectAllBreakdownsInCategory","categoryBreakdowns","allEnabled","every","breakdown","newSelectedBreakdowns","deselectAllBreakdownsInCategory","children","className","onClick","htmlFor","type","onChange","e","target","placeholder","required","disabled","min","values","Boolean","category","index","name","isAction","isActionMetric","label","b","isDisabled","disabledTooltip","isActionCompatible","title","substring","style","width","total_records","checked","keys","_ref5","conceptName","summary","total_count","toFixed","total_value","total_conversions","total_conversion_value","records_with_data","jsonData","JSON","stringify","navigator","clipboard","writeText","then","button","originalText","textContent","classList","add","remove","catch","alert"],"sources":["/Users/joshuakaufman/untitled folder 3/orchestrator/dashboard/client/src/components/meta/LiveApiTester.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { api } from '../../services/api';\nimport {\n  FIELD_CATEGORIES,\n  BREAKDOWN_CATEGORIES,\n  ACTION_METRICS,\n  ACTION_TYPE_ALLOWED_BREAKDOWNS\n} from './utils/metaConstants';\nimport {\n  validateMetaBreakdownCombo,\n  isBreakdownDisabled,\n  getDisabledTooltip,\n  getSelectedFieldsString,\n  getSelectedBreakdownsString,\n  buildApiParams,\n  isValidDate\n} from './utils/metaApiUtils';\nimport { applyMappingsToRecords, getMappedConceptSummary, loadActionMappings } from './utils/actionMappingUtils';\n\nconst LiveApiTester = ({\n  startDateInput,\n  setStartDateInput,\n  endDateInput,\n  setEndDateInput,\n  incrementInput,\n  setIncrementInput,\n  selectedFields,\n  setSelectedFields,\n  selectedBreakdowns,\n  setSelectedBreakdowns,\n  error,\n  setError\n}) => {\n  // API request state\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadingProgress, setLoadingProgress] = useState({ stage: '', pagesLoaded: 0, percentage: 0 });\n  const [results, setResults] = useState(null);\n  const [asyncJobInfo, setAsyncJobInfo] = useState(null);\n  const [jobPollingInterval, setJobPollingInterval] = useState(null);\n  \n  // Show/hide instructions and breakdowns\n  const [showInstructions, setShowInstructions] = useState(false);\n  const [showBreakdowns, setShowBreakdowns] = useState(false);\n  const [showMappedData, setShowMappedData] = useState(true);\n  const [actionMappings, setActionMappings] = useState({});\n\n  // Load action mappings on component mount\n  useEffect(() => {\n    const mappings = loadActionMappings();\n    setActionMappings(mappings);\n  }, []);\n\n  // Helper function to format nested action values for better readability\n  const formatNestedValues = (data) => {\n    if (!Array.isArray(data)) return data;\n    \n    return data.map(record => {\n      const formatted = { ...record };\n      \n      // Format common nested fields\n      ['actions', 'action_values', 'conversions', 'conversion_values'].forEach(field => {\n        if (formatted[field] && Array.isArray(formatted[field])) {\n          formatted[field + '_formatted'] = formatted[field].reduce((acc, item) => {\n            acc[item.action_type] = item.value;\n            return acc;\n          }, {});\n        }\n      });\n      \n      return formatted;\n    });\n  };\n\n  // Check for action metrics and deselect incompatible breakdowns when fields change\n  useEffect(() => {\n    // Determine if any action metrics are selected\n    const hasActionMetrics = Object.entries(selectedFields)\n      .some(([field, isSelected]) => isSelected && ACTION_METRICS.includes(field));\n    \n    if (hasActionMetrics) {\n      // Get currently selected breakdown IDs\n      const selectedBreakdownIds = Object.entries(selectedBreakdowns)\n        .filter(([_, isSelected]) => isSelected)\n        .map(([id, _]) => id)\n        .sort(); // enforce order deterministically\n      \n      // If we have more than one breakdown selected with action metrics\n      if (selectedBreakdownIds.length > 1) {\n        // Create a new object with incompatible breakdowns turned off\n        const updatedBreakdowns = {...selectedBreakdowns};\n        \n        // Keep only the first action-compatible breakdown if one exists\n        let keptOne = false;\n        \n        selectedBreakdownIds.forEach(breakdownId => {\n          if (ACTION_TYPE_ALLOWED_BREAKDOWNS.includes(breakdownId) && !keptOne) {\n            // Keep the first compatible breakdown\n            keptOne = true;\n          } else {\n            // Deselect all others\n            updatedBreakdowns[breakdownId] = false;\n          }\n        });\n        \n        // Update the state with the fixed breakdown selection\n        setSelectedBreakdowns(updatedBreakdowns);\n        \n        // Show a notification or alert to inform the user\n        setError(\"Some breakdowns were deselected because with action metrics, at most one breakdown is allowed\");\n        setTimeout(() => setError(null), 5000); // Clear the error after 5 seconds\n      }\n      \n      // If only one breakdown is selected and it's not action-compatible\n      else if (selectedBreakdownIds.length === 1 && !ACTION_TYPE_ALLOWED_BREAKDOWNS.includes(selectedBreakdownIds[0])) {\n        const updatedBreakdowns = {...selectedBreakdowns};\n        updatedBreakdowns[selectedBreakdownIds[0]] = false;\n        setSelectedBreakdowns(updatedBreakdowns);\n        \n        setError(`Selected breakdown '${selectedBreakdownIds[0]}' was deselected because it's incompatible with action metrics`);\n        setTimeout(() => setError(null), 5000); // Clear the error after 5 seconds\n      }\n    }\n  }, [selectedFields, selectedBreakdowns, setSelectedBreakdowns, setError]);\n\n  // Toggle a field selection\n  const toggleField = (fieldId) => {\n    setSelectedFields(prev => ({\n      ...prev,\n      [fieldId]: !prev[fieldId]\n    }));\n  };\n  \n  // Toggle a breakdown selection\n  const toggleBreakdown = (breakdownId) => {\n    if (isBreakdownDisabled(breakdownId, selectedFields, selectedBreakdowns)) {\n      return; // Don't toggle if disabled\n    }\n    \n    setSelectedBreakdowns(prev => ({\n      ...prev,\n      [breakdownId]: !prev[breakdownId]\n    }));\n  };\n\n  // Clean up polling interval on unmount\n  useEffect(() => {\n    return () => {\n      if (jobPollingInterval) {\n        clearInterval(jobPollingInterval);\n      }\n    };\n  }, [jobPollingInterval]);\n\n  // Poll async job status\n  const pollJobStatus = async (reportRunId) => {\n    try {\n      const statusResponse = await api.checkMetaJobStatus(reportRunId);\n      \n      setLoadingProgress(prev => ({\n        ...prev,\n        stage: `Processing in Meta servers... (${statusResponse.async_status})`,\n        percentage: statusResponse.async_percent_completion || 0\n      }));\n      \n      if (statusResponse.async_status === 'Job Completed') {\n        // Job is done, fetch results\n        setLoadingProgress(prev => ({ ...prev, stage: 'Fetching results...', percentage: 100 }));\n        \n        const resultsResponse = await api.getMetaJobResults(reportRunId);\n        \n        if (resultsResponse.data && resultsResponse.data.data) {\n          // Apply action mappings to the results\n          const mappedData = applyMappingsToRecords(resultsResponse.data.data, actionMappings);\n          const conceptSummary = getMappedConceptSummary(mappedData, actionMappings);\n          \n          setResults({\n            ...resultsResponse,\n            data: {\n              ...resultsResponse.data,\n              data: mappedData,\n              business_summary: conceptSummary\n            }\n          });\n        } else {\n          setResults(resultsResponse);\n        }\n        \n        // Clear polling\n        if (jobPollingInterval) {\n          clearInterval(jobPollingInterval);\n          setJobPollingInterval(null);\n        }\n        \n        setIsLoading(false);\n        setAsyncJobInfo(null);\n        \n      } else if (statusResponse.async_status === 'Job Failed') {\n        setError('Meta API job failed. Please try again.');\n        if (jobPollingInterval) {\n          clearInterval(jobPollingInterval);\n          setJobPollingInterval(null);\n        }\n        setIsLoading(false);\n        setAsyncJobInfo(null);\n      }\n      \n    } catch (err) {\n      console.error('Error polling job status:', err);\n      \n      // If we already have results, don't show this as an error - just stop polling\n      if (results && results.data) {\n        console.log('Job status check failed but we already have results - stopping polling');\n        if (jobPollingInterval) {\n          clearInterval(jobPollingInterval);\n          setJobPollingInterval(null);\n        }\n        setIsLoading(false);\n        setAsyncJobInfo(null);\n        return;\n      }\n      \n      // Only show error if we don't have results yet\n      setError('Error checking job status: ' + (err.message || 'Unknown error'));\n      if (jobPollingInterval) {\n        clearInterval(jobPollingInterval);\n        setJobPollingInterval(null);\n      }\n      setIsLoading(false);\n      setAsyncJobInfo(null);\n    }\n  };\n\n  // Handle submitting the form to fetch Meta data\n  const handleFetchData = async () => {\n    if (!startDateInput || !endDateInput) {\n      setError('Start date and end date are required');\n      return;\n    }\n    \n    if (!isValidDate(startDateInput) || !isValidDate(endDateInput)) {\n      setError('Start or end date is invalid. Use YYYY-MM-DD format.');\n      return;\n    }\n    \n    const fieldsString = getSelectedFieldsString(selectedFields);\n    if (!fieldsString) {\n      setError('At least one field must be selected');\n      return;\n    }\n    \n    // Check for incompatible combinations before submitting\n    const validation = validateMetaBreakdownCombo(selectedFields, selectedBreakdowns);\n    if (!validation.valid) {\n      setError(validation.errors[0]); // Show first error\n      return;\n    }\n    \n    setIsLoading(true);\n    setError(null);\n    setResults(null);\n    setAsyncJobInfo(null);\n    setLoadingProgress({ stage: 'Initializing request...', pagesLoaded: 0, percentage: 0 });\n    \n    try {\n      // Build request parameters\n      const params = buildApiParams(startDateInput, endDateInput, incrementInput, selectedFields, selectedBreakdowns);\n      \n      setLoadingProgress(prev => ({ ...prev, stage: 'Sending request to Meta API...' }));\n      \n      // Make the API request\n      const response = await api.fetchMetaData(params);\n      \n      // Check if this is an async job\n      if (response.async_job && response.report_run_id) {\n        // This is an async job - start polling\n        setAsyncJobInfo({\n          reportRunId: response.report_run_id,\n          status: response.async_status\n        });\n        \n        setLoadingProgress(prev => ({ \n          ...prev, \n          stage: `Started async job (${response.async_status})...`,\n          percentage: 0\n        }));\n        \n        // Start polling every 3 seconds\n        const interval = setInterval(() => {\n          pollJobStatus(response.report_run_id);\n        }, 3000);\n        \n        setJobPollingInterval(interval);\n        \n        // Poll immediately once\n        pollJobStatus(response.report_run_id);\n        \n      } else {\n        // This is a synchronous response\n        if (response.data && response.data.data) {\n          // Apply action mappings to the results\n          const mappedData = applyMappingsToRecords(response.data.data, actionMappings);\n          const conceptSummary = getMappedConceptSummary(mappedData, actionMappings);\n          \n          setResults({\n            ...response,\n            data: {\n              ...response.data,\n              data: mappedData,\n              business_summary: conceptSummary\n            }\n          });\n        } else {\n          setResults(response);\n        }\n        \n        if (response.meta?.pages_fetched > 0) {\n          setLoadingProgress({ \n            stage: 'Processing results...', \n            pagesLoaded: response.meta.pages_fetched,\n            percentage: 100\n          });\n        }\n        \n        // Short delay to show the processing message\n        setTimeout(() => {\n          setIsLoading(false);\n        }, 500);\n      }\n      \n    } catch (err) {\n      setError(err.response?.data?.error || err.message || 'An unknown error occurred');\n      setIsLoading(false);\n      setAsyncJobInfo(null);\n    }\n  };\n\n  // Handle predefined API request templates\n  const handlePredefinedRequest = async (templateType) => {\n    if (!startDateInput || !endDateInput) {\n      setError('Start date and end date are required');\n      return;\n    }\n    \n    if (!isValidDate(startDateInput) || !isValidDate(endDateInput)) {\n      setError('Start or end date is invalid. Use YYYY-MM-DD format.');\n      return;\n    }\n\n    setIsLoading(true);\n    setError(null);\n    setResults(null);\n    setAsyncJobInfo(null);\n    setLoadingProgress({ stage: 'Initializing predefined request...', pagesLoaded: 0, percentage: 0 });\n\n    try {\n      let params;\n      \n      if (templateType === 'country') {\n        // Country-level conversions template\n        params = {\n          start_date: startDateInput,\n          end_date: endDateInput,\n          time_increment: parseInt(incrementInput, 10) || 1,\n          fields: 'ad_id,ad_name,adset_id,adset_name,campaign_id,campaign_name,impressions,clicks,spend,actions',\n          breakdowns: 'country'\n        };\n      } else if (templateType === 'device') {\n        // Device-level conversions template (impression_device requires placement)\n        params = {\n          start_date: startDateInput,\n          end_date: endDateInput,\n          time_increment: parseInt(incrementInput, 10) || 1,\n          fields: 'ad_id,ad_name,adset_id,adset_name,campaign_id,campaign_name,impressions,clicks,spend,actions',\n          breakdowns: 'impression_device,placement'\n        };\n      } else if (templateType === 'region') {\n        // Region-level conversions template\n        params = {\n          start_date: startDateInput,\n          end_date: endDateInput,\n          time_increment: parseInt(incrementInput, 10) || 1,\n          fields: 'ad_id,ad_name,adset_id,adset_name,campaign_id,campaign_name,impressions,clicks,spend,actions',\n          breakdowns: 'region'\n        };\n      } else if (templateType === 'country_device') {\n        // EXACT RECIPE: Country breakdown with device action splitting\n        params = {\n          start_date: startDateInput,\n          end_date: endDateInput,\n          time_increment: parseInt(incrementInput, 10) || 1,\n          fields: 'ad_id,ad_name,adset_id,adset_name,campaign_id,campaign_name,impressions,clicks,spend,actions',\n          breakdowns: 'country',\n          action_breakdowns: 'action_device',\n          limit: 500  // As specified in your recipe\n        };\n      }\n\n      setLoadingProgress(prev => ({ ...prev, stage: 'Sending request to Meta API...' }));\n\n      // Make the API request\n      const response = await api.fetchMetaData(params);\n      \n      // Check if this is an async job\n      if (response.async_job && response.report_run_id) {\n        // This is an async job - start polling\n        setAsyncJobInfo({\n          reportRunId: response.report_run_id,\n          status: response.async_status\n        });\n        \n        setLoadingProgress(prev => ({ \n          ...prev, \n          stage: `Started async job (${response.async_status})...`,\n          percentage: 0\n        }));\n        \n        // Start polling every 3 seconds\n        const interval = setInterval(() => {\n          pollJobStatus(response.report_run_id);\n        }, 3000);\n        \n        setJobPollingInterval(interval);\n        \n        // Poll immediately once\n        pollJobStatus(response.report_run_id);\n        \n      } else {\n        // This is a synchronous response\n        if (response.data && response.data.data) {\n          // Apply action mappings to the results\n          const mappedData = applyMappingsToRecords(response.data.data, actionMappings);\n          const conceptSummary = getMappedConceptSummary(mappedData, actionMappings);\n          \n          setResults({\n            ...response,\n            data: {\n              ...response.data,\n              data: mappedData,\n              business_summary: conceptSummary\n            }\n          });\n        } else {\n          setResults(response);\n        }\n        \n        if (response.meta?.pages_fetched > 0) {\n          setLoadingProgress({ \n            stage: 'Processing results...', \n            pagesLoaded: response.meta.pages_fetched,\n            percentage: 100\n          });\n        }\n        \n        // Short delay to show the processing message\n        setTimeout(() => {\n          setIsLoading(false);\n        }, 500);\n      }\n      \n    } catch (err) {\n      setError(err.response?.data?.error || err.message || 'An unknown error occurred');\n      setIsLoading(false);\n      setAsyncJobInfo(null);\n    }\n  };\n\n  // Toggle instructions visibility\n  const toggleInstructions = () => {\n    setShowInstructions(!showInstructions);\n  };\n  \n  // Select all fields in a category\n  const selectAllInCategory = (categoryFields) => {\n    const newSelectedFields = { ...selectedFields };\n    categoryFields.forEach(field => {\n      newSelectedFields[field.id] = true;\n    });\n    setSelectedFields(newSelectedFields);\n  };\n  \n  // Deselect all fields in a category\n  const deselectAllInCategory = (categoryFields) => {\n    const newSelectedFields = { ...selectedFields };\n    categoryFields.forEach(field => {\n      newSelectedFields[field.id] = false;\n    });\n    setSelectedFields(newSelectedFields);\n  };\n  \n  // Select all breakdowns in a category\n  const selectAllBreakdownsInCategory = (categoryBreakdowns) => {\n    // Check if all breakdowns in this category are enabled first\n    const allEnabled = categoryBreakdowns.every(breakdown => \n      !isBreakdownDisabled(breakdown.id, selectedFields, selectedBreakdowns)\n    );\n    \n    if (!allEnabled) {\n      return; // Don't select all if any are disabled\n    }\n    \n    const newSelectedBreakdowns = { ...selectedBreakdowns };\n    categoryBreakdowns.forEach(breakdown => {\n      newSelectedBreakdowns[breakdown.id] = true;\n    });\n    setSelectedBreakdowns(newSelectedBreakdowns);\n  };\n  \n  // Deselect all breakdowns in a category\n  const deselectAllBreakdownsInCategory = (categoryBreakdowns) => {\n    const newSelectedBreakdowns = { ...selectedBreakdowns };\n    categoryBreakdowns.forEach(breakdown => {\n      newSelectedBreakdowns[breakdown.id] = false;\n    });\n    setSelectedBreakdowns(newSelectedBreakdowns);\n  };\n\n  return (\n    <div>\n      {/* Instructions */}\n      <div className=\"bg-blue-50 dark:bg-blue-900 rounded-lg shadow p-4 mb-6\">\n        <div className=\"flex justify-between items-center cursor-pointer\" onClick={toggleInstructions}>\n          <h2 className=\"text-lg font-semibold text-blue-800 dark:text-blue-200\">\n            How to use this tool\n          </h2>\n          <button className=\"text-blue-500\">\n            {showInstructions ? 'Hide' : 'Show'} instructions\n          </button>\n        </div>\n        \n        {showInstructions && (\n          <div className=\"mt-4 text-sm text-blue-800 dark:text-blue-200\">\n            <p className=\"mb-2\">\n              This tool allows you to fetch data from the Meta Ads API for a specified date range.\n            </p>\n            \n            <h3 className=\"font-semibold mt-3 mb-1\">Parameters:</h3>\n            <ul className=\"list-disc pl-5 space-y-1\">\n              <li><strong>Start Date and End Date:</strong> Define the time period for data retrieval (YYYY-MM-DD format)</li>\n              <li><strong>Time Increment:</strong> Controls how data is grouped:\n                <ul className=\"list-disc pl-5 mt-1\">\n                  <li>Set to <strong>0</strong> to get aggregated data for the entire date range</li>\n                  <li>Set to <strong>1</strong> for daily breakdowns</li>\n                  <li>Set to <strong>7</strong> for weekly breakdowns</li>\n                  <li>Set to <strong>30</strong> for monthly breakdowns (approximate)</li>\n                </ul>\n              </li>\n              <li><strong>Fields:</strong> Click on the pills to select which data fields to retrieve</li>\n              <li><strong>Breakdowns:</strong> Select dimension breakdowns to segment your data (optional)</li>\n            </ul>\n            \n            <p className=\"mt-3\">\n              <strong>Breakdown Rules:</strong>\n            </p>\n            <ul className=\"list-disc pl-5 space-y-1\">\n              <li>Maximum of 2 breakdown dimensions allowed at once</li>\n              <li>Certain breakdowns cannot be used together (disabled options will appear grayed out)</li>\n              <li>Breakdowns in the same category (e.g., multiple geography options) cannot be combined</li>\n              <li>Hourly stats breakdowns must be used alone</li>\n              <li><strong>Action/Conversion Metrics Limitations:</strong>\n                <ul className=\"list-disc pl-5 mt-1 text-red-800 dark:text-red-300\">\n                  <li>When selecting <strong>⚡ action metrics</strong> Meta always adds an internal <code>action_type</code> breakdown</li>\n                  <li>With <strong>⚡ action metrics</strong> you may add <strong>only one</strong> other breakdown, and it must be <code>conversion_destination</code></li>\n                  <li>Common breakdowns like country, age, gender, device_platform <strong>cannot</strong> be used with action metrics</li>\n                  <li>To get both action data and country/device breakdowns, you need to run separate reports and join them offline</li>\n                </ul>\n              </li>\n              <li>Your selected fields and parameters are saved automatically for future sessions</li>\n            </ul>\n          </div>\n        )}\n      </div>\n\n      {/* Data Retrieval Section */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6 mb-6\">\n        <h2 className=\"text-xl font-semibold mb-4\">Fetch Meta API Data</h2>\n        \n        <div className=\"mb-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\n            <div>\n              <label className=\"block text-sm font-medium mb-1\" htmlFor=\"start_date_input\">\n                Start Date (YYYY-MM-DD)<span className=\"text-red-500\"> *</span>\n              </label>\n              <input\n                type=\"text\"\n                id=\"start_date_input\"\n                value={startDateInput}\n                onChange={(e) => setStartDateInput(e.target.value)}\n                className=\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600\"\n                placeholder=\"e.g., 2023-05-01\"\n                required\n                disabled={isLoading}\n              />\n            </div>\n            \n            <div>\n              <label className=\"block text-sm font-medium mb-1\" htmlFor=\"end_date_input\">\n                End Date (YYYY-MM-DD)<span className=\"text-red-500\"> *</span>\n              </label>\n              <input\n                type=\"text\"\n                id=\"end_date_input\"\n                value={endDateInput}\n                onChange={(e) => setEndDateInput(e.target.value)}\n                className=\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600\"\n                placeholder=\"e.g., 2023-05-31\"\n                required\n                disabled={isLoading}\n              />\n            </div>\n            \n            <div>\n              <label className=\"block text-sm font-medium mb-1\" htmlFor=\"increment_input\">\n                Time Increment (days)\n              </label>\n              <input\n                type=\"number\"\n                id=\"increment_input\"\n                value={incrementInput}\n                onChange={(e) => setIncrementInput(e.target.value)}\n                className=\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600\"\n                placeholder=\"1\"\n                min=\"0\"\n                disabled={isLoading}\n              />\n              <p className=\"text-xs text-gray-500 mt-1\">\n                0 = entire range, 1 = daily, 7 = weekly, 30 = monthly\n              </p>\n            </div>\n          </div>\n          \n          {/* Field Selection */}\n          <div className=\"mb-6\">\n            <div className=\"flex justify-between items-center mb-2\">\n              <label className=\"block text-sm font-medium\">\n                Select Fields<span className=\"text-red-500\"> *</span>\n              </label>\n              <div className=\"text-sm\">\n                <span className=\"text-gray-500\">{Object.values(selectedFields).filter(Boolean).length} fields selected</span>\n              </div>\n            </div>\n            \n            {FIELD_CATEGORIES.map((category, index) => (\n              <div key={index} className=\"mb-4\">\n                <div className=\"flex justify-between items-center mb-2\">\n                  <h3 className=\"text-sm font-semibold text-gray-700 dark:text-gray-300\">{category.name}</h3>\n                  <div className=\"space-x-2\">\n                    <button \n                      type=\"button\" \n                      onClick={() => selectAllInCategory(category.fields)}\n                      className=\"text-xs text-blue-600 hover:text-blue-800\"\n                      disabled={isLoading}\n                    >\n                      Select All\n                    </button>\n                    <button \n                      type=\"button\" \n                      onClick={() => deselectAllInCategory(category.fields)}\n                      className=\"text-xs text-red-600 hover:text-red-800\"\n                      disabled={isLoading}\n                    >\n                      Clear\n                    </button>\n                  </div>\n                </div>\n                <div className=\"flex flex-wrap gap-2\">\n                  {category.fields.map((field) => {\n                    const isAction = field.isActionMetric;\n                    return (\n                      <button\n                        key={field.id}\n                        type=\"button\"\n                        onClick={() => toggleField(field.id)}\n                        className={`px-3 py-1 rounded-full text-sm ${\n                          selectedFields[field.id] \n                            ? 'bg-blue-500 text-white' \n                            : 'bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300'\n                        }`}\n                        disabled={isLoading}\n                      >\n                        {field.label}\n                        <span className=\"ml-1 text-xs\">{isAction && '⚡'}</span>\n                      </button>\n                    );\n                  })}\n                </div>\n              </div>\n            ))}\n          </div>\n          \n          {/* Breakdowns Toggle */}\n          <div className=\"mb-4\">\n            <button\n              type=\"button\"\n              onClick={() => setShowBreakdowns(!showBreakdowns)}\n              className=\"text-blue-600 hover:text-blue-800 text-sm font-medium flex items-center\"\n            >\n              <span>{showBreakdowns ? '- Hide' : '+ Show'} Breakdowns (Advanced)</span>\n            </button>\n          </div>\n          \n          {/* Breakdowns Selection */}\n          {showBreakdowns && (\n            <div className=\"mb-6 pl-4 border-l-2 border-blue-200\">\n              <div className=\"flex justify-between items-center mb-2\">\n                <label className=\"block text-sm font-medium\">\n                  Select Breakdowns (Optional)\n                </label>\n                <div className=\"text-sm\">\n                  <span className=\"text-gray-500\">{Object.values(selectedBreakdowns).filter(Boolean).length} breakdowns selected</span>\n                </div>\n              </div>\n              \n              <div className=\"text-xs bg-gray-100 dark:bg-gray-700 p-2 rounded mb-3 text-gray-800 dark:text-gray-300\">\n                <strong>Note:</strong> The Meta API has strict rules about which breakdowns can be used together.\n                <ul className=\"mt-1 ml-2 list-disc pl-4\">\n                  <li>Maximum 2 breakdowns allowed</li>\n                  <li><strong>Important:</strong> When using <strong>⚡ action metrics</strong> Meta always adds an internal <code>action_type</code> breakdown</li>\n                  <li>With <strong>⚡ action metrics</strong> you may add <strong>only one</strong> other breakdown, and it must be <code>conversion_destination</code></li>\n                  <li>Disabled options are incompatible with your current selection</li>\n                </ul>\n              </div>\n              \n              {BREAKDOWN_CATEGORIES.map((category, index) => (\n                <div key={index} className=\"mb-4\">\n                  <div className=\"flex justify-between items-center mb-2\">\n                    <h3 className=\"text-sm font-semibold text-gray-700 dark:text-gray-300\">{category.name}</h3>\n                    <div className=\"space-x-2\">\n                      <button \n                        type=\"button\" \n                        onClick={() => selectAllBreakdownsInCategory(category.breakdowns)}\n                        className=\"text-xs text-blue-600 hover:text-blue-800\"\n                        disabled={isLoading || category.breakdowns.some(b => isBreakdownDisabled(b.id, selectedFields, selectedBreakdowns))}\n                      >\n                        Select All\n                      </button>\n                      <button \n                        type=\"button\" \n                        onClick={() => deselectAllBreakdownsInCategory(category.breakdowns)}\n                        className=\"text-xs text-red-600 hover:text-red-800\"\n                        disabled={isLoading}\n                      >\n                        Clear\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"flex flex-wrap gap-2\">\n                    {category.breakdowns.map((breakdown) => {\n                      const isDisabled = isBreakdownDisabled(breakdown.id, selectedFields, selectedBreakdowns);\n                      const disabledTooltip = isDisabled ? getDisabledTooltip(breakdown.id, selectedFields, selectedBreakdowns) : '';\n                      const isActionCompatible = ACTION_TYPE_ALLOWED_BREAKDOWNS.includes(breakdown.id);\n                      \n                      return (\n                        <button\n                          key={breakdown.id}\n                          type=\"button\"\n                          onClick={() => toggleBreakdown(breakdown.id)}\n                          className={`px-3 py-1 rounded-full text-sm ${\n                            selectedBreakdowns[breakdown.id] \n                              ? 'bg-green-500 text-white' \n                              : isDisabled\n                                ? 'bg-gray-300 dark:bg-gray-600 text-gray-500 dark:text-gray-400 cursor-not-allowed'\n                                : 'bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-300'\n                          }`}\n                          disabled={isLoading || isDisabled}\n                          title={disabledTooltip}\n                        >\n                          {breakdown.label}\n                          {isActionCompatible && \n                            <span className=\"ml-1 text-xs\" title=\"Compatible with action metrics\">★</span>\n                          }\n                        </button>\n                      );\n                    })}\n                  </div>\n                  {category.name === \"Others\" && (\n                    <div className=\"text-xs text-gray-500 mt-1\">\n                      ★ Breakdowns marked with a star are compatible with action metrics (actions, conversions, ROAS)\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n          )}\n\n          <div className=\"flex space-x-4\">\n            <button\n              type=\"button\"\n              onClick={handleFetchData}\n              disabled={isLoading}\n              className=\"px-6 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 disabled:opacity-50\"\n            >\n              {isLoading ? 'Loading...' : 'Fetch Data'}\n            </button>\n          </div>\n        </div>\n\n        {/* Loading indicator */}\n        {isLoading && (\n          <div className=\"mt-4 p-4 bg-slate-50 dark:bg-slate-800 rounded-lg border border-blue-200 dark:border-blue-800\">\n            <div className=\"flex items-center mb-3\">\n              <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-blue-500 mr-3\"></div>\n              <span className=\"font-medium\">{loadingProgress.stage}</span>\n              {asyncJobInfo && (\n                <span className=\"ml-2 px-2 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 text-xs rounded-full\">\n                  Job ID: {asyncJobInfo.reportRunId.substring(0, 8)}...\n                </span>\n              )}\n            </div>\n            \n            {/* Progress bar */}\n            <div className=\"bg-gray-200 dark:bg-gray-700 rounded-full h-3 w-full mb-2\">\n              <div \n                className={`h-3 rounded-full transition-all duration-300 ${\n                  asyncJobInfo \n                    ? 'bg-gradient-to-r from-blue-500 to-purple-500' \n                    : 'bg-blue-600 animate-pulse'\n                }`}\n                style={{ \n                  width: asyncJobInfo ? `${loadingProgress.percentage}%` : '100%' \n                }}\n              ></div>\n            </div>\n            \n            {/* Progress details */}\n            <div className=\"flex justify-between items-center text-sm text-gray-600 dark:text-gray-400\">\n              <span>\n                {asyncJobInfo ? (\n                  `${loadingProgress.percentage}% complete`\n                ) : (\n                  loadingProgress.pagesLoaded > 0 ? \n                    `${loadingProgress.pagesLoaded} pages loaded` : \n                    'Processing...'\n                )}\n              </span>\n              {asyncJobInfo && (\n                <span className=\"text-xs font-mono bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded\">\n                  Async Mode\n                </span>\n              )}\n            </div>\n            \n                         {/* Async job info */}\n             {asyncJobInfo && (\n               <div className=\"mt-3 p-3 bg-blue-50 dark:bg-blue-900/20 rounded border border-blue-200 dark:border-blue-800\">\n                 <div className=\"flex justify-between items-start\">\n                   <div className=\"text-sm flex-1\">\n                     <div className=\"font-medium text-blue-800 dark:text-blue-200 mb-1\">\n                       📊 Meta is processing your request on their servers\n                     </div>\n                     <div className=\"text-blue-600 dark:text-blue-300 text-xs\">\n                       Large requests are processed asynchronously for better performance. \n                       You'll see progress updates every few seconds.\n                     </div>\n                   </div>\n                   <button\n                     onClick={() => {\n                       if (jobPollingInterval) {\n                         clearInterval(jobPollingInterval);\n                         setJobPollingInterval(null);\n                       }\n                       setIsLoading(false);\n                       setAsyncJobInfo(null);\n                       setLoadingProgress({ stage: '', pagesLoaded: 0, percentage: 0 });\n                     }}\n                     className=\"ml-3 px-3 py-1 bg-red-100 hover:bg-red-200 dark:bg-red-900 dark:hover:bg-red-800 \n                              text-red-800 dark:text-red-200 text-xs rounded border border-red-300 dark:border-red-700 \n                              transition-colors duration-200\"\n                   >\n                     Cancel\n                   </button>\n                 </div>\n               </div>\n             )}\n          </div>\n        )}\n      </div>\n\n      {/* Futuristic API Command Center */}\n      <div className=\"relative overflow-hidden bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 rounded-3xl shadow-2xl border border-purple-500/20 mb-6\">\n        {/* Animated background particles */}\n        <div className=\"absolute inset-0 overflow-hidden\">\n          <div className=\"absolute top-0 left-1/4 w-2 h-2 bg-cyan-400 rounded-full animate-pulse opacity-60\"></div>\n          <div className=\"absolute top-1/3 right-1/4 w-1 h-1 bg-purple-400 rounded-full animate-ping opacity-40\"></div>\n          <div className=\"absolute bottom-1/4 left-1/3 w-1.5 h-1.5 bg-emerald-400 rounded-full animate-pulse opacity-50\"></div>\n          <div className=\"absolute top-1/2 right-1/3 w-1 h-1 bg-pink-400 rounded-full animate-ping opacity-30\"></div>\n        </div>\n        \n        {/* Holographic grid overlay */}\n        <div className=\"absolute inset-0 bg-gradient-to-r from-transparent via-cyan-500/5 to-transparent animate-pulse\"></div>\n        \n        <div className=\"relative p-8\">\n          {/* Futuristic Header */}\n          <div className=\"text-center mb-8\">\n            <div className=\"inline-flex items-center space-x-3 mb-4\">\n              <div className=\"w-3 h-3 bg-gradient-to-r from-cyan-400 to-blue-500 rounded-full animate-pulse\"></div>\n              <h2 className=\"text-3xl font-bold bg-gradient-to-r from-cyan-300 via-purple-300 to-pink-300 bg-clip-text text-transparent tracking-wide\">\n                QUANTUM API COMMAND CENTER\n              </h2>\n              <div className=\"w-3 h-3 bg-gradient-to-r from-pink-400 to-purple-500 rounded-full animate-pulse\"></div>\n            </div>\n            <div className=\"flex justify-center items-center space-x-2 mb-2\">\n              <div className=\"h-px bg-gradient-to-r from-transparent via-cyan-400 to-transparent w-20\"></div>\n              <span className=\"text-cyan-300 text-sm font-mono tracking-wider\">NEURAL INTERFACE v2100.1</span>\n              <div className=\"h-px bg-gradient-to-r from-transparent via-cyan-400 to-transparent w-20\"></div>\n            </div>\n            <p className=\"text-slate-300 text-sm max-w-2xl mx-auto leading-relaxed\">\n              Advanced Meta API templates with quantum-enhanced data processing and holographic visualization\n            </p>\n          </div>\n          \n                     {/* Template Grid */}\n           <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-4 gap-4\">\n            \n            {/* Country Template - Enhanced */}\n            <div className=\"group relative\">\n              {/* Glow effect */}\n              <div className=\"absolute -inset-1 bg-gradient-to-r from-emerald-500 to-cyan-500 rounded-2xl blur opacity-20 group-hover:opacity-40 transition duration-300\"></div>\n              \n              <div className=\"relative bg-gradient-to-br from-slate-800/80 to-slate-900/80 backdrop-blur-xl border border-emerald-500/30 rounded-2xl p-6 hover:border-emerald-400/60 transition-all duration-300\">\n                {/* Header with icon */}\n                <div className=\"flex items-center space-x-3 mb-4\">\n                  <div className=\"w-10 h-10 bg-gradient-to-br from-emerald-400 to-cyan-500 rounded-xl flex items-center justify-center shadow-lg shadow-emerald-500/20\">\n                    <span className=\"text-white font-bold text-lg\">🌍</span>\n                  </div>\n                  <div>\n                    <h3 className=\"text-xl font-bold text-emerald-300 tracking-wide\">GEO-MATRIX SCAN</h3>\n                    <div className=\"text-xs text-emerald-400/70 font-mono\">MODULE_001 • COUNTRY_ANALYTICS</div>\n                  </div>\n                </div>\n                \n                {/* Description */}\n                <p className=\"text-slate-300 text-sm mb-4 leading-relaxed\">\n                  Quantum-enhanced geographical performance analysis. Maps ad efficiency across global territories with neural pattern recognition.\n                </p>\n                \n                {/* Tech specs panel */}\n                <div className=\"bg-slate-900/60 rounded-xl p-4 mb-6 border border-emerald-500/20\">\n                  <div className=\"text-xs text-emerald-400 font-mono mb-2\">NEURAL PARAMETERS:</div>\n                  <div className=\"text-xs text-slate-300 font-mono space-y-1\">\n                    <div className=\"flex items-center space-x-2\">\n                      <span className=\"text-cyan-400\">fields:</span>\n                      <span className=\"text-yellow-300\">ad_id, ad_name, campaign_*, impressions, clicks, spend, actions</span>\n                    </div>\n                    <div className=\"flex items-center space-x-2\">\n                      <span className=\"text-cyan-400\">breakdowns:</span>\n                      <span className=\"text-emerald-300\">country</span>\n                    </div>\n                    <div className=\"flex items-center space-x-2\">\n                      <span className=\"text-cyan-400\">output:</span>\n                      <span className=\"text-pink-300\">ad-country matrix pairs</span>\n                    </div>\n                  </div>\n                </div>\n                \n                {/* Execute button */}\n                <button\n                  type=\"button\"\n                  onClick={() => handlePredefinedRequest('country')}\n                  disabled={isLoading || !startDateInput || !endDateInput}\n                  className=\"w-full h-14 bg-gradient-to-r from-emerald-500 to-cyan-500 text-white font-bold rounded-xl \n                           hover:from-emerald-400 hover:to-cyan-400 disabled:from-gray-600 disabled:to-gray-700 \n                           transition-all duration-300 transform hover:scale-[1.02] active:scale-[0.98] \n                           shadow-lg shadow-emerald-500/25 hover:shadow-emerald-500/40 \n                           disabled:opacity-50 disabled:cursor-not-allowed\n                           relative overflow-hidden group/btn\"\n                >\n                  <div className=\"absolute inset-0 bg-gradient-to-r from-white/0 via-white/20 to-white/0 transform -skew-x-12 -translate-x-full group-hover/btn:translate-x-full transition-transform duration-700\"></div>\n                  <span className=\"relative flex items-center justify-center space-x-2\">\n                    <span>{isLoading ? '⚡ PROCESSING...' : '🚀 EXECUTE GEO-SCAN'}</span>\n                  </span>\n                </button>\n              </div>\n            </div>\n\n            {/* Device Template - Enhanced */}\n            <div className=\"group relative\">\n              {/* Glow effect */}\n              <div className=\"absolute -inset-1 bg-gradient-to-r from-purple-500 to-pink-500 rounded-2xl blur opacity-20 group-hover:opacity-40 transition duration-300\"></div>\n              \n              <div className=\"relative bg-gradient-to-br from-slate-800/80 to-slate-900/80 backdrop-blur-xl border border-purple-500/30 rounded-2xl p-6 hover:border-purple-400/60 transition-all duration-300\">\n                {/* Header with icon */}\n                <div className=\"flex items-center space-x-3 mb-4\">\n                  <div className=\"w-10 h-10 bg-gradient-to-br from-purple-400 to-pink-500 rounded-xl flex items-center justify-center shadow-lg shadow-purple-500/20\">\n                    <span className=\"text-white font-bold text-lg\">📱</span>\n                  </div>\n                  <div>\n                    <h3 className=\"text-xl font-bold text-purple-300 tracking-wide\">DEVICE-NEXUS PROBE</h3>\n                    <div className=\"text-xs text-purple-400/70 font-mono\">MODULE_002 • DEVICE_ANALYTICS</div>\n                  </div>\n                </div>\n                \n                {/* Description */}\n                <p className=\"text-slate-300 text-sm mb-4 leading-relaxed\">\n                  Multi-dimensional device ecosystem analysis. Identifies user behavior patterns across all connected platforms with AI precision.\n                </p>\n                \n                {/* Tech specs panel */}\n                <div className=\"bg-slate-900/60 rounded-xl p-4 mb-6 border border-purple-500/20\">\n                  <div className=\"text-xs text-purple-400 font-mono mb-2\">NEURAL PARAMETERS:</div>\n                  <div className=\"text-xs text-slate-300 font-mono space-y-1\">\n                    <div className=\"flex items-center space-x-2\">\n                      <span className=\"text-cyan-400\">fields:</span>\n                      <span className=\"text-yellow-300\">ad_id, ad_name, campaign_*, impressions, clicks, spend, actions</span>\n                    </div>\n                    <div className=\"flex items-center space-x-2\">\n                      <span className=\"text-cyan-400\">breakdowns:</span>\n                      <span className=\"text-purple-300\">impression_device</span>\n                    </div>\n                    <div className=\"flex items-center space-x-2\">\n                      <span className=\"text-cyan-400\">actions:</span>\n                      <span className=\"text-pink-300\">action_device [optional_split]</span>\n                    </div>\n                    <div className=\"flex items-center space-x-2\">\n                      <span className=\"text-cyan-400\">output:</span>\n                      <span className=\"text-pink-300\">ad-device matrix pairs</span>\n                    </div>\n                  </div>\n                </div>\n                \n                {/* Execute button */}\n                <button\n                  type=\"button\"\n                  onClick={() => handlePredefinedRequest('device')}\n                  disabled={isLoading || !startDateInput || !endDateInput}\n                  className=\"w-full h-14 bg-gradient-to-r from-purple-500 to-pink-500 text-white font-bold rounded-xl \n                           hover:from-purple-400 hover:to-pink-400 disabled:from-gray-600 disabled:to-gray-700 \n                           transition-all duration-300 transform hover:scale-[1.02] active:scale-[0.98] \n                           shadow-lg shadow-purple-500/25 hover:shadow-purple-500/40 \n                           disabled:opacity-50 disabled:cursor-not-allowed\n                           relative overflow-hidden group/btn\"\n                >\n                  <div className=\"absolute inset-0 bg-gradient-to-r from-white/0 via-white/20 to-white/0 transform -skew-x-12 -translate-x-full group-hover/btn:translate-x-full transition-transform duration-700\"></div>\n                  <span className=\"relative flex items-center justify-center space-x-2\">\n                    <span>{isLoading ? '⚡ PROCESSING...' : '🔬 EXECUTE DEVICE-SCAN'}</span>\n                  </span>\n                                 </button>\n               </div>\n             </div>\n\n             {/* Region Template - Enhanced */}\n             <div className=\"group relative\">\n               {/* Glow effect */}\n               <div className=\"absolute -inset-1 bg-gradient-to-r from-orange-500 to-red-500 rounded-2xl blur opacity-20 group-hover:opacity-40 transition duration-300\"></div>\n               \n               <div className=\"relative bg-gradient-to-br from-slate-800/80 to-slate-900/80 backdrop-blur-xl border border-orange-500/30 rounded-2xl p-6 hover:border-orange-400/60 transition-all duration-300\">\n                 {/* Header with icon */}\n                 <div className=\"flex items-center space-x-3 mb-4\">\n                   <div className=\"w-10 h-10 bg-gradient-to-br from-orange-400 to-red-500 rounded-xl flex items-center justify-center shadow-lg shadow-orange-500/20\">\n                     <span className=\"text-white font-bold text-lg\">🗺️</span>\n                   </div>\n                   <div>\n                     <h3 className=\"text-xl font-bold text-orange-300 tracking-wide\">REGIONAL-ZONE MAPPER</h3>\n                     <div className=\"text-xs text-orange-400/70 font-mono\">MODULE_003 • REGION_ANALYTICS</div>\n                   </div>\n                 </div>\n                 \n                 {/* Description */}\n                 <p className=\"text-slate-300 text-sm mb-4 leading-relaxed\">\n                   Continental-scale performance intelligence. Aggregates advertising metrics across major world regions with territorial AI clustering.\n                 </p>\n                 \n                 {/* Tech specs panel */}\n                 <div className=\"bg-slate-900/60 rounded-xl p-4 mb-6 border border-orange-500/20\">\n                   <div className=\"text-xs text-orange-400 font-mono mb-2\">NEURAL PARAMETERS:</div>\n                   <div className=\"text-xs text-slate-300 font-mono space-y-1\">\n                     <div className=\"flex items-center space-x-2\">\n                       <span className=\"text-cyan-400\">fields:</span>\n                       <span className=\"text-yellow-300\">ad_id, ad_name, campaign_*, impressions, clicks, spend, actions</span>\n                     </div>\n                     <div className=\"flex items-center space-x-2\">\n                       <span className=\"text-cyan-400\">breakdowns:</span>\n                       <span className=\"text-orange-300\">region</span>\n                     </div>\n                     <div className=\"flex items-center space-x-2\">\n                       <span className=\"text-cyan-400\">output:</span>\n                       <span className=\"text-pink-300\">ad-region matrix pairs</span>\n                     </div>\n                   </div>\n                 </div>\n                 \n                 {/* Execute button */}\n                 <button\n                   type=\"button\"\n                   onClick={() => handlePredefinedRequest('region')}\n                   disabled={isLoading || !startDateInput || !endDateInput}\n                   className=\"w-full h-14 bg-gradient-to-r from-orange-500 to-red-500 text-white font-bold rounded-xl \n                            hover:from-orange-400 hover:to-red-400 disabled:from-gray-600 disabled:to-gray-700 \n                            transition-all duration-300 transform hover:scale-[1.02] active:scale-[0.98] \n                            shadow-lg shadow-orange-500/25 hover:shadow-orange-500/40 \n                            disabled:opacity-50 disabled:cursor-not-allowed\n                            relative overflow-hidden group/btn\"\n                 >\n                   <div className=\"absolute inset-0 bg-gradient-to-r from-white/0 via-white/20 to-white/0 transform -skew-x-12 -translate-x-full group-hover/btn:translate-x-full transition-transform duration-700\"></div>\n                   <span className=\"relative flex items-center justify-center space-x-2\">\n                     <span>{isLoading ? '⚡ PROCESSING...' : '🌐 EXECUTE REGION-SCAN'}</span>\n                   </span>\n                 </button>\n               </div>\n             </div>\n\n             {/* Country + Device Hybrid Template */}\n             <div className=\"group relative\">\n               {/* Glow effect */}\n               <div className=\"absolute -inset-1 bg-gradient-to-r from-yellow-500 to-amber-500 rounded-2xl blur opacity-20 group-hover:opacity-40 transition duration-300\"></div>\n               \n               <div className=\"relative bg-gradient-to-br from-slate-800/80 to-slate-900/80 backdrop-blur-xl border border-yellow-500/30 rounded-2xl p-6 hover:border-yellow-400/60 transition-all duration-300\">\n                 {/* Header with icon */}\n                 <div className=\"flex items-center space-x-3 mb-4\">\n                   <div className=\"w-10 h-10 bg-gradient-to-br from-yellow-400 to-amber-500 rounded-xl flex items-center justify-center shadow-lg shadow-yellow-500/20\">\n                     <span className=\"text-white font-bold text-lg\">🌍📱</span>\n                   </div>\n                   <div>\n                     <h3 className=\"text-lg font-bold text-yellow-300 tracking-wide\">HYBRID GEO-DEVICE</h3>\n                     <div className=\"text-xs text-yellow-400/70 font-mono\">MODULE_004 • CROSS_DIMENSIONAL</div>\n                   </div>\n                 </div>\n                 \n                 {/* Description */}\n                 <p className=\"text-slate-300 text-xs mb-3 leading-relaxed\">\n                   TESTED RECIPE: Attempts to get country rows with device-attributed actions. Meta API has confirmed this combination is not supported.\n                 </p>\n                 \n                 {/* Tech specs panel */}\n                 <div className=\"bg-slate-900/60 rounded-xl p-3 mb-4 border border-red-500/20\">\n                   <div className=\"text-xs text-red-400 font-mono mb-2\">FAILED PARAMS:</div>\n                   <div className=\"text-xs text-slate-300 font-mono space-y-1\">\n                     <div className=\"flex items-center space-x-2\">\n                       <span className=\"text-cyan-400\">fields:</span>\n                       <span className=\"text-yellow-300\">campaign_*, impressions, actions</span>\n                     </div>\n                     <div className=\"flex items-center space-x-2\">\n                       <span className=\"text-cyan-400\">breakdowns:</span>\n                       <span className=\"text-yellow-300\">country</span>\n                     </div>\n                     <div className=\"flex items-center space-x-2\">\n                       <span className=\"text-cyan-400\">action_breakdowns:</span>\n                       <span className=\"text-pink-300\">action_device</span>\n                     </div>\n                     <div className=\"flex items-center space-x-2\">\n                       <span className=\"text-red-400\">error:</span>\n                       <span className=\"text-red-300\">Invalid combination</span>\n                     </div>\n                   </div>\n                 </div>\n                 \n                 {/* Error */}\n                 <div className=\"bg-red-900/40 border border-red-500/30 rounded-lg p-2 mb-4\">\n                   <div className=\"text-xs text-red-200\">\n                     ❌ <strong>Meta API Error:</strong> \"Current combination of data breakdown columns (action_device, country) is invalid\"\n                   </div>\n                 </div>\n                 \n                 {/* Execute button */}\n                 <button\n                   type=\"button\"\n                   onClick={() => handlePredefinedRequest('country_device')}\n                   disabled={isLoading || !startDateInput || !endDateInput}\n                   className=\"w-full h-12 bg-gradient-to-r from-red-500 to-red-600 text-white font-bold rounded-xl \n                            hover:from-red-400 hover:to-red-500 disabled:from-gray-600 disabled:to-gray-700 \n                            transition-all duration-300 transform hover:scale-[1.02] active:scale-[0.98] \n                            shadow-lg shadow-red-500/25 hover:shadow-red-500/40 \n                            disabled:opacity-50 disabled:cursor-not-allowed\n                            relative overflow-hidden group/btn text-sm\"\n                 >\n                   <div className=\"absolute inset-0 bg-gradient-to-r from-white/0 via-white/20 to-white/0 transform -skew-x-12 -translate-x-full group-hover/btn:translate-x-full transition-transform duration-700\"></div>\n                   <span className=\"relative flex items-center justify-center space-x-2\">\n                     <span>{isLoading ? '⚡ FAILING...' : '❌ DEMO ERROR'}</span>\n                   </span>\n                 </button>\n               </div>\n             </div>\n           </div>\n          \n          {/* Status Indicator */}\n          {!startDateInput || !endDateInput ? (\n            <div className=\"mt-8 relative\">\n              <div className=\"absolute -inset-1 bg-gradient-to-r from-orange-500 to-red-500 rounded-2xl blur opacity-20\"></div>\n              <div className=\"relative bg-slate-900/80 backdrop-blur-xl border border-orange-500/40 rounded-2xl p-4\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-8 h-8 bg-gradient-to-br from-orange-400 to-red-500 rounded-lg flex items-center justify-center\">\n                    <span className=\"text-white font-bold\">⚠️</span>\n                  </div>\n                  <div>\n                    <div className=\"text-orange-300 font-bold\">TEMPORAL PARAMETERS REQUIRED</div>\n                    <div className=\"text-orange-200 text-sm\">Initialize start and end dates in the chronometer above to activate quantum templates</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div className=\"mt-8 text-center\">\n              <div className=\"inline-flex items-center space-x-2 text-cyan-300 text-sm\">\n                <div className=\"w-2 h-2 bg-cyan-400 rounded-full animate-pulse\"></div>\n                <span className=\"font-mono\">QUANTUM TEMPLATES • READY FOR EXECUTION</span>\n                <div className=\"w-2 h-2 bg-cyan-400 rounded-full animate-pulse\"></div>\n              </div>\n            </div>\n          )}\n          \n          {/* Technical Explanation */}\n          <div className=\"mt-8 bg-slate-900/60 backdrop-blur-xl border border-blue-500/20 rounded-2xl p-6\">\n            <h3 className=\"text-lg font-bold text-blue-300 mb-4 flex items-center\">\n              <span className=\"mr-2\">🧠</span>\n              DIMENSIONAL ANALYSIS LIMITATIONS\n            </h3>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 text-sm text-slate-300\">\n              <div>\n                <h4 className=\"font-semibold text-cyan-300 mb-2\">✅ Single Dimension (Supported)</h4>\n                <ul className=\"space-y-1 text-xs\">\n                  <li>• <span className=\"text-emerald-300\">Country only</span> - Shows performance by country</li>\n                  <li>• <span className=\"text-purple-300\">Device only</span> - Shows performance by device + placement</li>\n                  <li>• <span className=\"text-orange-300\">Region only</span> - Shows performance by region/state</li>\n                </ul>\n              </div>\n              \n              <div>\n                <h4 className=\"font-semibold text-red-300 mb-2\">❌ Hybrid Experiment Failed</h4>\n                <div className=\"text-xs\">\n                  <p className=\"mb-2\">The <span className=\"text-red-300\">HYBRID GEO-DEVICE</span> tested Meta's <code>action_breakdowns</code>:</p>\n                  <ul className=\"space-y-1\">\n                    <li>• <span className=\"text-cyan-300\">Goal:</span> Country rows + device action splits</li>\n                    <li>• <span className=\"text-red-300\">Error:</span> \"Invalid combination of data breakdown columns\"</li>\n                    <li>• <span className=\"text-red-300\">Result:</span> Meta API rejects this combination</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"mt-6 p-4 bg-red-900/30 border border-red-500/30 rounded-lg\">\n              <h4 className=\"font-semibold text-red-300 mb-2\">⚠️ Attribution Problem</h4>\n              <p className=\"text-xs text-red-200 leading-relaxed\">\n                Separate API calls cannot be combined for full attribution. Example: You cannot determine \n                \"iOS users in USA vs Android users in USA\" by making separate country and device calls, \n                because there's no way to cross-reference the user data between calls.\n              </p>\n            </div>\n            \n            <div className=\"mt-4 p-4 bg-blue-900/30 border border-blue-500/30 rounded-lg\">\n              <h4 className=\"font-semibold text-blue-300 mb-2\">💡 Confirmed Solution</h4>\n              <p className=\"text-xs text-blue-200 leading-relaxed\">\n                The <span className=\"text-red-300\">HYBRID GEO-DEVICE</span> test confirms Meta API doesn't support \n                cross-dimensional attribution. For geo-device insights, you must make separate API calls \n                (country-only and device-only) and analyze the data independently. Full cross-attribution is not possible.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Results Section */}\n      {results && (\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\n          <h2 className=\"text-xl font-semibold mb-4\">Results</h2>\n          \n          <div className=\"mb-4\">\n            <div className=\"grid grid-cols-2 gap-4 mb-4\">\n              <div className=\"bg-gray-100 dark:bg-gray-700 p-3 rounded\">\n                <span className=\"font-medium\">Total Records:</span> {results.meta?.total_records || 0}\n              </div>\n              <div className=\"bg-gray-100 dark:bg-gray-700 p-3 rounded\">\n                <span className=\"font-medium\">Pages Fetched:</span> {results.meta?.pages_fetched || 0}\n              </div>\n              <div className=\"bg-gray-100 dark:bg-gray-700 p-3 rounded\">\n                <span className=\"font-medium\">Date Range:</span> {results.meta?.start_date} to {results.meta?.end_date}\n              </div>\n              <div className=\"bg-gray-100 dark:bg-gray-700 p-3 rounded\">\n                <span className=\"font-medium\">Time Increment:</span> {results.meta?.time_increment || 1} day(s)\n              </div>\n            </div>\n            \n            <div className=\"bg-gray-100 dark:bg-gray-700 p-3 rounded mb-4\">\n              <span className=\"font-medium\">Fields:</span> {results.meta?.fields}\n            </div>\n            \n            {results.meta?.breakdowns && (\n              <div className=\"bg-gray-100 dark:bg-gray-700 p-3 rounded mb-4\">\n                <span className=\"font-medium\">Breakdowns:</span> {results.meta?.breakdowns}\n              </div>\n            )}\n          </div>\n          \n          {results.data && results.data.data && results.data.data.length > 0 ? (\n            <div>\n              <div className=\"flex justify-between items-center mb-4\">\n                <h3 className=\"text-lg font-medium\">Data Sample ({results.data.data.length} records)</h3>\n                <div className=\"flex items-center space-x-4\">\n                  <label className=\"flex items-center\">\n                    <input\n                      type=\"checkbox\"\n                      checked={showMappedData}\n                      onChange={(e) => setShowMappedData(e.target.checked)}\n                      className=\"mr-2\"\n                    />\n                    Show Business Concepts\n                  </label>\n                </div>\n              </div>\n\n              {/* Business Concept Summary */}\n              {showMappedData && Object.keys(actionMappings).length > 0 && results.data.business_summary && (\n                <div className=\"mb-6\">\n                  <h4 className=\"text-md font-medium mb-3\">Business Concepts Summary</h4>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-4\">\n                    {Object.entries(results.data.business_summary).map(([conceptName, summary]) => (\n                      <div key={conceptName} className=\"bg-blue-50 dark:bg-blue-900 p-4 rounded-lg\">\n                        <h5 className=\"font-medium text-blue-800 dark:text-blue-200 capitalize\">{conceptName}</h5>\n                        <div className=\"text-sm text-blue-600 dark:text-blue-300 mt-2 space-y-1\">\n                          <div>Count: {summary.total_count.toFixed(0)}</div>\n                          <div>Value: ${summary.total_value.toFixed(2)}</div>\n                          <div>Conversions: {summary.total_conversions.toFixed(0)}</div>\n                          <div>Conv. Value: ${summary.total_conversion_value.toFixed(2)}</div>\n                          <div className=\"text-xs\">Records: {summary.records_with_data}/{results.data.data.length}</div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                  {Object.keys(actionMappings).length === 0 && (\n                    <div className=\"text-sm text-gray-500 italic\">\n                      No action mappings configured. Go to the Action Mapping tab to set up business concepts.\n                    </div>\n                  )}\n                </div>\n              )}\n\n              {/* Raw Data Display */}\n              <div className=\"relative\">\n                <div className=\"flex justify-between items-center mb-2\">\n                  <h4 className=\"text-md font-medium\">Raw JSON Data</h4>\n                  <button\n                    onClick={(e) => {\n                      const jsonData = JSON.stringify(formatNestedValues(results.data.data), null, 2);\n                      navigator.clipboard.writeText(jsonData).then(() => {\n                        // Show a temporary success message\n                        const button = e.target;\n                        const originalText = button.textContent;\n                        button.textContent = '✅ Copied!';\n                        button.classList.add('bg-green-500', 'text-white');\n                        setTimeout(() => {\n                          button.textContent = originalText;\n                          button.classList.remove('bg-green-500', 'text-white');\n                        }, 2000);\n                      }).catch(err => {\n                        console.error('Failed to copy:', err);\n                        alert('Failed to copy to clipboard');\n                      });\n                    }}\n                    className=\"px-3 py-1 bg-blue-500 hover:bg-blue-600 text-white text-sm rounded \n                             transition-colors duration-200 flex items-center space-x-1\"\n                  >\n                    <span>📋</span>\n                    <span>Copy All JSON</span>\n                  </button>\n                </div>\n                <div className=\"bg-gray-100 dark:bg-gray-900 p-4 rounded overflow-auto max-h-96\">\n                  <pre className=\"text-xs\">{JSON.stringify(formatNestedValues(results.data.data), null, 2)}</pre>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <p className=\"text-gray-500\">No data returned from API</p>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LiveApiTester; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}