{"ast":null,"code":"var _jsxFileName = \"/Users/joshuakaufman/untitled folder 3/orchestrator/dashboard/client/src/cohort-pipeline/components/PipelineStageIndicator.js\";\nimport React from 'react';\nimport { CheckCircle, AlertCircle, Clock, Users, Target, TrendingUp, ArrowRight } from 'lucide-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PipelineStageIndicator = ({\n  data,\n  loading = false,\n  error = null\n}) => {\n  var _data$conversion_anal;\n  // Extract stage results from pipeline data\n  const stageResults = (data === null || data === void 0 ? void 0 : data.stage_results) || {};\n  const summary = (data === null || data === void 0 ? void 0 : data.summary) || {};\n  const pipelineVersion = data === null || data === void 0 ? void 0 : data.pipeline_version;\n\n  // Define stages configuration\n  const stages = [{\n    id: 'stage1',\n    name: 'User Properties Input',\n    description: 'Collect users and their properties from the database',\n    icon: Users,\n    key_metrics: ['cohort_size', 'events_count']\n  }, {\n    id: 'stage2',\n    name: 'Segment Matching',\n    description: 'Match users to conversion probability segments',\n    icon: Target,\n    key_metrics: ['successful_matches', 'rollups_applied']\n  }, {\n    id: 'stage3',\n    name: 'Revenue Timeline',\n    description: 'Generate revenue timelines with conversion estimates',\n    icon: TrendingUp,\n    key_metrics: ['users_with_timelines', 'total_estimated_revenue']\n  }];\n\n  // Determine stage status\n  const getStageStatus = stageId => {\n    const result = stageResults[stageId];\n    if (!result) return 'pending';\n    if (result.error) return 'error';\n    if (loading && stageId === 'stage3') return 'running'; // Assume last stage is running if loading\n    return 'completed';\n  };\n\n  // Get stage metrics display\n  const getStageMetrics = (stageId, keyMetrics) => {\n    const result = stageResults[stageId];\n    if (!result) return [];\n    const metrics = [];\n    if (stageId === 'stage1') {\n      metrics.push({\n        label: 'Users Found',\n        value: result.cohort_size || 0,\n        format: 'number'\n      });\n      metrics.push({\n        label: 'Events Collected',\n        value: result.events_count || 0,\n        format: 'number'\n      });\n    } else if (stageId === 'stage2') {\n      const stats = result.matching_stats || {};\n      metrics.push({\n        label: 'Successful Matches',\n        value: stats.successful_matches || 0,\n        format: 'number'\n      });\n      metrics.push({\n        label: 'Success Rate',\n        value: stats.success_rate || 0,\n        format: 'percentage'\n      });\n      if (stats.rollups_applied) {\n        metrics.push({\n          label: 'Rollups Applied',\n          value: stats.rollups_applied,\n          format: 'number'\n        });\n      }\n    } else if (stageId === 'stage3') {\n      var _result$aggregate_sta, _result$aggregate_sta2;\n      metrics.push({\n        label: 'Timeline Users',\n        value: result.users_with_timelines || 0,\n        format: 'number'\n      });\n      metrics.push({\n        label: 'Estimated Revenue',\n        value: ((_result$aggregate_sta = result.aggregate_stats) === null || _result$aggregate_sta === void 0 ? void 0 : _result$aggregate_sta.total_estimated_revenue) || 0,\n        format: 'currency'\n      });\n      if (((_result$aggregate_sta2 = result.aggregate_stats) === null || _result$aggregate_sta2 === void 0 ? void 0 : _result$aggregate_sta2.total_actual_revenue) > 0) {\n        metrics.push({\n          label: 'Actual Revenue',\n          value: result.aggregate_stats.total_actual_revenue,\n          format: 'currency'\n        });\n      }\n    }\n    return metrics;\n  };\n\n  // Format metric values\n  const formatMetricValue = (value, format) => {\n    switch (format) {\n      case 'number':\n        return value.toLocaleString();\n      case 'percentage':\n        return `${(value * 100).toFixed(1)}%`;\n      case 'currency':\n        return `$${value.toFixed(2)}`;\n      default:\n        return value;\n    }\n  };\n\n  // Get status styling\n  const getStatusStyling = status => {\n    switch (status) {\n      case 'completed':\n        return {\n          icon: CheckCircle,\n          iconColor: 'text-green-500',\n          bgColor: 'bg-green-50 dark:bg-green-900/30 border-green-200 dark:border-green-700',\n          textColor: 'text-green-800 dark:text-green-200'\n        };\n      case 'running':\n        return {\n          icon: Clock,\n          iconColor: 'text-blue-500 animate-pulse',\n          bgColor: 'bg-blue-50 dark:bg-blue-900/30 border-blue-200 dark:border-blue-700',\n          textColor: 'text-blue-800 dark:text-blue-200'\n        };\n      case 'error':\n        return {\n          icon: AlertCircle,\n          iconColor: 'text-red-500',\n          bgColor: 'bg-red-50 dark:bg-red-900/30 border-red-200 dark:border-red-700',\n          textColor: 'text-red-800 dark:text-red-200'\n        };\n      default:\n        // pending\n        return {\n          icon: Clock,\n          iconColor: 'text-gray-400',\n          bgColor: 'bg-gray-50 dark:bg-gray-800 border-gray-200 dark:border-gray-700',\n          textColor: 'text-gray-600 dark:text-gray-400'\n        };\n    }\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n          className: \"h-5 w-5 text-red-500 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold text-red-800 dark:text-red-200\",\n          children: \"Pipeline Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-600 dark:text-red-300 mt-2\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-semibold text-gray-900 dark:text-white\",\n            children: [\"Cohort Analysis Pipeline\", pipelineVersion && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ml-2 text-sm text-gray-600 dark:text-gray-400\",\n              children: [\"v\", pipelineVersion]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600 dark:text-gray-400 mt-1\",\n            children: \"3-Stage Conversion Probability Based Analysis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), summary.pipeline_success !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: summary.pipeline_success ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n              className: \"h-5 w-5 text-green-500 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-green-600 dark:text-green-400 font-medium\",\n              children: \"Complete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n              className: \"h-5 w-5 text-red-500 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-600 dark:text-red-400 font-medium\",\n              children: \"Failed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), summary && Object.keys(summary).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 md:grid-cols-4 gap-4 p-4 bg-gray-50 dark:bg-gray-800 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-2xl font-bold text-gray-900 dark:text-white\",\n          children: summary.total_users_analyzed || 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-600 dark:text-gray-400\",\n          children: \"Users Analyzed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-2xl font-bold text-gray-900 dark:text-white\",\n          children: summary.users_successfully_matched || 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-600 dark:text-gray-400\",\n          children: \"Successfully Matched\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-2xl font-bold text-gray-900 dark:text-white\",\n          children: summary.users_with_timelines || 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-600 dark:text-gray-400\",\n          children: \"Timeline Generated\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-2xl font-bold text-gray-900 dark:text-white\",\n          children: [\"$\", (summary.total_estimated_revenue || 0).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-600 dark:text-gray-400\",\n          children: \"Est. Revenue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col lg:flex-row lg:items-stretch gap-4\",\n      children: stages.map((stage, index) => {\n        var _data$execution_metad;\n        const status = getStageStatus(stage.id);\n        const styling = getStatusStyling(status);\n        const metrics = getStageMetrics(stage.id, stage.key_metrics);\n        const stageResult = stageResults[stage.id];\n        const StageIcon = stage.icon;\n        const StatusIcon = styling.icon;\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `border rounded-lg p-4 flex-1 ${styling.bgColor}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center justify-center w-8 h-8 rounded-full bg-white dark:bg-gray-700 mr-3\",\n                  children: /*#__PURE__*/_jsxDEV(StageIcon, {\n                    className: \"h-4 w-4 text-gray-600 dark:text-gray-300\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: `font-semibold ${styling.textColor}`,\n                    children: stage.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-xs text-gray-600 dark:text-gray-400\",\n                    children: stage.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(StatusIcon, {\n                className: `h-5 w-5 ${styling.iconColor}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [status === 'completed' && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm text-green-600 dark:text-green-400\",\n                children: \"\\u2713 Stage completed successfully\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 41\n              }, this), status === 'running' && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm text-blue-600 dark:text-blue-400\",\n                children: \"\\u23F3 Stage in progress...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 41\n              }, this), status === 'error' && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm text-red-600 dark:text-red-400\",\n                children: [\"\\u274C \", (stageResult === null || stageResult === void 0 ? void 0 : stageResult.error) || 'Stage failed']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 41\n              }, this), status === 'pending' && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm text-gray-500 dark:text-gray-400\",\n                children: \"\\u23F8\\uFE0F Waiting to start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 33\n            }, this), metrics.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-2\",\n              children: metrics.map((metric, metricIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between text-sm\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-600 dark:text-gray-400\",\n                  children: [metric.label, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `font-medium ${styling.textColor}`,\n                  children: formatMetricValue(metric.value, metric.format)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 49\n                }, this)]\n              }, metricIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 37\n            }, this), stageResult && (data === null || data === void 0 ? void 0 : (_data$execution_metad = data.execution_metadata) === null || _data$execution_metad === void 0 ? void 0 : _data$execution_metad.execution_time_seconds) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-3 pt-3 border-t border-gray-200 dark:border-gray-600\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between text-xs text-gray-500 dark:text-gray-400\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Execution time:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [data.execution_metadata.execution_time_seconds.toFixed(2), \"s\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 29\n          }, this), index < stages.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-center lg:px-2\",\n            children: /*#__PURE__*/_jsxDEV(ArrowRight, {\n              className: \"h-5 w-5 text-gray-400 transform lg:rotate-0 rotate-90\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 33\n          }, this)]\n        }, stage.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }, this), (data === null || data === void 0 ? void 0 : data.conversion_analysis_metadata) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-blue-50 dark:bg-blue-900/30 border border-blue-200 dark:border-blue-700 rounded-lg p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-sm font-semibold text-blue-800 dark:text-blue-200 mb-2\",\n        children: \"Conversion Analysis Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-blue-600 dark:text-blue-400\",\n            children: \"Analysis ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-medium text-blue-800 dark:text-blue-200\",\n            children: [(_data$conversion_anal = data.conversion_analysis_metadata.analysis_id) === null || _data$conversion_anal === void 0 ? void 0 : _data$conversion_anal.slice(0, 16), \"...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-blue-600 dark:text-blue-400\",\n            children: \"Total Segments:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-medium text-blue-800 dark:text-blue-200\",\n            children: data.conversion_analysis_metadata.total_segments || 'Unknown'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-blue-600 dark:text-blue-400\",\n            children: \"Created:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-medium text-blue-800 dark:text-blue-200\",\n            children: data.conversion_analysis_metadata.created_at ? new Date(data.conversion_analysis_metadata.created_at).toLocaleDateString() : 'Unknown'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 9\n  }, this);\n};\n_c = PipelineStageIndicator;\nexport default PipelineStageIndicator;\nvar _c;\n$RefreshReg$(_c, \"PipelineStageIndicator\");","map":{"version":3,"names":["React","CheckCircle","AlertCircle","Clock","Users","Target","TrendingUp","ArrowRight","jsxDEV","_jsxDEV","Fragment","_Fragment","PipelineStageIndicator","data","loading","error","_data$conversion_anal","stageResults","stage_results","summary","pipelineVersion","pipeline_version","stages","id","name","description","icon","key_metrics","getStageStatus","stageId","result","getStageMetrics","keyMetrics","metrics","push","label","value","cohort_size","format","events_count","stats","matching_stats","successful_matches","success_rate","rollups_applied","_result$aggregate_sta","_result$aggregate_sta2","users_with_timelines","aggregate_stats","total_estimated_revenue","total_actual_revenue","formatMetricValue","toLocaleString","toFixed","getStatusStyling","status","iconColor","bgColor","textColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","pipeline_success","undefined","Object","keys","length","total_users_analyzed","users_successfully_matched","map","stage","index","_data$execution_metad","styling","stageResult","StageIcon","StatusIcon","metric","metricIndex","execution_metadata","execution_time_seconds","conversion_analysis_metadata","analysis_id","slice","total_segments","created_at","Date","toLocaleDateString","_c","$RefreshReg$"],"sources":["/Users/joshuakaufman/untitled folder 3/orchestrator/dashboard/client/src/cohort-pipeline/components/PipelineStageIndicator.js"],"sourcesContent":["import React from 'react';\nimport { CheckCircle, AlertCircle, Clock, Users, Target, TrendingUp, ArrowRight } from 'lucide-react';\n\nconst PipelineStageIndicator = ({ data, loading = false, error = null }) => {\n    // Extract stage results from pipeline data\n    const stageResults = data?.stage_results || {};\n    const summary = data?.summary || {};\n    const pipelineVersion = data?.pipeline_version;\n    \n    // Define stages configuration\n    const stages = [\n        {\n            id: 'stage1',\n            name: 'User Properties Input',\n            description: 'Collect users and their properties from the database',\n            icon: Users,\n            key_metrics: ['cohort_size', 'events_count']\n        },\n        {\n            id: 'stage2', \n            name: 'Segment Matching',\n            description: 'Match users to conversion probability segments',\n            icon: Target,\n            key_metrics: ['successful_matches', 'rollups_applied']\n        },\n        {\n            id: 'stage3',\n            name: 'Revenue Timeline',\n            description: 'Generate revenue timelines with conversion estimates',\n            icon: TrendingUp,\n            key_metrics: ['users_with_timelines', 'total_estimated_revenue']\n        }\n    ];\n\n    // Determine stage status\n    const getStageStatus = (stageId) => {\n        const result = stageResults[stageId];\n        \n        if (!result) return 'pending';\n        if (result.error) return 'error';\n        if (loading && stageId === 'stage3') return 'running'; // Assume last stage is running if loading\n        return 'completed';\n    };\n\n    // Get stage metrics display\n    const getStageMetrics = (stageId, keyMetrics) => {\n        const result = stageResults[stageId];\n        if (!result) return [];\n\n        const metrics = [];\n        \n        if (stageId === 'stage1') {\n            metrics.push({\n                label: 'Users Found',\n                value: result.cohort_size || 0,\n                format: 'number'\n            });\n            metrics.push({\n                label: 'Events Collected',\n                value: result.events_count || 0,\n                format: 'number'\n            });\n        } else if (stageId === 'stage2') {\n            const stats = result.matching_stats || {};\n            metrics.push({\n                label: 'Successful Matches',\n                value: stats.successful_matches || 0,\n                format: 'number'\n            });\n            metrics.push({\n                label: 'Success Rate',\n                value: stats.success_rate || 0,\n                format: 'percentage'\n            });\n            if (stats.rollups_applied) {\n                metrics.push({\n                    label: 'Rollups Applied',\n                    value: stats.rollups_applied,\n                    format: 'number'\n                });\n            }\n        } else if (stageId === 'stage3') {\n            metrics.push({\n                label: 'Timeline Users',\n                value: result.users_with_timelines || 0,\n                format: 'number'\n            });\n            metrics.push({\n                label: 'Estimated Revenue',\n                value: result.aggregate_stats?.total_estimated_revenue || 0,\n                format: 'currency'\n            });\n            if (result.aggregate_stats?.total_actual_revenue > 0) {\n                metrics.push({\n                    label: 'Actual Revenue',\n                    value: result.aggregate_stats.total_actual_revenue,\n                    format: 'currency'\n                });\n            }\n        }\n\n        return metrics;\n    };\n\n    // Format metric values\n    const formatMetricValue = (value, format) => {\n        switch (format) {\n            case 'number':\n                return value.toLocaleString();\n            case 'percentage':\n                return `${(value * 100).toFixed(1)}%`;\n            case 'currency':\n                return `$${value.toFixed(2)}`;\n            default:\n                return value;\n        }\n    };\n\n    // Get status styling\n    const getStatusStyling = (status) => {\n        switch (status) {\n            case 'completed':\n                return {\n                    icon: CheckCircle,\n                    iconColor: 'text-green-500',\n                    bgColor: 'bg-green-50 dark:bg-green-900/30 border-green-200 dark:border-green-700',\n                    textColor: 'text-green-800 dark:text-green-200'\n                };\n            case 'running':\n                return {\n                    icon: Clock,\n                    iconColor: 'text-blue-500 animate-pulse',\n                    bgColor: 'bg-blue-50 dark:bg-blue-900/30 border-blue-200 dark:border-blue-700',\n                    textColor: 'text-blue-800 dark:text-blue-200'\n                };\n            case 'error':\n                return {\n                    icon: AlertCircle,\n                    iconColor: 'text-red-500',\n                    bgColor: 'bg-red-50 dark:bg-red-900/30 border-red-200 dark:border-red-700',\n                    textColor: 'text-red-800 dark:text-red-200'\n                };\n            default: // pending\n                return {\n                    icon: Clock,\n                    iconColor: 'text-gray-400',\n                    bgColor: 'bg-gray-50 dark:bg-gray-800 border-gray-200 dark:border-gray-700',\n                    textColor: 'text-gray-600 dark:text-gray-400'\n                };\n        }\n    };\n\n    if (error) {\n        return (\n            <div className=\"bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg p-4\">\n                <div className=\"flex items-center\">\n                    <AlertCircle className=\"h-5 w-5 text-red-500 mr-2\" />\n                    <h3 className=\"text-lg font-semibold text-red-800 dark:text-red-200\">\n                        Pipeline Error\n                    </h3>\n                </div>\n                <p className=\"text-red-600 dark:text-red-300 mt-2\">{error}</p>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"space-y-4\">\n            {/* Pipeline Header */}\n            <div className=\"bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg p-4\">\n                <div className=\"flex items-center justify-between\">\n                    <div>\n                        <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                            Cohort Analysis Pipeline \n                            {pipelineVersion && (\n                                <span className=\"ml-2 text-sm text-gray-600 dark:text-gray-400\">\n                                    v{pipelineVersion}\n                                </span>\n                            )}\n                        </h2>\n                        <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\n                            3-Stage Conversion Probability Based Analysis\n                        </p>\n                    </div>\n                    \n                    {summary.pipeline_success !== undefined && (\n                        <div className=\"flex items-center\">\n                            {summary.pipeline_success ? (\n                                <>\n                                    <CheckCircle className=\"h-5 w-5 text-green-500 mr-2\" />\n                                    <span className=\"text-green-600 dark:text-green-400 font-medium\">Complete</span>\n                                </>\n                            ) : (\n                                <>\n                                    <AlertCircle className=\"h-5 w-5 text-red-500 mr-2\" />\n                                    <span className=\"text-red-600 dark:text-red-400 font-medium\">Failed</span>\n                                </>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n\n            {/* Summary Stats */}\n            {summary && Object.keys(summary).length > 0 && (\n                <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 p-4 bg-gray-50 dark:bg-gray-800 rounded-lg\">\n                    <div className=\"text-center\">\n                        <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                            {summary.total_users_analyzed || 0}\n                        </div>\n                        <div className=\"text-sm text-gray-600 dark:text-gray-400\">Users Analyzed</div>\n                    </div>\n                    <div className=\"text-center\">\n                        <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                            {summary.users_successfully_matched || 0}\n                        </div>\n                        <div className=\"text-sm text-gray-600 dark:text-gray-400\">Successfully Matched</div>\n                    </div>\n                    <div className=\"text-center\">\n                        <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                            {summary.users_with_timelines || 0}\n                        </div>\n                        <div className=\"text-sm text-gray-600 dark:text-gray-400\">Timeline Generated</div>\n                    </div>\n                    <div className=\"text-center\">\n                        <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                            ${(summary.total_estimated_revenue || 0).toFixed(2)}\n                        </div>\n                        <div className=\"text-sm text-gray-600 dark:text-gray-400\">Est. Revenue</div>\n                    </div>\n                </div>\n            )}\n\n            {/* Stage Progress */}\n            <div className=\"flex flex-col lg:flex-row lg:items-stretch gap-4\">\n                {stages.map((stage, index) => {\n                    const status = getStageStatus(stage.id);\n                    const styling = getStatusStyling(status);\n                    const metrics = getStageMetrics(stage.id, stage.key_metrics);\n                    const stageResult = stageResults[stage.id];\n                    const StageIcon = stage.icon;\n                    const StatusIcon = styling.icon;\n\n                    return (\n                        <React.Fragment key={stage.id}>\n                            <div className={`border rounded-lg p-4 flex-1 ${styling.bgColor}`}>\n                                {/* Stage Header */}\n                                <div className=\"flex items-center justify-between mb-3\">\n                                    <div className=\"flex items-center\">\n                                        <div className=\"flex items-center justify-center w-8 h-8 rounded-full bg-white dark:bg-gray-700 mr-3\">\n                                            <StageIcon className=\"h-4 w-4 text-gray-600 dark:text-gray-300\" />\n                                        </div>\n                                        <div>\n                                            <h3 className={`font-semibold ${styling.textColor}`}>\n                                                {stage.name}\n                                            </h3>\n                                            <p className=\"text-xs text-gray-600 dark:text-gray-400\">\n                                                {stage.description}\n                                            </p>\n                                        </div>\n                                    </div>\n                                    <StatusIcon className={`h-5 w-5 ${styling.iconColor}`} />\n                                </div>\n\n                                {/* Status Message */}\n                                <div className=\"mb-3\">\n                                    {status === 'completed' && (\n                                        <span className=\"text-sm text-green-600 dark:text-green-400\">\n                                            ✓ Stage completed successfully\n                                        </span>\n                                    )}\n                                    {status === 'running' && (\n                                        <span className=\"text-sm text-blue-600 dark:text-blue-400\">\n                                            ⏳ Stage in progress...\n                                        </span>\n                                    )}\n                                    {status === 'error' && (\n                                        <span className=\"text-sm text-red-600 dark:text-red-400\">\n                                            ❌ {stageResult?.error || 'Stage failed'}\n                                        </span>\n                                    )}\n                                    {status === 'pending' && (\n                                        <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n                                            ⏸️ Waiting to start\n                                        </span>\n                                    )}\n                                </div>\n\n                                {/* Metrics */}\n                                {metrics.length > 0 && (\n                                    <div className=\"space-y-2\">\n                                        {metrics.map((metric, metricIndex) => (\n                                            <div key={metricIndex} className=\"flex justify-between text-sm\">\n                                                <span className=\"text-gray-600 dark:text-gray-400\">\n                                                    {metric.label}:\n                                                </span>\n                                                <span className={`font-medium ${styling.textColor}`}>\n                                                    {formatMetricValue(metric.value, metric.format)}\n                                                </span>\n                                            </div>\n                                        ))}\n                                    </div>\n                                )}\n\n                                {/* Execution Time */}\n                                {stageResult && data?.execution_metadata?.execution_time_seconds && (\n                                    <div className=\"mt-3 pt-3 border-t border-gray-200 dark:border-gray-600\">\n                                        <div className=\"flex justify-between text-xs text-gray-500 dark:text-gray-400\">\n                                            <span>Execution time:</span>\n                                            <span>{(data.execution_metadata.execution_time_seconds).toFixed(2)}s</span>\n                                        </div>\n                                    </div>\n                                )}\n                            </div>\n\n                            {/* Arrow between stages */}\n                            {index < stages.length - 1 && (\n                                <div className=\"flex items-center justify-center lg:px-2\">\n                                    <ArrowRight className=\"h-5 w-5 text-gray-400 transform lg:rotate-0 rotate-90\" />\n                                </div>\n                            )}\n                        </React.Fragment>\n                    );\n                })}\n            </div>\n\n            {/* Analysis Metadata */}\n            {data?.conversion_analysis_metadata && (\n                <div className=\"bg-blue-50 dark:bg-blue-900/30 border border-blue-200 dark:border-blue-700 rounded-lg p-4\">\n                    <h4 className=\"text-sm font-semibold text-blue-800 dark:text-blue-200 mb-2\">\n                        Conversion Analysis Data\n                    </h4>\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\n                        <div>\n                            <span className=\"text-blue-600 dark:text-blue-400\">Analysis ID:</span>\n                            <div className=\"font-medium text-blue-800 dark:text-blue-200\">\n                                {data.conversion_analysis_metadata.analysis_id?.slice(0, 16)}...\n                            </div>\n                        </div>\n                        <div>\n                            <span className=\"text-blue-600 dark:text-blue-400\">Total Segments:</span>\n                            <div className=\"font-medium text-blue-800 dark:text-blue-200\">\n                                {data.conversion_analysis_metadata.total_segments || 'Unknown'}\n                            </div>\n                        </div>\n                        <div>\n                            <span className=\"text-blue-600 dark:text-blue-400\">Created:</span>\n                            <div className=\"font-medium text-blue-800 dark:text-blue-200\">\n                                {data.conversion_analysis_metadata.created_at ? \n                                    new Date(data.conversion_analysis_metadata.created_at).toLocaleDateString() : \n                                    'Unknown'\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default PipelineStageIndicator; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}