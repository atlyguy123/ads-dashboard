{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Database,CheckCircle,XCircle,Loader,Clock}from'lucide-react';import{analyticsPipelineApi}from'../../services/analyticsPipelineApi';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AnalyticsPipelineControls=()=>{const[pipelineStatus,setPipelineStatus]=useState(null);const[hasError,setHasError]=useState(false);// Fetch initial status and poll for updates\nuseEffect(()=>{const loadStatus=async()=>{try{const status=await analyticsPipelineApi.getAnalyticsPipelineStatus();setPipelineStatus(status);setHasError(false);}catch(error){console.error('Failed to load analytics pipeline status:',error);setHasError(true);}};loadStatus();// Poll every 30 seconds\nconst interval=setInterval(loadStatus,30000);return()=>clearInterval(interval);},[]);const getStatusDisplay=()=>{if(hasError){return{icon:/*#__PURE__*/_jsx(XCircle,{className:\"h-4 w-4 text-red-500\"}),text:'Connection Error',color:'text-red-500'};}if(!pipelineStatus){return{icon:/*#__PURE__*/_jsx(Loader,{className:\"h-4 w-4 text-gray-500 animate-spin\"}),text:'Loading...',color:'text-gray-500'};}const currentRun=pipelineStatus.current_run;if(currentRun!==null&&currentRun!==void 0&&currentRun.is_running){return{icon:/*#__PURE__*/_jsx(Loader,{className:\"h-4 w-4 text-blue-500 animate-spin\"}),text:'Processing Data',color:'text-blue-500'};}if(currentRun!==null&&currentRun!==void 0&&currentRun.completed_at){const completedTime=new Date(currentRun.completed_at);const now=new Date();const hoursAgo=Math.floor((now-completedTime)/(1000*60*60));return{icon:/*#__PURE__*/_jsx(CheckCircle,{className:\"h-4 w-4 text-green-500\"}),text:\"Updated \".concat(hoursAgo,\"h ago\"),color:'text-green-500'};}return{icon:/*#__PURE__*/_jsx(Database,{className:\"h-4 w-4 text-gray-500\"}),text:'Ready',color:'text-gray-500'};};const status=getStatusDisplay();return/*#__PURE__*/_jsx(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[status.icon,/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium text-gray-900 dark:text-gray-100\",children:\"Analytics Pipeline\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center space-x-2\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-sm \".concat(status.color),children:status.text})})]})});};export default AnalyticsPipelineControls;","map":{"version":3,"names":["React","useState","useEffect","Database","CheckCircle","XCircle","Loader","Clock","analyticsPipelineApi","jsx","_jsx","jsxs","_jsxs","AnalyticsPipelineControls","pipelineStatus","setPipelineStatus","hasError","setHasError","loadStatus","status","getAnalyticsPipelineStatus","error","console","interval","setInterval","clearInterval","getStatusDisplay","icon","className","text","color","currentRun","current_run","is_running","completed_at","completedTime","Date","now","hoursAgo","Math","floor","concat","children"],"sources":["/Users/joshuakaufman/untitled folder 3/orchestrator/dashboard/client/src/components/dashboard/AnalyticsPipelineControls.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  Database, \n  CheckCircle, \n  XCircle,\n  Loader,\n  Clock\n} from 'lucide-react';\nimport { analyticsPipelineApi } from '../../services/analyticsPipelineApi';\n\nconst AnalyticsPipelineControls = () => {\n  const [pipelineStatus, setPipelineStatus] = useState(null);\n  const [hasError, setHasError] = useState(false);\n\n  // Fetch initial status and poll for updates\n  useEffect(() => {\n    const loadStatus = async () => {\n      try {\n        const status = await analyticsPipelineApi.getAnalyticsPipelineStatus();\n        setPipelineStatus(status);\n        setHasError(false);\n      } catch (error) {\n        console.error('Failed to load analytics pipeline status:', error);\n        setHasError(true);\n      }\n    };\n\n    loadStatus();\n    \n    // Poll every 30 seconds\n    const interval = setInterval(loadStatus, 30000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const getStatusDisplay = () => {\n    if (hasError) {\n      return { \n        icon: <XCircle className=\"h-4 w-4 text-red-500\" />, \n        text: 'Connection Error', \n        color: 'text-red-500' \n      };\n    }\n    \n    if (!pipelineStatus) {\n      return { \n        icon: <Loader className=\"h-4 w-4 text-gray-500 animate-spin\" />, \n        text: 'Loading...', \n        color: 'text-gray-500' \n      };\n    }\n    \n    const currentRun = pipelineStatus.current_run;\n    if (currentRun?.is_running) {\n      return { \n        icon: <Loader className=\"h-4 w-4 text-blue-500 animate-spin\" />, \n        text: 'Processing Data', \n        color: 'text-blue-500' \n      };\n    }\n    \n    if (currentRun?.completed_at) {\n      const completedTime = new Date(currentRun.completed_at);\n      const now = new Date();\n      const hoursAgo = Math.floor((now - completedTime) / (1000 * 60 * 60));\n      \n      return { \n        icon: <CheckCircle className=\"h-4 w-4 text-green-500\" />, \n        text: `Updated ${hoursAgo}h ago`, \n        color: 'text-green-500' \n      };\n    }\n    \n    return { \n      icon: <Database className=\"h-4 w-4 text-gray-500\" />, \n      text: 'Ready', \n      color: 'text-gray-500' \n    };\n  };\n\n  const status = getStatusDisplay();\n\n  return (\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-4\">\n      <div className=\"flex items-center space-x-3\">\n        <div className=\"flex items-center space-x-2\">\n          {status.icon}\n          <span className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">\n            Analytics Pipeline\n          </span>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <span className={`text-sm ${status.color}`}>\n            {status.text}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AnalyticsPipelineControls; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OACEC,QAAQ,CACRC,WAAW,CACXC,OAAO,CACPC,MAAM,CACNC,KAAK,KACA,cAAc,CACrB,OAASC,oBAAoB,KAAQ,qCAAqC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE3E,KAAM,CAAAC,yBAAyB,CAAGA,CAAA,GAAM,CACtC,KAAM,CAACC,cAAc,CAAEC,iBAAiB,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CAC1D,KAAM,CAACe,QAAQ,CAAEC,WAAW,CAAC,CAAGhB,QAAQ,CAAC,KAAK,CAAC,CAE/C;AACAC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAgB,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACF,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAX,oBAAoB,CAACY,0BAA0B,CAAC,CAAC,CACtEL,iBAAiB,CAACI,MAAM,CAAC,CACzBF,WAAW,CAAC,KAAK,CAAC,CACpB,CAAE,MAAOI,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,2CAA2C,CAAEA,KAAK,CAAC,CACjEJ,WAAW,CAAC,IAAI,CAAC,CACnB,CACF,CAAC,CAEDC,UAAU,CAAC,CAAC,CAEZ;AACA,KAAM,CAAAK,QAAQ,CAAGC,WAAW,CAACN,UAAU,CAAE,KAAK,CAAC,CAC/C,MAAO,IAAMO,aAAa,CAACF,QAAQ,CAAC,CACtC,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAG,gBAAgB,CAAGA,CAAA,GAAM,CAC7B,GAAIV,QAAQ,CAAE,CACZ,MAAO,CACLW,IAAI,cAAEjB,IAAA,CAACL,OAAO,EAACuB,SAAS,CAAC,sBAAsB,CAAE,CAAC,CAClDC,IAAI,CAAE,kBAAkB,CACxBC,KAAK,CAAE,cACT,CAAC,CACH,CAEA,GAAI,CAAChB,cAAc,CAAE,CACnB,MAAO,CACLa,IAAI,cAAEjB,IAAA,CAACJ,MAAM,EAACsB,SAAS,CAAC,oCAAoC,CAAE,CAAC,CAC/DC,IAAI,CAAE,YAAY,CAClBC,KAAK,CAAE,eACT,CAAC,CACH,CAEA,KAAM,CAAAC,UAAU,CAAGjB,cAAc,CAACkB,WAAW,CAC7C,GAAID,UAAU,SAAVA,UAAU,WAAVA,UAAU,CAAEE,UAAU,CAAE,CAC1B,MAAO,CACLN,IAAI,cAAEjB,IAAA,CAACJ,MAAM,EAACsB,SAAS,CAAC,oCAAoC,CAAE,CAAC,CAC/DC,IAAI,CAAE,iBAAiB,CACvBC,KAAK,CAAE,eACT,CAAC,CACH,CAEA,GAAIC,UAAU,SAAVA,UAAU,WAAVA,UAAU,CAAEG,YAAY,CAAE,CAC5B,KAAM,CAAAC,aAAa,CAAG,GAAI,CAAAC,IAAI,CAACL,UAAU,CAACG,YAAY,CAAC,CACvD,KAAM,CAAAG,GAAG,CAAG,GAAI,CAAAD,IAAI,CAAC,CAAC,CACtB,KAAM,CAAAE,QAAQ,CAAGC,IAAI,CAACC,KAAK,CAAC,CAACH,GAAG,CAAGF,aAAa,GAAK,IAAI,CAAG,EAAE,CAAG,EAAE,CAAC,CAAC,CAErE,MAAO,CACLR,IAAI,cAAEjB,IAAA,CAACN,WAAW,EAACwB,SAAS,CAAC,wBAAwB,CAAE,CAAC,CACxDC,IAAI,YAAAY,MAAA,CAAaH,QAAQ,SAAO,CAChCR,KAAK,CAAE,gBACT,CAAC,CACH,CAEA,MAAO,CACLH,IAAI,cAAEjB,IAAA,CAACP,QAAQ,EAACyB,SAAS,CAAC,uBAAuB,CAAE,CAAC,CACpDC,IAAI,CAAE,OAAO,CACbC,KAAK,CAAE,eACT,CAAC,CACH,CAAC,CAED,KAAM,CAAAX,MAAM,CAAGO,gBAAgB,CAAC,CAAC,CAEjC,mBACEhB,IAAA,QAAKkB,SAAS,CAAC,gGAAgG,CAAAc,QAAA,cAC7G9B,KAAA,QAAKgB,SAAS,CAAC,6BAA6B,CAAAc,QAAA,eAC1C9B,KAAA,QAAKgB,SAAS,CAAC,6BAA6B,CAAAc,QAAA,EACzCvB,MAAM,CAACQ,IAAI,cACZjB,IAAA,SAAMkB,SAAS,CAAC,sDAAsD,CAAAc,QAAA,CAAC,oBAEvE,CAAM,CAAC,EACJ,CAAC,cACNhC,IAAA,QAAKkB,SAAS,CAAC,6BAA6B,CAAAc,QAAA,cAC1ChC,IAAA,SAAMkB,SAAS,YAAAa,MAAA,CAAatB,MAAM,CAACW,KAAK,CAAG,CAAAY,QAAA,CACxCvB,MAAM,CAACU,IAAI,CACR,CAAC,CACJ,CAAC,EACH,CAAC,CACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAhB,yBAAyB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}