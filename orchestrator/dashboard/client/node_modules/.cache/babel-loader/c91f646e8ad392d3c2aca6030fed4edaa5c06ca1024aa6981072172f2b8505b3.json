{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{api}from'../services/api';// Helper function to safely access localStorage\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const safeLocalStorage={getItem:key=>{try{if(typeof window!=='undefined'&&window.localStorage){return localStorage.getItem(key);}return null;}catch(err){console.error('Error accessing localStorage:',err);return null;}},setItem:(key,value)=>{try{if(typeof window!=='undefined'&&window.localStorage){localStorage.setItem(key,value);return true;}return false;}catch(err){console.error('Error setting localStorage:',err);return false;}}};export const MixpanelDebugPage=()=>{// Date input state\nconst[startDateInput,setStartDateInput]=useState('');// Mixpanel data loading state\nconst[lastLoadTimestamp,setLastLoadTimestamp]=useState(null);const[isProcessing,setIsProcessing]=useState(false);const[processingStatus,setProcessingStatus]=useState(null);const[processingError,setProcessingError]=useState(null);const[processingProgress,setProcessingProgress]=useState({stage:null,// download, extract, filter, ingest\npercent:0,currentDate:null});// DB test state\nconst[isTestingDb,setIsTestingDb]=useState(false);const[dbTestResults,setDbTestResults]=useState(null);const[dbTestError,setDbTestError]=useState(null);// Request history state\nconst[requestHistory,setRequestHistory]=useState([]);// Add new state for database stats\nconst[dbtStats,setDbStats]=useState({totalEvents:0,totalUsers:0,eventBreakdown:[],monthlyBreakdown:[],dailyBreakdown:[],dateRange:{earliest:null,latest:null}});const[isLoadingStats,setIsLoadingStats]=useState(false);// Add new state for user events lookup\nconst[userIdInput,setUserIdInput]=useState('');const[userEvents,setUserEvents]=useState([]);const[isLoadingUserEvents,setIsLoadingUserEvents]=useState(false);const[userEventsError,setUserEventsError]=useState(null);// Add new state for database reset\nconst[isResettingDatabase,setIsResettingDatabase]=useState(false);const[resetDatabaseStatus,setResetDatabaseStatus]=useState(null);const[resetDatabaseError,setResetDatabaseError]=useState(null);// Add new state for refresh data functionality\nconst[isRefreshingData,setIsRefreshingData]=useState(false);const[refreshDataStatus,setRefreshDataStatus]=useState(null);const[refreshDataError,setRefreshDataError]=useState(null);// Add new state for continue from last date functionality\nconst[latestProcessedDate,setLatestProcessedDate]=useState(null);const[isLoadingLatestDate,setIsLoadingLatestDate]=useState(false);const[continueFromLastDateError,setContinueFromLastDateError]=useState(null);// Fetch the last load timestamp from the API\nconst fetchLastLoadTimestamp=useCallback(async()=>{try{const result=await api.getMixpanelDebugSyncTS();setLastLoadTimestamp(result.last_load_timestamp);}catch(err){console.error('Error fetching last load timestamp:',err);}},[]);// Check the current processing status\nconst checkProcessStatus=useCallback(async()=>{try{const status=await api.getMixpanelProcessStatus();setProcessingProgress({stage:status.current_stage,percent:status.percent_complete,currentDate:status.current_date});if(status.is_complete){setIsProcessing(false);setProcessingStatus('Processing complete!');fetchLastLoadTimestamp();// Update the last timestamp\n}else if(status.error){setIsProcessing(false);setProcessingError(status.error);}}catch(err){console.error('Error checking process status:',err);}},[fetchLastLoadTimestamp]);// Load saved values and request history from localStorage on initial render\nuseEffect(()=>{// Load request history\nconst savedHistory=safeLocalStorage.getItem('mixpanelRequestHistory');if(savedHistory){try{setRequestHistory(JSON.parse(savedHistory));}catch(e){console.error('Error parsing request history:',e);setRequestHistory([]);}}// Fetch the last load timestamp\nfetchLastLoadTimestamp();// Set up polling for process status\nconst interval=setInterval(()=>{if(isProcessing){checkProcessStatus();}},3000);return()=>clearInterval(interval);},[isProcessing,checkProcessStatus,fetchLastLoadTimestamp]);// Handle starting the Mixpanel data processing\nconst handleStartProcessing=async()=>{if(!startDateInput){setProcessingError('Start date is required');return;}setIsProcessing(true);setProcessingStatus(null);setProcessingError(null);setProcessingProgress({stage:'initializing',percent:0,currentDate:null});try{// Start the processing pipeline\nconst result=await api.startMixpanelProcessing({start_date:startDateInput,wipe_folder:true// Always wipe the folder as requested\n});if(result.success){setProcessingStatus('Processing started successfully');}else{throw new Error(result.error||'Failed to start processing');}}catch(err){setProcessingError(err.message||'An unknown error occurred');setIsProcessing(false);}};// Handle canceling the current process\nconst handleCancelProcessing=async()=>{try{await api.cancelMixpanelProcessing();setIsProcessing(false);setProcessingStatus('Processing canceled');}catch(err){setProcessingError(err.message||'Failed to cancel processing');}};// Handle resetting the last sync counter\nconst handleResetSyncCounter=async()=>{setProcessingStatus(null);setProcessingError(null);try{const result=await api.resetMixpanelDebugSyncTS();setProcessingStatus(result.message);setLastLoadTimestamp(null);}catch(err){setProcessingError(err.message||'An unknown error occurred');}};// Handle resetting all database data\nconst handleResetDatabase=async()=>{// Show confirmation dialog\nconst confirmed=window.confirm('Are you sure you want to reset ALL Mixpanel data in the database? This action cannot be undone and will delete all events, users, and processing history.');if(!confirmed){return;}setIsResettingDatabase(true);setResetDatabaseStatus(null);setResetDatabaseError(null);setProcessingStatus(null);setProcessingError(null);try{const result=await api.resetMixpanelDatabase();setResetDatabaseStatus(result.message);setLastLoadTimestamp(null);// Refresh database stats after reset\nfetchDatabaseStats();}catch(err){setResetDatabaseError(err.message||'An unknown error occurred');}finally{setIsResettingDatabase(false);}};// Handle refreshing data by clearing data directories\nconst handleRefreshData=async()=>{// Show confirmation dialog\nconst confirmed=window.confirm('Are you sure you want to refresh all data? This will delete all downloaded files in the data/events and data/users directories. You will need to re-download data after this action.');if(!confirmed){return;}setIsRefreshingData(true);setRefreshDataStatus(null);setRefreshDataError(null);setProcessingStatus(null);setProcessingError(null);try{const result=await api.refreshMixpanelData();setRefreshDataStatus(result.message);}catch(err){setRefreshDataError(err.message||'An unknown error occurred');}finally{setIsRefreshingData(false);}};// Handle DB test to find users with RC Trial started events and abi_ad_id\nconst handleTestDb=async()=>{setIsTestingDb(true);setDbTestResults(null);setDbTestError(null);try{// Get 3 random users who did RC Trial started and have abi_ad_id set\nconst eventResults=await api.getTestDbEvents();setDbTestResults(eventResults);}catch(err){setDbTestError(err.message||'An unknown error occurred');}finally{setIsTestingDb(false);}};// Format timestamp for display\nconst formatTimestamp=timestamp=>{if(typeof timestamp==='number'){return new Date(timestamp).toLocaleString();}else if(timestamp){return new Date(timestamp).toLocaleString();}return'Never';};// Get progress bar width percentage\nconst getProgressWidth=()=>{return\"\".concat(processingProgress.percent,\"%\");};// Get stage label for display\nconst getStageLabel=()=>{const stage=processingProgress.stage;switch(stage){case'download':return'Downloading data';case'extract':return'Extracting data';case'filter':return'Filtering data';case'ingest':return'Ingesting data';case'initializing':return'Initializing';default:return'Processing';}};// Handle searching for user events\nconst handleSearchUserEvents=async()=>{if(!userIdInput.trim()){setUserEventsError('User ID is required');return;}setIsLoadingUserEvents(true);setUserEvents([]);setUserEventsError(null);try{const events=await api.getUserEvents(userIdInput.trim());// Sort events by timestamp (oldest first)\nconst sortedEvents=events.sort((a,b)=>a.time-b.time);setUserEvents(sortedEvents);}catch(err){setUserEventsError(err.message||'Failed to fetch user events');}finally{setIsLoadingUserEvents(false);}};useEffect(()=>{// Fetch database stats when component mounts\nfetchDatabaseStats();},[]);const fetchDatabaseStats=async()=>{setIsLoadingStats(true);try{const stats=await api.getMixpanelDatabaseStats();setDbStats(stats);}catch(error){console.error(\"Error fetching database stats:\",error);}finally{setIsLoadingStats(false);}};// Handle continuing from the last processed date\nconst handleContinueFromLastDate=async()=>{setIsLoadingLatestDate(true);setContinueFromLastDateError(null);setProcessingError(null);setProcessingStatus(null);try{// Get the latest processed date\nconst dateResult=await api.getLatestProcessedDate();if(!dateResult.has_processed_dates){setContinueFromLastDateError('No processed dates found. Please use the regular \"Start Processing\" with a start date.');setIsLoadingLatestDate(false);return;}if(!dateResult.next_date_to_process){setContinueFromLastDateError('Unable to determine next date to process.');setIsLoadingLatestDate(false);return;}setLatestProcessedDate(dateResult.latest_processed_date);// Start processing from the next date\nsetIsProcessing(true);setProcessingStatus(null);setProcessingError(null);setContinueFromLastDateError(null);setProcessingProgress({stage:'initializing',percent:0,currentDate:null});const result=await api.startMixpanelProcessing({start_date:dateResult.next_date_to_process,wipe_folder:true});if(result.success){setProcessingStatus(\"Processing started from \".concat(dateResult.next_date_to_process,\" (continuing after \").concat(dateResult.latest_processed_date,\")\"));}else{throw new Error(result.error||'Failed to start processing');}}catch(err){setContinueFromLastDateError(err.message||'An unknown error occurred');setIsProcessing(false);}finally{setIsLoadingLatestDate(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"flex\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"w-64 bg-gray-50 dark:bg-gray-800 p-4 border-r min-h-[calc(100vh-10rem)] overflow-y-auto\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-semibold mb-4\",children:\"Processing History\"}),requestHistory.length===0?/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500 dark:text-gray-400\",children:\"No processing history\"}):/*#__PURE__*/_jsx(\"ul\",{className:\"space-y-2\",children:requestHistory.map(request=>/*#__PURE__*/_jsxs(\"li\",{className:\"p-2 border rounded hover:bg-gray-100 dark:hover:bg-gray-700\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm font-medium\",children:[request.startDate,\" to \",request.endDate]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-500 dark:text-gray-400\",children:formatTimestamp(request.timestamp)})]},request.id))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 p-6 max-w-5xl\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold mb-6\",children:\"Mixpanel Data Processor\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-lg shadow p-6 mb-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold mb-4\",children:\"Process Mixpanel Data\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-600 dark:text-gray-300 mb-2\",children:[\"Last full load: \",lastLoadTimestamp?formatTimestamp(lastLoadTimestamp):'Never']}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"block text-sm font-medium mb-1\",htmlFor:\"start_date_input\",children:[\"Start Date (YYYY-MM-DD)\",/*#__PURE__*/_jsx(\"span\",{className:\"text-red-500\",children:\" *\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"start_date_input\",value:startDateInput,onChange:e=>setStartDateInput(e.target.value),className:\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600\",placeholder:\"e.g., 2023-05-01\",required:true,disabled:isProcessing}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500 mt-1\",children:\"Data will be processed from this date until today\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-4\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleStartProcessing,disabled:isProcessing||!startDateInput,className:\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 disabled:bg-gray-400\",children:isProcessing?'Processing...':'Start Processing'}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative group\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleContinueFromLastDate,disabled:isProcessing||isLoadingLatestDate,className:\"px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 disabled:bg-gray-400\",children:isLoadingLatestDate?'Loading...':'Continue from Last Date'}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-3 py-2 bg-gray-800 text-white text-sm rounded opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none whitespace-nowrap z-10\",children:\"Automatically continues processing from the day after the last successfully processed date\"})]}),isProcessing&&/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleCancelProcessing,className:\"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700\",children:\"Cancel Processing\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative group\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleResetSyncCounter,disabled:isProcessing||!lastLoadTimestamp,className:\"px-4 py-2 bg-gray-600 text-white rounded hover:bg-gray-700 disabled:bg-gray-400\",children:\"Reset Last Sync Counter\"}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-3 py-2 bg-gray-800 text-white text-sm rounded opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none whitespace-nowrap z-10\",children:\"Resets the timestamp tracking when data was last processed, allowing re-processing of all dates\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative group\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleRefreshData,disabled:isProcessing||isRefreshingData,className:\"px-4 py-2 bg-orange-600 text-white rounded hover:bg-orange-700 disabled:bg-gray-400\",children:isRefreshingData?'Refreshing...':'Refresh Data'}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-3 py-2 bg-gray-800 text-white text-sm rounded opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none whitespace-nowrap z-10\",children:\"Deletes all downloaded files in data/events and data/users directories\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative group\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleResetDatabase,disabled:isProcessing||isResettingDatabase,className:\"px-4 py-2 bg-red-800 text-white rounded hover:bg-red-900 disabled:bg-gray-400\",children:isResettingDatabase?'Resetting...':'Reset All Data'}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-3 py-2 bg-gray-800 text-white text-sm rounded opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none whitespace-nowrap z-10\",children:\"Completely wipes all data from the database including events, users, and processing history\"})]})]})]}),isProcessing&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-md font-medium mb-2\",children:getStageLabel()}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-200 rounded-full h-4 mb-2\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-blue-600 h-4 rounded-full transition-all duration-300\",style:{width:getProgressWidth()}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between text-sm text-gray-600\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[processingProgress.percent,\"% complete\"]}),processingProgress.currentDate&&/*#__PURE__*/_jsxs(\"span\",{children:[\"Current date: \",processingProgress.currentDate]})]})]}),processingStatus&&!processingError&&!isProcessing&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-4 p-3 bg-green-100 dark:bg-green-800 text-green-800 dark:text-green-100 rounded\",children:processingStatus}),processingError&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 p-3 bg-red-100 dark:bg-red-800 text-red-800 dark:text-red-100 rounded\",children:[\"Error: \",processingError]}),resetDatabaseStatus&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-4 p-3 bg-green-100 dark:bg-green-800 text-green-800 dark:text-green-100 rounded\",children:resetDatabaseStatus}),resetDatabaseError&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 p-3 bg-red-100 dark:bg-red-800 text-red-800 dark:text-red-100 rounded\",children:[\"Error: \",resetDatabaseError]}),refreshDataStatus&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-4 p-3 bg-green-100 dark:bg-green-800 text-green-800 dark:text-green-100 rounded\",children:refreshDataStatus}),refreshDataError&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 p-3 bg-red-100 dark:bg-red-800 text-red-800 dark:text-red-100 rounded\",children:[\"Error: \",refreshDataError]}),continueFromLastDateError&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 p-3 bg-red-100 dark:bg-red-800 text-red-800 dark:text-red-100 rounded\",children:[\"Error: \",continueFromLastDateError]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-lg shadow p-6 mb-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold mb-4\",children:\"Test Database\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mb-4 text-sm text-gray-600 dark:text-gray-300\",children:\"This will find 3 random users who did the \\\"RC Trial started\\\" event and have their abi_ad_id set.\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleTestDb,disabled:isTestingDb,className:\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 disabled:bg-gray-400\",children:isTestingDb?'Testing...':'Test DB'}),dbTestError&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 p-3 bg-red-100 dark:bg-red-800 text-red-800 dark:text-red-100 rounded\",children:[\"Error: \",dbTestError]}),dbTestResults&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium mb-2\",children:\"Test Results\"}),dbTestResults.map((user,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-100 dark:bg-gray-900 p-4 rounded mb-4\",children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"font-bold text-lg mb-2\",children:[\"User \",index+1]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-2 mb-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-semibold\",children:\"Name:\"}),/*#__PURE__*/_jsx(\"div\",{children:user.name}),/*#__PURE__*/_jsx(\"div\",{className:\"font-semibold\",children:\"Distinct ID:\"}),/*#__PURE__*/_jsx(\"div\",{children:user.distinct_id}),/*#__PURE__*/_jsx(\"div\",{className:\"font-semibold\",children:\"Ad ID:\"}),/*#__PURE__*/_jsx(\"div\",{children:user.abi_ad_id}),/*#__PURE__*/_jsx(\"div\",{className:\"font-semibold\",children:\"Event:\"}),/*#__PURE__*/_jsx(\"div\",{children:user.event_name})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-semibold mb-1\",children:\"Event Properties:\"}),/*#__PURE__*/_jsx(\"pre\",{className:\"bg-gray-200 dark:bg-gray-800 p-2 rounded text-xs overflow-auto max-h-60\",children:JSON.stringify(user.event_properties,null,2)})]})]},index))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-lg shadow p-6 mb-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold mb-4\",children:\"User Event History\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"block text-sm font-medium mb-1\",htmlFor:\"user_id_input\",children:[\"User ID\",/*#__PURE__*/_jsx(\"span\",{className:\"text-red-500\",children:\" *\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"user_id_input\",value:userIdInput,onChange:e=>setUserIdInput(e.target.value),className:\"flex-1 p-2 border rounded dark:bg-gray-700 dark:border-gray-600\",placeholder:\"Enter user ID or distinct ID\",required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleSearchUserEvents,disabled:isLoadingUserEvents||!userIdInput.trim(),className:\"ml-2 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 disabled:bg-gray-400\",children:isLoadingUserEvents?'Loading...':'Search'})]})]}),userEventsError&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 p-3 bg-red-100 dark:bg-red-800 text-red-800 dark:text-red-100 rounded\",children:[\"Error: \",userEventsError]}),isLoadingUserEvents&&/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center items-center py-8\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500\",children:\"Loading user events...\"})}),!isLoadingUserEvents&&userEvents.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium mb-2\",children:\"Event Timeline for User\"}),/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full divide-y divide-gray-200 dark:divide-gray-600\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-gray-50 dark:bg-gray-800\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\",children:\"Time\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\",children:\"Event Name\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\",children:\"Details\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{className:\"divide-y divide-gray-200 dark:divide-gray-600\",children:userEvents.map((event,index)=>/*#__PURE__*/_jsxs(\"tr\",{className:index%2===0?'bg-white dark:bg-gray-700':'bg-gray-50 dark:bg-gray-800',children:[/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-2 text-sm text-gray-900 dark:text-gray-200\",children:new Date(event.time).toLocaleString()}),/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-2 text-sm text-gray-900 dark:text-gray-200\",children:event.name}),/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-2 text-sm text-gray-900 dark:text-gray-200\",children:/*#__PURE__*/_jsx(\"button\",{className:\"text-blue-500 hover:text-blue-700\",onClick:()=>{alert(JSON.stringify(event.properties,null,2));},children:\"View Properties\"})})]},index))})]})})]}),!isLoadingUserEvents&&userEvents.length===0&&userIdInput&&!userEventsError&&/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center items-center py-8\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500\",children:\"No events found for this user\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6 bg-white dark:bg-gray-800 rounded-lg shadow p-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-4\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold\",children:\"Database Statistics\"}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchDatabaseStats,className:\"px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600 text-sm\",disabled:isLoadingStats,children:isLoadingStats?'Loading...':'Refresh'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 dark:bg-gray-700 p-3 rounded border border-gray-200 dark:border-gray-600\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-md font-medium mb-2\",children:\"Total Events\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-2xl font-bold text-blue-600 dark:text-blue-400\",children:dbtStats.totalEvents.toLocaleString()})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 dark:bg-gray-700 p-3 rounded border border-gray-200 dark:border-gray-600\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-md font-medium mb-2\",children:\"Total Users\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-2xl font-bold text-green-600 dark:text-green-400\",children:dbtStats.totalUsers.toLocaleString()})]})]}),dbtStats.dateRange&&(dbtStats.dateRange.earliest||dbtStats.dateRange.latest)&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4 p-3 bg-blue-50 dark:bg-blue-900 rounded border border-blue-200 dark:border-blue-700\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-md font-medium mb-2 text-blue-800 dark:text-blue-200\",children:\"Data Range\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-blue-700 dark:text-blue-300\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Earliest Event: \",dbtStats.dateRange.earliest?new Date(dbtStats.dateRange.earliest).toLocaleString():'N/A']}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Latest Event: \",dbtStats.dateRange.latest?new Date(dbtStats.dateRange.latest).toLocaleString():'N/A']})]})]}),dbtStats.monthlyBreakdown&&dbtStats.monthlyBreakdown.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-md font-medium mb-2\",children:\"Monthly Breakdown\"}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white dark:bg-gray-700 border border-gray-200 dark:border-gray-600 rounded overflow-hidden\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full divide-y divide-gray-200 dark:divide-gray-600\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-gray-50 dark:bg-gray-800\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\",children:\"Month\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\",children:\"Events\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\",children:\"Users\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\",children:\"Event Types\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{className:\"divide-y divide-gray-200 dark:divide-gray-600\",children:dbtStats.monthlyBreakdown.map((month,index)=>/*#__PURE__*/_jsxs(\"tr\",{className:index%2===0?'bg-white dark:bg-gray-700':'bg-gray-50 dark:bg-gray-800',children:[/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-2 text-sm text-gray-900 dark:text-gray-200 font-medium\",children:month.month}),/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-2 text-sm text-gray-900 dark:text-gray-200\",children:month.events.toLocaleString()}),/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-2 text-sm text-gray-900 dark:text-gray-200\",children:month.users.toLocaleString()}),/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-2 text-sm text-gray-900 dark:text-gray-200\",children:month.uniqueEvents})]},index))})]})})]}),dbtStats.dailyBreakdown&&dbtStats.dailyBreakdown.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-md font-medium mb-2\",children:\"Daily Breakdown (Last 30 Days)\"}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white dark:bg-gray-700 border border-gray-200 dark:border-gray-600 rounded overflow-hidden max-h-96 overflow-y-auto\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full divide-y divide-gray-200 dark:divide-gray-600\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-gray-50 dark:bg-gray-800 sticky top-0\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\",children:\"Date\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\",children:\"Events\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\",children:\"Users\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\",children:\"Event Types\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{className:\"divide-y divide-gray-200 dark:divide-gray-600\",children:dbtStats.dailyBreakdown.map((day,index)=>/*#__PURE__*/_jsxs(\"tr\",{className:index%2===0?'bg-white dark:bg-gray-700':'bg-gray-50 dark:bg-gray-800',children:[/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-2 text-sm text-gray-900 dark:text-gray-200 font-medium\",children:day.date}),/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-2 text-sm text-gray-900 dark:text-gray-200\",children:day.events.toLocaleString()}),/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-2 text-sm text-gray-900 dark:text-gray-200\",children:day.users.toLocaleString()}),/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-2 text-sm text-gray-900 dark:text-gray-200\",children:day.uniqueEvents})]},index))})]})})]}),dbtStats.eventBreakdown&&dbtStats.eventBreakdown.length>0&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-md font-medium mb-2\",children:\"Event Breakdown\"}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white dark:bg-gray-700 border border-gray-200 dark:border-gray-600 rounded overflow-hidden\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full divide-y divide-gray-200 dark:divide-gray-600\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-gray-50 dark:bg-gray-800\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\",children:\"Event Name\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\",children:\"Count\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\",children:\"Percentage\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{className:\"divide-y divide-gray-200 dark:divide-gray-600\",children:dbtStats.eventBreakdown.map((event,index)=>/*#__PURE__*/_jsxs(\"tr\",{className:index%2===0?'bg-white dark:bg-gray-700':'bg-gray-50 dark:bg-gray-800',children:[/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-2 text-sm text-gray-900 dark:text-gray-200\",children:event.name}),/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-2 text-sm text-gray-900 dark:text-gray-200\",children:event.count.toLocaleString()}),/*#__PURE__*/_jsxs(\"td\",{className:\"px-4 py-2 text-sm text-gray-900 dark:text-gray-200\",children:[(event.count/dbtStats.totalEvents*100).toFixed(2),\"%\"]})]},index))})]})})]})]})]})]});};","map":{"version":3,"names":["React","useState","useEffect","useCallback","api","jsx","_jsx","jsxs","_jsxs","safeLocalStorage","getItem","key","window","localStorage","err","console","error","setItem","value","MixpanelDebugPage","startDateInput","setStartDateInput","lastLoadTimestamp","setLastLoadTimestamp","isProcessing","setIsProcessing","processingStatus","setProcessingStatus","processingError","setProcessingError","processingProgress","setProcessingProgress","stage","percent","currentDate","isTestingDb","setIsTestingDb","dbTestResults","setDbTestResults","dbTestError","setDbTestError","requestHistory","setRequestHistory","dbtStats","setDbStats","totalEvents","totalUsers","eventBreakdown","monthlyBreakdown","dailyBreakdown","dateRange","earliest","latest","isLoadingStats","setIsLoadingStats","userIdInput","setUserIdInput","userEvents","setUserEvents","isLoadingUserEvents","setIsLoadingUserEvents","userEventsError","setUserEventsError","isResettingDatabase","setIsResettingDatabase","resetDatabaseStatus","setResetDatabaseStatus","resetDatabaseError","setResetDatabaseError","isRefreshingData","setIsRefreshingData","refreshDataStatus","setRefreshDataStatus","refreshDataError","setRefreshDataError","latestProcessedDate","setLatestProcessedDate","isLoadingLatestDate","setIsLoadingLatestDate","continueFromLastDateError","setContinueFromLastDateError","fetchLastLoadTimestamp","result","getMixpanelDebugSyncTS","last_load_timestamp","checkProcessStatus","status","getMixpanelProcessStatus","current_stage","percent_complete","current_date","is_complete","savedHistory","JSON","parse","e","interval","setInterval","clearInterval","handleStartProcessing","startMixpanelProcessing","start_date","wipe_folder","success","Error","message","handleCancelProcessing","cancelMixpanelProcessing","handleResetSyncCounter","resetMixpanelDebugSyncTS","handleResetDatabase","confirmed","confirm","resetMixpanelDatabase","fetchDatabaseStats","handleRefreshData","refreshMixpanelData","handleTestDb","eventResults","getTestDbEvents","formatTimestamp","timestamp","Date","toLocaleString","getProgressWidth","concat","getStageLabel","handleSearchUserEvents","trim","events","getUserEvents","sortedEvents","sort","a","b","time","stats","getMixpanelDatabaseStats","handleContinueFromLastDate","dateResult","getLatestProcessedDate","has_processed_dates","next_date_to_process","latest_processed_date","className","children","length","map","request","startDate","endDate","id","htmlFor","type","onChange","target","placeholder","required","disabled","onClick","style","width","user","index","name","distinct_id","abi_ad_id","event_name","stringify","event_properties","event","alert","properties","month","users","uniqueEvents","day","date","count","toFixed"],"sources":["/Users/joshuakaufman/untitled folder 3/orchestrator/dashboard/client/src/pages/MixpanelDebugPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { api } from '../services/api';\n\n// Helper function to safely access localStorage\nconst safeLocalStorage = {\n  getItem: (key) => {\n    try {\n      if (typeof window !== 'undefined' && window.localStorage) {\n        return localStorage.getItem(key);\n      }\n      return null;\n    } catch (err) {\n      console.error('Error accessing localStorage:', err);\n      return null;\n    }\n  },\n  setItem: (key, value) => {\n    try {\n      if (typeof window !== 'undefined' && window.localStorage) {\n        localStorage.setItem(key, value);\n        return true;\n      }\n      return false;\n    } catch (err) {\n      console.error('Error setting localStorage:', err);\n      return false;\n    }\n  }\n};\n\nexport const MixpanelDebugPage = () => {\n  // Date input state\n  const [startDateInput, setStartDateInput] = useState('');\n  \n  // Mixpanel data loading state\n  const [lastLoadTimestamp, setLastLoadTimestamp] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [processingStatus, setProcessingStatus] = useState(null);\n  const [processingError, setProcessingError] = useState(null);\n  const [processingProgress, setProcessingProgress] = useState({\n    stage: null, // download, extract, filter, ingest\n    percent: 0,\n    currentDate: null\n  });\n  \n  // DB test state\n  const [isTestingDb, setIsTestingDb] = useState(false);\n  const [dbTestResults, setDbTestResults] = useState(null);\n  const [dbTestError, setDbTestError] = useState(null);\n\n  // Request history state\n  const [requestHistory, setRequestHistory] = useState([]);\n\n  // Add new state for database stats\n  const [dbtStats, setDbStats] = useState({\n    totalEvents: 0, \n    totalUsers: 0,\n    eventBreakdown: [],\n    monthlyBreakdown: [],\n    dailyBreakdown: [],\n    dateRange: { earliest: null, latest: null }\n  });\n  const [isLoadingStats, setIsLoadingStats] = useState(false);\n\n  // Add new state for user events lookup\n  const [userIdInput, setUserIdInput] = useState('');\n  const [userEvents, setUserEvents] = useState([]);\n  const [isLoadingUserEvents, setIsLoadingUserEvents] = useState(false);\n  const [userEventsError, setUserEventsError] = useState(null);\n\n  // Add new state for database reset\n  const [isResettingDatabase, setIsResettingDatabase] = useState(false);\n  const [resetDatabaseStatus, setResetDatabaseStatus] = useState(null);\n  const [resetDatabaseError, setResetDatabaseError] = useState(null);\n\n  // Add new state for refresh data functionality\n  const [isRefreshingData, setIsRefreshingData] = useState(false);\n  const [refreshDataStatus, setRefreshDataStatus] = useState(null);\n  const [refreshDataError, setRefreshDataError] = useState(null);\n\n  // Add new state for continue from last date functionality\n  const [latestProcessedDate, setLatestProcessedDate] = useState(null);\n  const [isLoadingLatestDate, setIsLoadingLatestDate] = useState(false);\n  const [continueFromLastDateError, setContinueFromLastDateError] = useState(null);\n\n  // Fetch the last load timestamp from the API\n  const fetchLastLoadTimestamp = useCallback(async () => {\n    try {\n      const result = await api.getMixpanelDebugSyncTS();\n      setLastLoadTimestamp(result.last_load_timestamp);\n    } catch (err) {\n      console.error('Error fetching last load timestamp:', err);\n    }\n  }, []);\n\n  // Check the current processing status\n  const checkProcessStatus = useCallback(async () => {\n    try {\n      const status = await api.getMixpanelProcessStatus();\n      \n      setProcessingProgress({\n        stage: status.current_stage,\n        percent: status.percent_complete,\n        currentDate: status.current_date\n      });\n      \n      if (status.is_complete) {\n        setIsProcessing(false);\n        setProcessingStatus('Processing complete!');\n        fetchLastLoadTimestamp(); // Update the last timestamp\n      } else if (status.error) {\n        setIsProcessing(false);\n        setProcessingError(status.error);\n      }\n    } catch (err) {\n      console.error('Error checking process status:', err);\n    }\n  }, [fetchLastLoadTimestamp]);\n\n  // Load saved values and request history from localStorage on initial render\n  useEffect(() => {\n    // Load request history\n    const savedHistory = safeLocalStorage.getItem('mixpanelRequestHistory');\n    if (savedHistory) {\n      try {\n        setRequestHistory(JSON.parse(savedHistory));\n      } catch (e) {\n        console.error('Error parsing request history:', e);\n        setRequestHistory([]);\n      }\n    }\n\n    // Fetch the last load timestamp\n    fetchLastLoadTimestamp();\n\n    // Set up polling for process status\n    const interval = setInterval(() => {\n      if (isProcessing) {\n        checkProcessStatus();\n      }\n    }, 3000);\n\n    return () => clearInterval(interval);\n  }, [isProcessing, checkProcessStatus, fetchLastLoadTimestamp]);\n\n  // Handle starting the Mixpanel data processing\n  const handleStartProcessing = async () => {\n    if (!startDateInput) {\n      setProcessingError('Start date is required');\n      return;\n    }\n    \n    setIsProcessing(true);\n    setProcessingStatus(null);\n    setProcessingError(null);\n    setProcessingProgress({\n      stage: 'initializing',\n      percent: 0,\n      currentDate: null\n    });\n\n    try {\n      // Start the processing pipeline\n      const result = await api.startMixpanelProcessing({\n        start_date: startDateInput,\n        wipe_folder: true // Always wipe the folder as requested\n      });\n      \n      if (result.success) {\n        setProcessingStatus('Processing started successfully');\n      } else {\n        throw new Error(result.error || 'Failed to start processing');\n      }\n    } catch (err) {\n      setProcessingError(err.message || 'An unknown error occurred');\n      setIsProcessing(false);\n    }\n  };\n\n  // Handle canceling the current process\n  const handleCancelProcessing = async () => {\n    try {\n      await api.cancelMixpanelProcessing();\n      setIsProcessing(false);\n      setProcessingStatus('Processing canceled');\n    } catch (err) {\n      setProcessingError(err.message || 'Failed to cancel processing');\n    }\n  };\n\n  // Handle resetting the last sync counter\n  const handleResetSyncCounter = async () => {\n    setProcessingStatus(null);\n    setProcessingError(null);\n\n    try {\n      const result = await api.resetMixpanelDebugSyncTS();\n      setProcessingStatus(result.message);\n      setLastLoadTimestamp(null);\n    } catch (err) {\n      setProcessingError(err.message || 'An unknown error occurred');\n    }\n  };\n\n  // Handle resetting all database data\n  const handleResetDatabase = async () => {\n    // Show confirmation dialog\n    const confirmed = window.confirm(\n      'Are you sure you want to reset ALL Mixpanel data in the database? This action cannot be undone and will delete all events, users, and processing history.'\n    );\n    \n    if (!confirmed) {\n      return;\n    }\n\n    setIsResettingDatabase(true);\n    setResetDatabaseStatus(null);\n    setResetDatabaseError(null);\n    setProcessingStatus(null);\n    setProcessingError(null);\n\n    try {\n      const result = await api.resetMixpanelDatabase();\n      setResetDatabaseStatus(result.message);\n      setLastLoadTimestamp(null);\n      // Refresh database stats after reset\n      fetchDatabaseStats();\n    } catch (err) {\n      setResetDatabaseError(err.message || 'An unknown error occurred');\n    } finally {\n      setIsResettingDatabase(false);\n    }\n  };\n\n  // Handle refreshing data by clearing data directories\n  const handleRefreshData = async () => {\n    // Show confirmation dialog\n    const confirmed = window.confirm(\n      'Are you sure you want to refresh all data? This will delete all downloaded files in the data/events and data/users directories. You will need to re-download data after this action.'\n    );\n    \n    if (!confirmed) {\n      return;\n    }\n\n    setIsRefreshingData(true);\n    setRefreshDataStatus(null);\n    setRefreshDataError(null);\n    setProcessingStatus(null);\n    setProcessingError(null);\n\n    try {\n      const result = await api.refreshMixpanelData();\n      setRefreshDataStatus(result.message);\n    } catch (err) {\n      setRefreshDataError(err.message || 'An unknown error occurred');\n    } finally {\n      setIsRefreshingData(false);\n    }\n  };\n\n  // Handle DB test to find users with RC Trial started events and abi_ad_id\n  const handleTestDb = async () => {\n    setIsTestingDb(true);\n    setDbTestResults(null);\n    setDbTestError(null);\n\n    try {\n      // Get 3 random users who did RC Trial started and have abi_ad_id set\n      const eventResults = await api.getTestDbEvents();\n      setDbTestResults(eventResults);\n    } catch (err) {\n      setDbTestError(err.message || 'An unknown error occurred');\n    } finally {\n      setIsTestingDb(false);\n    }\n  };\n  \n  // Format timestamp for display\n  const formatTimestamp = (timestamp) => {\n    if (typeof timestamp === 'number') {\n      return new Date(timestamp).toLocaleString();\n    } else if (timestamp) {\n      return new Date(timestamp).toLocaleString();\n    }\n    return 'Never';\n  };\n  \n  // Get progress bar width percentage\n  const getProgressWidth = () => {\n    return `${processingProgress.percent}%`;\n  };\n\n  // Get stage label for display\n  const getStageLabel = () => {\n    const stage = processingProgress.stage;\n    \n    switch (stage) {\n      case 'download':\n        return 'Downloading data';\n      case 'extract':\n        return 'Extracting data';\n      case 'filter':\n        return 'Filtering data';\n      case 'ingest':\n        return 'Ingesting data';\n      case 'initializing':\n        return 'Initializing';\n      default:\n        return 'Processing';\n    }\n  };\n\n  // Handle searching for user events\n  const handleSearchUserEvents = async () => {\n    if (!userIdInput.trim()) {\n      setUserEventsError('User ID is required');\n      return;\n    }\n\n    setIsLoadingUserEvents(true);\n    setUserEvents([]);\n    setUserEventsError(null);\n\n    try {\n      const events = await api.getUserEvents(userIdInput.trim());\n      // Sort events by timestamp (oldest first)\n      const sortedEvents = events.sort((a, b) => a.time - b.time);\n      setUserEvents(sortedEvents);\n    } catch (err) {\n      setUserEventsError(err.message || 'Failed to fetch user events');\n    } finally {\n      setIsLoadingUserEvents(false);\n    }\n  };\n\n  useEffect(() => {\n    // Fetch database stats when component mounts\n    fetchDatabaseStats();\n  }, []);\n\n  const fetchDatabaseStats = async () => {\n    setIsLoadingStats(true);\n    try {\n      const stats = await api.getMixpanelDatabaseStats();\n      setDbStats(stats);\n    } catch (error) {\n      console.error(\"Error fetching database stats:\", error);\n    } finally {\n      setIsLoadingStats(false);\n    }\n  };\n\n  // Handle continuing from the last processed date\n  const handleContinueFromLastDate = async () => {\n    setIsLoadingLatestDate(true);\n    setContinueFromLastDateError(null);\n    setProcessingError(null);\n    setProcessingStatus(null);\n\n    try {\n      // Get the latest processed date\n      const dateResult = await api.getLatestProcessedDate();\n      \n      if (!dateResult.has_processed_dates) {\n        setContinueFromLastDateError('No processed dates found. Please use the regular \"Start Processing\" with a start date.');\n        setIsLoadingLatestDate(false);\n        return;\n      }\n\n      if (!dateResult.next_date_to_process) {\n        setContinueFromLastDateError('Unable to determine next date to process.');\n        setIsLoadingLatestDate(false);\n        return;\n      }\n\n      setLatestProcessedDate(dateResult.latest_processed_date);\n      \n      // Start processing from the next date\n      setIsProcessing(true);\n      setProcessingStatus(null);\n      setProcessingError(null);\n      setContinueFromLastDateError(null);\n      setProcessingProgress({\n        stage: 'initializing',\n        percent: 0,\n        currentDate: null\n      });\n\n      const result = await api.startMixpanelProcessing({\n        start_date: dateResult.next_date_to_process,\n        wipe_folder: true\n      });\n      \n      if (result.success) {\n        setProcessingStatus(`Processing started from ${dateResult.next_date_to_process} (continuing after ${dateResult.latest_processed_date})`);\n      } else {\n        throw new Error(result.error || 'Failed to start processing');\n      }\n    } catch (err) {\n      setContinueFromLastDateError(err.message || 'An unknown error occurred');\n      setIsProcessing(false);\n    } finally {\n      setIsLoadingLatestDate(false);\n    }\n  };\n\n  return (\n    <div className=\"flex\">\n      {/* Request History Sidebar */}\n      <div className=\"w-64 bg-gray-50 dark:bg-gray-800 p-4 border-r min-h-[calc(100vh-10rem)] overflow-y-auto\">\n        <h2 className=\"text-lg font-semibold mb-4\">Processing History</h2>\n        {requestHistory.length === 0 ? (\n          <p className=\"text-sm text-gray-500 dark:text-gray-400\">No processing history</p>\n        ) : (\n          <ul className=\"space-y-2\">\n            {requestHistory.map(request => (\n              <li \n                key={request.id}\n                className=\"p-2 border rounded hover:bg-gray-100 dark:hover:bg-gray-700\"\n              >\n                <div className=\"text-sm font-medium\">{request.startDate} to {request.endDate}</div>\n                <div className=\"text-xs text-gray-500 dark:text-gray-400\">{formatTimestamp(request.timestamp)}</div>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n      \n      {/* Main Content */}\n      <div className=\"flex-1 p-6 max-w-5xl\">\n        <h1 className=\"text-2xl font-bold mb-6\">Mixpanel Data Processor</h1>\n\n        {/* Data Processing Section */}\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6 mb-6\">\n          <h2 className=\"text-xl font-semibold mb-4\">Process Mixpanel Data</h2>\n          \n          <div className=\"mb-4\">\n            <p className=\"text-sm text-gray-600 dark:text-gray-300 mb-2\">\n              Last full load: {lastLoadTimestamp ? formatTimestamp(lastLoadTimestamp) : 'Never'}\n            </p>\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium mb-1\" htmlFor=\"start_date_input\">\n                Start Date (YYYY-MM-DD)<span className=\"text-red-500\"> *</span>\n              </label>\n              <input\n                type=\"text\"\n                id=\"start_date_input\"\n                value={startDateInput}\n                onChange={(e) => setStartDateInput(e.target.value)}\n                className=\"w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600\"\n                placeholder=\"e.g., 2023-05-01\"\n                required\n                disabled={isProcessing}\n              />\n              <p className=\"text-xs text-gray-500 mt-1\">\n                Data will be processed from this date until today\n              </p>\n            </div>\n\n            <div className=\"flex space-x-4\">\n              <button\n                type=\"button\"\n                onClick={handleStartProcessing}\n                disabled={isProcessing || !startDateInput}\n                className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 disabled:bg-gray-400\"\n              >\n                {isProcessing ? 'Processing...' : 'Start Processing'}\n              </button>\n\n              <div className=\"relative group\">\n                <button\n                  type=\"button\"\n                  onClick={handleContinueFromLastDate}\n                  disabled={isProcessing || isLoadingLatestDate}\n                  className=\"px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 disabled:bg-gray-400\"\n                >\n                  {isLoadingLatestDate ? 'Loading...' : 'Continue from Last Date'}\n                </button>\n                <div className=\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-3 py-2 bg-gray-800 text-white text-sm rounded opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none whitespace-nowrap z-10\">\n                  Automatically continues processing from the day after the last successfully processed date\n                </div>\n              </div>\n\n              {isProcessing && (\n                <button\n                  type=\"button\"\n                  onClick={handleCancelProcessing}\n                  className=\"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700\"\n                >\n                  Cancel Processing\n                </button>\n              )}\n\n              <div className=\"relative group\">\n                <button\n                  type=\"button\"\n                  onClick={handleResetSyncCounter}\n                  disabled={isProcessing || !lastLoadTimestamp}\n                  className=\"px-4 py-2 bg-gray-600 text-white rounded hover:bg-gray-700 disabled:bg-gray-400\"\n                >\n                  Reset Last Sync Counter\n                </button>\n                <div className=\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-3 py-2 bg-gray-800 text-white text-sm rounded opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none whitespace-nowrap z-10\">\n                  Resets the timestamp tracking when data was last processed, allowing re-processing of all dates\n                </div>\n              </div>\n\n              <div className=\"relative group\">\n                <button\n                  type=\"button\"\n                  onClick={handleRefreshData}\n                  disabled={isProcessing || isRefreshingData}\n                  className=\"px-4 py-2 bg-orange-600 text-white rounded hover:bg-orange-700 disabled:bg-gray-400\"\n                >\n                  {isRefreshingData ? 'Refreshing...' : 'Refresh Data'}\n                </button>\n                <div className=\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-3 py-2 bg-gray-800 text-white text-sm rounded opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none whitespace-nowrap z-10\">\n                  Deletes all downloaded files in data/events and data/users directories\n                </div>\n              </div>\n\n              <div className=\"relative group\">\n                <button\n                  type=\"button\"\n                  onClick={handleResetDatabase}\n                  disabled={isProcessing || isResettingDatabase}\n                  className=\"px-4 py-2 bg-red-800 text-white rounded hover:bg-red-900 disabled:bg-gray-400\"\n                >\n                  {isResettingDatabase ? 'Resetting...' : 'Reset All Data'}\n                </button>\n                <div className=\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-3 py-2 bg-gray-800 text-white text-sm rounded opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none whitespace-nowrap z-10\">\n                  Completely wipes all data from the database including events, users, and processing history\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {isProcessing && (\n            <div className=\"mt-6\">\n              <h3 className=\"text-md font-medium mb-2\">{getStageLabel()}</h3>\n              <div className=\"w-full bg-gray-200 rounded-full h-4 mb-2\">\n                <div \n                  className=\"bg-blue-600 h-4 rounded-full transition-all duration-300\" \n                  style={{ width: getProgressWidth() }}\n                ></div>\n              </div>\n              <div className=\"flex justify-between text-sm text-gray-600\">\n                <span>{processingProgress.percent}% complete</span>\n                {processingProgress.currentDate && (\n                  <span>Current date: {processingProgress.currentDate}</span>\n                )}\n              </div>\n            </div>\n          )}\n\n          {processingStatus && !processingError && !isProcessing && (\n            <div className=\"mt-4 p-3 bg-green-100 dark:bg-green-800 text-green-800 dark:text-green-100 rounded\">\n              {processingStatus}\n            </div>\n          )}\n\n          {processingError && (\n            <div className=\"mt-4 p-3 bg-red-100 dark:bg-red-800 text-red-800 dark:text-red-100 rounded\">\n              Error: {processingError}\n            </div>\n          )}\n\n          {resetDatabaseStatus && (\n            <div className=\"mt-4 p-3 bg-green-100 dark:bg-green-800 text-green-800 dark:text-green-100 rounded\">\n              {resetDatabaseStatus}\n            </div>\n          )}\n\n          {resetDatabaseError && (\n            <div className=\"mt-4 p-3 bg-red-100 dark:bg-red-800 text-red-800 dark:text-red-100 rounded\">\n              Error: {resetDatabaseError}\n            </div>\n          )}\n\n          {refreshDataStatus && (\n            <div className=\"mt-4 p-3 bg-green-100 dark:bg-green-800 text-green-800 dark:text-green-100 rounded\">\n              {refreshDataStatus}\n            </div>\n          )}\n\n          {refreshDataError && (\n            <div className=\"mt-4 p-3 bg-red-100 dark:bg-red-800 text-red-800 dark:text-red-100 rounded\">\n              Error: {refreshDataError}\n            </div>\n          )}\n\n          {continueFromLastDateError && (\n            <div className=\"mt-4 p-3 bg-red-100 dark:bg-red-800 text-red-800 dark:text-red-100 rounded\">\n              Error: {continueFromLastDateError}\n            </div>\n          )}\n        </div>\n\n        {/* Test DB Section */}\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6 mb-6\">\n          <h2 className=\"text-xl font-semibold mb-4\">Test Database</h2>\n          \n          <p className=\"mb-4 text-sm text-gray-600 dark:text-gray-300\">\n            This will find 3 random users who did the \"RC Trial started\" event and have their abi_ad_id set.\n          </p>\n\n          <button\n            type=\"button\"\n            onClick={handleTestDb}\n            disabled={isTestingDb}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 disabled:bg-gray-400\"\n          >\n            {isTestingDb ? 'Testing...' : 'Test DB'}\n          </button>\n\n          {dbTestError && (\n            <div className=\"mt-4 p-3 bg-red-100 dark:bg-red-800 text-red-800 dark:text-red-100 rounded\">\n              Error: {dbTestError}\n            </div>\n          )}\n\n          {dbTestResults && (\n            <div className=\"mt-4\">\n              <h3 className=\"text-lg font-medium mb-2\">Test Results</h3>\n              \n              {dbTestResults.map((user, index) => (\n                <div key={index} className=\"bg-gray-100 dark:bg-gray-900 p-4 rounded mb-4\">\n                  <h4 className=\"font-bold text-lg mb-2\">User {index + 1}</h4>\n                  <div className=\"grid grid-cols-2 gap-2 mb-2\">\n                    <div className=\"font-semibold\">Name:</div>\n                    <div>{user.name}</div>\n                    \n                    <div className=\"font-semibold\">Distinct ID:</div>\n                    <div>{user.distinct_id}</div>\n                    \n                    <div className=\"font-semibold\">Ad ID:</div>\n                    <div>{user.abi_ad_id}</div>\n                    \n                    <div className=\"font-semibold\">Event:</div>\n                    <div>{user.event_name}</div>\n                  </div>\n                  \n                  <div className=\"mt-2\">\n                    <div className=\"font-semibold mb-1\">Event Properties:</div>\n                    <pre className=\"bg-gray-200 dark:bg-gray-800 p-2 rounded text-xs overflow-auto max-h-60\">\n                      {JSON.stringify(user.event_properties, null, 2)}\n                    </pre>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n\n        {/* User Events Section */}\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6 mb-6\">\n          <h2 className=\"text-xl font-semibold mb-4\">User Event History</h2>\n          \n          <div className=\"mb-4\">\n            <label className=\"block text-sm font-medium mb-1\" htmlFor=\"user_id_input\">\n              User ID<span className=\"text-red-500\"> *</span>\n            </label>\n            <div className=\"flex\">\n              <input\n                type=\"text\"\n                id=\"user_id_input\"\n                value={userIdInput}\n                onChange={(e) => setUserIdInput(e.target.value)}\n                className=\"flex-1 p-2 border rounded dark:bg-gray-700 dark:border-gray-600\"\n                placeholder=\"Enter user ID or distinct ID\"\n                required\n              />\n              <button\n                type=\"button\"\n                onClick={handleSearchUserEvents}\n                disabled={isLoadingUserEvents || !userIdInput.trim()}\n                className=\"ml-2 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 disabled:bg-gray-400\"\n              >\n                {isLoadingUserEvents ? 'Loading...' : 'Search'}\n              </button>\n            </div>\n          </div>\n\n          {userEventsError && (\n            <div className=\"mt-4 p-3 bg-red-100 dark:bg-red-800 text-red-800 dark:text-red-100 rounded\">\n              Error: {userEventsError}\n            </div>\n          )}\n\n          {isLoadingUserEvents && (\n            <div className=\"flex justify-center items-center py-8\">\n              <p className=\"text-gray-500\">Loading user events...</p>\n            </div>\n          )}\n\n          {!isLoadingUserEvents && userEvents.length > 0 && (\n            <div className=\"mt-4\">\n              <h3 className=\"text-lg font-medium mb-2\">Event Timeline for User</h3>\n              \n              <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-600\">\n                  <thead className=\"bg-gray-50 dark:bg-gray-800\">\n                    <tr>\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Time</th>\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Event Name</th>\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Details</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"divide-y divide-gray-200 dark:divide-gray-600\">\n                    {userEvents.map((event, index) => (\n                      <tr key={index} className={index % 2 === 0 ? 'bg-white dark:bg-gray-700' : 'bg-gray-50 dark:bg-gray-800'}>\n                        <td className=\"px-4 py-2 text-sm text-gray-900 dark:text-gray-200\">\n                          {new Date(event.time).toLocaleString()}\n                        </td>\n                        <td className=\"px-4 py-2 text-sm text-gray-900 dark:text-gray-200\">\n                          {event.name}\n                        </td>\n                        <td className=\"px-4 py-2 text-sm text-gray-900 dark:text-gray-200\">\n                          <button\n                            className=\"text-blue-500 hover:text-blue-700\"\n                            onClick={() => {\n                              alert(JSON.stringify(event.properties, null, 2));\n                            }}\n                          >\n                            View Properties\n                          </button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          )}\n\n          {!isLoadingUserEvents && userEvents.length === 0 && userIdInput && !userEventsError && (\n            <div className=\"flex justify-center items-center py-8\">\n              <p className=\"text-gray-500\">No events found for this user</p>\n            </div>\n          )}\n        </div>\n\n        {/* Add Database Stats Section */}\n        <div className=\"mb-6 bg-white dark:bg-gray-800 rounded-lg shadow p-4\">\n          <div className=\"flex justify-between items-center mb-4\">\n            <h2 className=\"text-xl font-semibold\">Database Statistics</h2>\n            <button \n              onClick={fetchDatabaseStats} \n              className=\"px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600 text-sm\"\n              disabled={isLoadingStats}\n            >\n              {isLoadingStats ? 'Loading...' : 'Refresh'}\n            </button>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n            <div className=\"bg-gray-50 dark:bg-gray-700 p-3 rounded border border-gray-200 dark:border-gray-600\">\n              <h3 className=\"text-md font-medium mb-2\">Total Events</h3>\n              <p className=\"text-2xl font-bold text-blue-600 dark:text-blue-400\">{dbtStats.totalEvents.toLocaleString()}</p>\n            </div>\n            <div className=\"bg-gray-50 dark:bg-gray-700 p-3 rounded border border-gray-200 dark:border-gray-600\">\n              <h3 className=\"text-md font-medium mb-2\">Total Users</h3>\n              <p className=\"text-2xl font-bold text-green-600 dark:text-green-400\">{dbtStats.totalUsers.toLocaleString()}</p>\n            </div>\n          </div>\n\n          {/* Date Range Info */}\n          {dbtStats.dateRange && (dbtStats.dateRange.earliest || dbtStats.dateRange.latest) && (\n            <div className=\"mb-4 p-3 bg-blue-50 dark:bg-blue-900 rounded border border-blue-200 dark:border-blue-700\">\n              <h3 className=\"text-md font-medium mb-2 text-blue-800 dark:text-blue-200\">Data Range</h3>\n              <div className=\"text-sm text-blue-700 dark:text-blue-300\">\n                <p>Earliest Event: {dbtStats.dateRange.earliest ? new Date(dbtStats.dateRange.earliest).toLocaleString() : 'N/A'}</p>\n                <p>Latest Event: {dbtStats.dateRange.latest ? new Date(dbtStats.dateRange.latest).toLocaleString() : 'N/A'}</p>\n              </div>\n            </div>\n          )}\n\n          {/* Monthly Breakdown */}\n          {dbtStats.monthlyBreakdown && dbtStats.monthlyBreakdown.length > 0 && (\n            <div className=\"mb-4\">\n              <h3 className=\"text-md font-medium mb-2\">Monthly Breakdown</h3>\n              <div className=\"bg-white dark:bg-gray-700 border border-gray-200 dark:border-gray-600 rounded overflow-hidden\">\n                <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-600\">\n                  <thead className=\"bg-gray-50 dark:bg-gray-800\">\n                    <tr>\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Month</th>\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Events</th>\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Users</th>\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Event Types</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"divide-y divide-gray-200 dark:divide-gray-600\">\n                    {dbtStats.monthlyBreakdown.map((month, index) => (\n                      <tr key={index} className={index % 2 === 0 ? 'bg-white dark:bg-gray-700' : 'bg-gray-50 dark:bg-gray-800'}>\n                        <td className=\"px-4 py-2 text-sm text-gray-900 dark:text-gray-200 font-medium\">{month.month}</td>\n                        <td className=\"px-4 py-2 text-sm text-gray-900 dark:text-gray-200\">{month.events.toLocaleString()}</td>\n                        <td className=\"px-4 py-2 text-sm text-gray-900 dark:text-gray-200\">{month.users.toLocaleString()}</td>\n                        <td className=\"px-4 py-2 text-sm text-gray-900 dark:text-gray-200\">{month.uniqueEvents}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          )}\n\n          {/* Daily Breakdown (Last 30 Days) */}\n          {dbtStats.dailyBreakdown && dbtStats.dailyBreakdown.length > 0 && (\n            <div className=\"mb-4\">\n              <h3 className=\"text-md font-medium mb-2\">Daily Breakdown (Last 30 Days)</h3>\n              <div className=\"bg-white dark:bg-gray-700 border border-gray-200 dark:border-gray-600 rounded overflow-hidden max-h-96 overflow-y-auto\">\n                <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-600\">\n                  <thead className=\"bg-gray-50 dark:bg-gray-800 sticky top-0\">\n                    <tr>\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Date</th>\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Events</th>\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Users</th>\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Event Types</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"divide-y divide-gray-200 dark:divide-gray-600\">\n                    {dbtStats.dailyBreakdown.map((day, index) => (\n                      <tr key={index} className={index % 2 === 0 ? 'bg-white dark:bg-gray-700' : 'bg-gray-50 dark:bg-gray-800'}>\n                        <td className=\"px-4 py-2 text-sm text-gray-900 dark:text-gray-200 font-medium\">{day.date}</td>\n                        <td className=\"px-4 py-2 text-sm text-gray-900 dark:text-gray-200\">{day.events.toLocaleString()}</td>\n                        <td className=\"px-4 py-2 text-sm text-gray-900 dark:text-gray-200\">{day.users.toLocaleString()}</td>\n                        <td className=\"px-4 py-2 text-sm text-gray-900 dark:text-gray-200\">{day.uniqueEvents}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          )}\n          \n          {dbtStats.eventBreakdown && dbtStats.eventBreakdown.length > 0 && (\n            <div>\n              <h3 className=\"text-md font-medium mb-2\">Event Breakdown</h3>\n              <div className=\"bg-white dark:bg-gray-700 border border-gray-200 dark:border-gray-600 rounded overflow-hidden\">\n                <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-600\">\n                  <thead className=\"bg-gray-50 dark:bg-gray-800\">\n                    <tr>\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Event Name</th>\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Count</th>\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">Percentage</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"divide-y divide-gray-200 dark:divide-gray-600\">\n                    {dbtStats.eventBreakdown.map((event, index) => (\n                      <tr key={index} className={index % 2 === 0 ? 'bg-white dark:bg-gray-700' : 'bg-gray-50 dark:bg-gray-800'}>\n                        <td className=\"px-4 py-2 text-sm text-gray-900 dark:text-gray-200\">{event.name}</td>\n                        <td className=\"px-4 py-2 text-sm text-gray-900 dark:text-gray-200\">{event.count.toLocaleString()}</td>\n                        <td className=\"px-4 py-2 text-sm text-gray-900 dark:text-gray-200\">\n                          {((event.count / dbtStats.totalEvents) * 100).toFixed(2)}%\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}