{"ast":null,"code":"import _objectSpread from\"/Users/joshuakaufman/untitled folder 3/orchestrator/dashboard/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,Fragment,useRef,useEffect}from'react';import{ChevronDown,ChevronRight,BarChart2,Info,Layers,Table2,Search,AlignJustify,Play,Clock,Sparkles}from'lucide-react';import{AVAILABLE_COLUMNS}from'./dashboard/DashboardControls';import ROASSparkline from'./dashboard/ROASSparkline';// Pipeline Update Badge Component\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const PipelineBadge=_ref=>{let{isPipelineUpdated,className=\"\"}=_ref;if(!isPipelineUpdated)return null;return/*#__PURE__*/_jsxs(\"span\",{className:\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200 \".concat(className),children:[/*#__PURE__*/_jsx(Sparkles,{size:12,className:\"mr-1\"}),\"Pipeline\"]});};// Estimated ROAS Tooltip Component\nconst EstimatedRoasTooltip=_ref2=>{let{roas,estimatedRevenue,diffPercent,spend,colorClass,pipelineUpdatedClass}=_ref2;const[showTooltip,setShowTooltip]=useState(false);const[tooltipPosition,setTooltipPosition]=useState({x:0,y:0});const handleMouseEnter=e=>{setShowTooltip(true);const rect=e.currentTarget.getBoundingClientRect();setTooltipPosition({x:rect.left+rect.width/2,y:rect.top-10});};const handleMouseLeave=()=>{setShowTooltip(false);};const adjustedRevenue=diffPercent>0?estimatedRevenue/diffPercent:estimatedRevenue;return/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"\".concat(colorClass,\" \").concat(pipelineUpdatedClass,\" cursor-pointer hover:underline\"),onMouseEnter:handleMouseEnter,onMouseLeave:handleMouseLeave,children:formatNumber(roas,2)}),showTooltip&&/*#__PURE__*/_jsxs(\"div\",{className:\"fixed z-50 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-md shadow-lg p-3 min-w-64\",style:{left:tooltipPosition.x-128,// Center the tooltip\ntop:tooltipPosition.y-10,transform:'translateY(-100%)'},children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm font-semibold text-gray-900 dark:text-gray-100 mb-2\",children:\"Estimated ROAS Calculation\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-1 text-xs\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-gray-700 dark:text-gray-300\",children:[\"Original Est. Revenue: \",formatCurrency(estimatedRevenue)]}),diffPercent>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-gray-700 dark:text-gray-300\",children:[\"Trial Accuracy Ratio: \",formatPercentage(diffPercent),\" (Mixpanel/Meta)\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-gray-700 dark:text-gray-300\",children:[\"Adjusted Revenue: \",formatCurrency(adjustedRevenue)]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-gray-500 dark:text-gray-400 text-xs italic\",children:[\"(Revenue \\xF7 \",formatPercentage(diffPercent),\" to account for Meta accuracy)\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-gray-700 dark:text-gray-300\",children:[\"Spend: \",formatCurrency(spend)]}),/*#__PURE__*/_jsxs(\"div\",{className:\"border-t border-gray-200 dark:border-gray-600 mt-2 pt-2 font-medium\",children:[\"Est. ROAS: \",formatCurrency(adjustedRevenue),\" \\xF7 \",formatCurrency(spend),\" = \",formatNumber(roas,2)]})]})]})]});};// Accuracy Tooltip Component\nconst AccuracyTooltip=_ref3=>{let{average,breakdown,colorClass,pipelineUpdatedClass}=_ref3;const[showTooltip,setShowTooltip]=useState(false);const[tooltipPosition,setTooltipPosition]=useState({x:0,y:0});const ref=useRef(null);const handleMouseEnter=e=>{setShowTooltip(true);// Position tooltip relative to the cell\nconst rect=e.currentTarget.getBoundingClientRect();setTooltipPosition({x:rect.left+rect.width/2,y:rect.top-10});};const handleMouseLeave=()=>{setShowTooltip(false);};// Get color for accuracy level\nconst getAccuracyColor=level=>{switch(level.toLowerCase()){case'very_high':return'text-green-700';case'high':return'text-green-600';case'medium':return'text-yellow-600';case'low':return'text-orange-600';case'very_low':return'text-red-600';default:return'text-gray-600';}};const formatLevelName=level=>{return level.split('_').map(word=>word.charAt(0).toUpperCase()+word.slice(1)).join(' ');};return/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(\"span\",{ref:ref,className:\"\".concat(colorClass,\" \").concat(pipelineUpdatedClass,\" cursor-pointer hover:underline\"),onMouseEnter:handleMouseEnter,onMouseLeave:handleMouseLeave,children:average}),showTooltip&&/*#__PURE__*/_jsxs(\"div\",{className:\"fixed z-50 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-md shadow-lg p-3 min-w-48\",style:{left:tooltipPosition.x-96,// Center the tooltip (half of min-width)\ntop:tooltipPosition.y-10,transform:'translateY(-100%)'},children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm font-semibold text-gray-900 dark:text-gray-100 mb-2\",children:\"Accuracy Breakdown\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-1\",children:Object.entries(breakdown).sort((_ref4,_ref5)=>{let[,a]=_ref4;let[,b]=_ref5;return b.percentage-a.percentage;})// Sort by percentage desc\n.map(_ref6=>{let[level,data]=_ref6;return/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center text-xs\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"\".concat(getAccuracyColor(level),\" font-medium\"),children:[formatLevelName(level),\":\"]}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-gray-700 dark:text-gray-300\",children:[data.count,\" (\",data.percentage,\"%)\"]})]},level);})}),/*#__PURE__*/_jsxs(\"div\",{className:\"border-t border-gray-200 dark:border-gray-600 mt-2 pt-2 text-xs text-gray-600 dark:text-gray-400\",children:[\"Total Users: \",Object.values(breakdown).reduce((sum,data)=>sum+data.count,0)]})]})]});};// Refund Rate Tooltip Component for showing minimum default explanations\nconst RefundRateTooltip=_ref7=>{let{value,type,colorClass,pipelineUpdatedClass}=_ref7;const[showTooltip,setShowTooltip]=useState(false);const[tooltipPosition,setTooltipPosition]=useState({x:0,y:0});const isMinimum=type==='trial'?Math.abs(value-5.0)<0.01:Math.abs(value-15.0)<0.01;const minimumRate=type==='trial'?'5%':'15%';if(!isMinimum)return null;// Only show tooltip for minimum values\nconst handleMouseEnter=e=>{const rect=e.currentTarget.getBoundingClientRect();setTooltipPosition({x:rect.left+rect.width/2,y:rect.top-10});setShowTooltip(true);};const handleMouseLeave=()=>{setShowTooltip(false);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{className:\"\".concat(colorClass,\" \").concat(pipelineUpdatedClass,\" cursor-help\"),onMouseEnter:handleMouseEnter,onMouseLeave:handleMouseLeave,children:\"*\"}),showTooltip&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed z-50 bg-gray-900 text-white text-xs rounded px-2 py-1 max-w-xs\",style:{left:tooltipPosition.x,top:tooltipPosition.y,transform:'translateX(-50%) translateY(-100%)'},children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium\",children:\"Default Minimum Applied\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-1\",children:[\"This rate defaulted to \",minimumRate,\" because either there weren't enough users or the calculated rate was lower. We use this minimum to ensure reliable estimates.\"]})]})})]});};// Helper to format numbers, e.g., with commas\nconst formatNumber=function(num){let digits=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;if(num===undefined||num===null)return'N/A';return num.toLocaleString(undefined,{minimumFractionDigits:digits,maximumFractionDigits:digits});};const formatCurrency=num=>{if(num===undefined||num===null)return'N/A';return num.toLocaleString(undefined,{style:'currency',currency:'USD'});};const formatPercentage=function(num){let digits=arguments.length>1&&arguments[1]!==undefined?arguments[1]:2;if(num===undefined||num===null)return'N/A';return\"\".concat((num*100).toFixed(digits),\"%\");};// Column categorization for event priority styling based on actual dashboard columns:\n// TRIAL columns: \"Trials (Meta)\", \"Trials (Mixpanel)\", etc.\nconst TRIAL_RELATED_COLUMNS=['mixpanel_trials_started',// \"Trials (Mixpanel)\" \n'meta_trials_started',// \"Trials (Meta)\"\n'mixpanel_trials_ended',// \"Trials Ended (Mixpanel)\"\n'mixpanel_trials_in_progress',// \"Trials In Progress (Mixpanel)\"  \n'click_to_trial_rate',// \"Click to Trial Rate\"\n'mixpanel_cost_per_trial',// \"Cost per Trial (Mixpanel)\"\n'meta_cost_per_trial',// \"Cost per Trial (Meta)\"\n'trial_conversion_rate',// \"Trial Conversion Rate\" (rate of trials converting to purchases)\n'avg_trial_refund_rate',// \"Trial Refund Rate\" (rate of trial conversions that get refunded)\n'trial_accuracy_ratio'// \"Trial Accuracy Ratio\"\n];// PURCHASE columns: \"Purchases (Meta)\", \"Purchases (Mixpanel)\", etc.\nconst PURCHASE_RELATED_COLUMNS=['mixpanel_purchases',// \"Purchases (Mixpanel)\"\n'meta_purchases',// \"Purchases (Meta)\"  \n'mixpanel_cost_per_purchase',// \"Cost per Purchase (Mixpanel)\"\n'meta_cost_per_purchase',// \"Cost per Purchase (Meta)\"\n'purchase_refund_rate',// \"Purchase Refund Rate\"\n'purchase_accuracy_ratio',// \"Purchase Accuracy Ratio\"\n'mixpanel_conversions_net_refunds',// \"Net Conversions (Mixpanel)\"\n'estimated_revenue_usd',// \"Estimated Revenue\"\n'mixpanel_revenue_usd',// \"Revenue (Mixpanel)\"\n'mixpanel_refunds_usd',// \"Refunds (Mixpanel)\"\n'profit',// \"Profit\"\n'estimated_roas'// \"ROAS\"\n];// Helper to determine event priority based on Mixpanel counts\n// Compares \"Trial Started by Mixpanel\" vs \"Purchases in Mixpanel\" \nconst getEventPriority=row=>{// Compares \"Trial Started by Mixpanel\" vs \"Purchases in Mixpanel\"\nconst trialsCount=row.mixpanel_trials_started||0;// \"Trial Started by Mixpanel\"\nconst purchasesCount=row.mixpanel_purchases||0;// \"Purchases in Mixpanel\"\n// When both are zero, default to graying out purchase columns (make trials the priority)\nif(trialsCount===0&&purchasesCount===0)return'trials';// When trials > purchases, gray out purchase columns (trials are priority)\nif(trialsCount>purchasesCount)return'trials';// When purchases > trials, gray out trial columns (purchases are priority)  \nif(purchasesCount>trialsCount)return'purchases';// If they're equal and both > 0, no graying out\nreturn'equal';};// Helper to check if a column should be grayed out based on event priority\nconst shouldGrayOutColumn=(columnKey,eventPriority)=>{if(eventPriority==='equal')return false;// When trials are priority, gray out purchase-related columns\nif(eventPriority==='trials'&&PURCHASE_RELATED_COLUMNS.includes(columnKey)){return true;}// When purchases are priority, gray out trial-related columns\nif(eventPriority==='purchases'&&TRIAL_RELATED_COLUMNS.includes(columnKey)){return true;}return false;};// Helper to get column type for visual differentiation\nconst getColumnType=columnKey=>{if(TRIAL_RELATED_COLUMNS.includes(columnKey))return'trial';if(PURCHASE_RELATED_COLUMNS.includes(columnKey))return'purchase';return'neutral';};// Helper to get column background class based on type\nconst getColumnBackgroundClass=function(columnKey){let isHovered=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;const columnType=getColumnType(columnKey);if(isHovered){// Slightly stronger background on hover\nswitch(columnType){case'trial':return'bg-blue-50 dark:bg-blue-900/20';case'purchase':return'bg-green-50 dark:bg-green-900/20';default:return'';// No special hover background for neutral columns\n}}else{// Subtle background for visual differentiation\nswitch(columnType){case'trial':return'bg-blue-25 dark:bg-blue-900/10';case'purchase':return'bg-green-25 dark:bg-green-900/10';default:return'';// No background for neutral columns - normal grey\n}}};// Helper to calculate derived values for missing fields\nconst calculateDerivedValues=row=>{const calculated=_objectSpread({},row);// Calculate new fields that don't exist in the data\nif(calculated.spend&&calculated.total_trials_started&&calculated.total_trials_started>0){calculated.cost_per_trial_mixpanel=calculated.spend/calculated.total_trials_started;}if(calculated.spend&&calculated.total_conversions&&calculated.total_conversions>0){calculated.cost_per_purchase_mixpanel=calculated.spend/calculated.total_conversions;}// Trial conversion difference percentage (what percent Mixpanel trials are of Meta trials)\nif(calculated.meta_trials_started&&calculated.total_trials_started&&calculated.meta_trials_started>0){calculated.trial_conversion_diff_pct=calculated.total_trials_started/calculated.meta_trials_started;}// Profit calculation (Revenue - Spend)\nif(calculated.revenue_usd!==undefined&&calculated.spend!==undefined){calculated.profit=calculated.revenue_usd-calculated.spend;}// Estimated ROAS calculation (adjusted for Meta vs Mixpanel trial difference)\nif(calculated.estimated_revenue_usd!==undefined&&calculated.spend!==undefined&&calculated.spend>0){if(calculated.trial_conversion_diff_pct&&calculated.trial_conversion_diff_pct>0){// Adjust estimated revenue by dividing by the percentage (to scale up for Meta accuracy)\nconst adjustedRevenue=calculated.estimated_revenue_usd/calculated.trial_conversion_diff_pct;calculated.estimated_roas=adjustedRevenue/calculated.spend;}else{// Fallback to standard calculation if no diff percentage available\ncalculated.estimated_roas=calculated.estimated_revenue_usd/calculated.spend;}}return calculated;};// Field color - use normal text colors\nconst getFieldColor=(fieldName,value)=>{// Special color coding for accuracy column\nif(fieldName==='average_accuracy'&&value){switch(value.toLowerCase()){case'very high':return'text-green-700 dark:text-green-400';case'high':return'text-green-600 dark:text-green-400';case'medium':return'text-yellow-600 dark:text-yellow-400';case'low':return'text-orange-600 dark:text-orange-400';case'very low':return'text-red-600 dark:text-red-400';default:return'text-gray-600 dark:text-gray-400';}}// Use standard text colors for all other fields\nreturn'text-gray-900 dark:text-gray-100';};// Header color - use normal text colors\nconst getHeaderColor=fieldName=>{// Use standard header colors for all fields\nreturn'text-gray-700 dark:text-gray-300';};// ROAS color thresholds: <1 = Red, 1 = Yellow, >1.5 = Green\nconst roas_green_threshold=1.5;const roas_yellow_threshold=1.0;const getRoasColor=roas=>{if(roas===undefined||roas===null)return'text-gray-500 dark:text-gray-400';if(roas>roas_green_threshold)return'text-green-600 dark:text-green-400';if(roas>=roas_yellow_threshold)return'text-amber-600 dark:text-amber-400';return'text-red-600 dark:text-red-400';};export const DashboardGrid=_ref8=>{let{data=[],rowOrder=[],onRowOrderChange=null,onRowAction=()=>{},columnVisibility={},columnOrder=[],onColumnOrderChange=null,runningPipelines=new Set(),pipelineQueue=[],activePipelineCount=0,maxConcurrentPipelines=8,dashboardParams=null}=_ref8;const[expandedRows,setExpandedRows]=useState({});const[expandedBreakdowns,setExpandedBreakdowns]=useState({});// Column drag state\nconst[draggedColumn,setDraggedColumn]=useState(null);const[dragOverColumn,setDragOverColumn]=useState(null);// Row drag state\nconst[draggedRowId,setDraggedRowId]=useState(null);const[dragOverRowId,setDragOverRowId]=useState(null);// Get visible columns based on columnVisibility settings and column order\nconst getOrderedVisibleColumns=()=>{// Use column order if available, otherwise use default order\nconst orderToUse=columnOrder.length>0?columnOrder:AVAILABLE_COLUMNS.map(col=>col.key);// Map the ordered keys to column objects, filtering out non-existent columns\nconst orderedColumns=orderToUse.map(key=>AVAILABLE_COLUMNS.find(col=>col.key===key)).filter(col=>col);// Remove any undefined columns\n// Filter by visibility\nif(Object.keys(columnVisibility).length===0){// If no visibility settings loaded yet, use default visibility\nreturn orderedColumns.filter(col=>col.defaultVisible);}else{// Use explicit visibility settings\nreturn orderedColumns.filter(col=>columnVisibility[col.key]!==false);}};const visibleColumns=getOrderedVisibleColumns();// Helper function to check if a column should be visible\nconst isColumnVisible=columnKey=>{if(Object.keys(columnVisibility).length===0){// If no visibility settings loaded yet, check default\nconst column=AVAILABLE_COLUMNS.find(col=>col.key===columnKey);return column?column.defaultVisible:false;}return columnVisibility[columnKey]!==false;};// Helper function to check if a pipeline is running for a specific row\nconst isPipelineRunning=rowId=>{return runningPipelines.has(rowId);};// Helper function to check if a pipeline is queued for a specific row\nconst isPipelineQueued=rowId=>{return pipelineQueue.some(item=>item.id===rowId);};// Helper function to get pipeline status\nconst getPipelineStatus=rowId=>{if(isPipelineRunning(rowId))return'running';if(isPipelineQueued(rowId))return'queued';return'idle';};// Helper function to render a cell value with proper formatting and coloring\nconst renderCellValue=function(row,columnKey){let isPipelineUpdated=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;let eventPriority=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;const calculatedRow=calculateDerivedValues(row);let value=calculatedRow[columnKey];let formattedValue='N/A';let isEstimated=false;// Format values based on column type\nswitch(columnKey){case'spend':case'mixpanel_revenue_usd':case'estimated_revenue_usd':case'mixpanel_refunds_usd':case'profit':case'mixpanel_cost_per_trial':case'mixpanel_cost_per_purchase':case'meta_cost_per_trial':case'meta_cost_per_purchase':formattedValue=formatCurrency(value);break;case'impressions':case'clicks':case'mixpanel_trials_started':case'meta_trials_started':case'mixpanel_trials_ended':case'mixpanel_trials_in_progress':case'mixpanel_purchases':case'meta_purchases':case'mixpanel_converted_amount':case'mixpanel_conversions_net_refunds':case'total_attributed_users':formattedValue=formatNumber(value);break;case'click_to_trial_rate':case'trial_conversion_rate':case'trial_accuracy_ratio':case'purchase_accuracy_ratio':formattedValue=value!==undefined&&value!==null?\"\".concat(formatNumber(value,2),\"%\"):'N/A';break;case'avg_trial_refund_rate':if(value!==undefined&&value!==null){const roundedValue=formatNumber(value,2);const hasMinimumFlag=Math.abs(value-5.0)<0.01;formattedValue=/*#__PURE__*/_jsxs(\"span\",{children:[roundedValue,\"%\",hasMinimumFlag&&/*#__PURE__*/_jsx(RefundRateTooltip,{value:value,type:\"trial\",colorClass:\"text-blue-500\",pipelineUpdatedClass:\"\"})]});}else{formattedValue='N/A';}break;case'purchase_refund_rate':if(value!==undefined&&value!==null){const roundedValue=formatNumber(value,2);const hasMinimumFlag=Math.abs(value-15.0)<0.01;formattedValue=/*#__PURE__*/_jsxs(\"span\",{children:[roundedValue,\"%\",hasMinimumFlag&&/*#__PURE__*/_jsx(RefundRateTooltip,{value:value,type:\"purchase\",colorClass:\"text-orange-500\",pipelineUpdatedClass:\"\"})]});}else{formattedValue='N/A';}break;case'estimated_roas':formattedValue=formatNumber(value,2);break;case'segment_accuracy_average':formattedValue=value||'N/A';break;default:formattedValue=value||'N/A';}// Apply special styling for ROAS columns\nlet colorClass=getFieldColor(columnKey,value);if(columnKey==='estimated_roas'){colorClass=getRoasColor(value);}// Check if this column should be grayed out based on event priority\nif(eventPriority&&shouldGrayOutColumn(columnKey,eventPriority)){colorClass='text-gray-500 dark:text-gray-500';}// Add pipeline update styling for key metrics\nconst pipelineUpdatedClass=isPipelineUpdated&&['mixpanel_purchases','mixpanel_revenue_usd','estimated_revenue_usd','estimated_roas','mixpanel_trials_started','mixpanel_refunds_usd','segment_accuracy_average'].includes(columnKey)?'font-bold text-green-600 dark:text-green-400':'';// Special rendering for accuracy column with tooltip\nif(columnKey==='segment_accuracy_average'&&row.accuracy_breakdown){return/*#__PURE__*/_jsx(AccuracyTooltip,{average:formattedValue,breakdown:row.accuracy_breakdown,colorClass:colorClass,pipelineUpdatedClass:pipelineUpdatedClass});}// Special rendering for estimated ROAS column with sparkline\nif(columnKey==='estimated_roas'){// Extract the actual ID from the row.id field (format: \"campaign_123\", \"adset_456\", \"ad_789\")\nconst entityId=row.id?row.id.split('_')[1]:null;return/*#__PURE__*/_jsx(ROASSparkline,{entityType:row.type,entityId:entityId,currentROAS:value,conversionCount:calculatedRow.mixpanel_purchases||0,breakdown:(dashboardParams===null||dashboardParams===void 0?void 0:dashboardParams.breakdown)||'all',startDate:(dashboardParams===null||dashboardParams===void 0?void 0:dashboardParams.start_date)||'2025-04-01',endDate:(dashboardParams===null||dashboardParams===void 0?void 0:dashboardParams.end_date)||'2025-04-10'});}return/*#__PURE__*/_jsxs(\"span\",{className:\"\".concat(colorClass,\" \").concat(pipelineUpdatedClass),children:[formattedValue,isEstimated&&/*#__PURE__*/_jsx(\"span\",{className:\"ml-1 text-xs\",children:\"*\"})]});};// Simple column drag handlers\nconst handleColumnDragStart=(e,columnKey)=>{setDraggedColumn(columnKey);e.dataTransfer.effectAllowed='move';e.dataTransfer.setData('text/plain',columnKey);// Add visual feedback\ne.target.style.opacity='0.5';};const handleColumnDragOver=e=>{e.preventDefault();e.dataTransfer.dropEffect='move';};const handleColumnDragEnter=(e,columnKey)=>{e.preventDefault();if(draggedColumn&&draggedColumn!==columnKey){setDragOverColumn(columnKey);}};const handleColumnDragLeave=e=>{e.preventDefault();// Only clear if we're actually leaving the column\nif(!e.currentTarget.contains(e.relatedTarget)){setDragOverColumn(null);}};const handleColumnDrop=(e,targetColumnKey)=>{e.preventDefault();if(!draggedColumn||draggedColumn===targetColumnKey){handleColumnDragEnd(e);return;}// Get the visible columns order\nconst visibleColumnKeys=visibleColumns.slice(1).map(col=>col.key);const draggedIndex=visibleColumnKeys.indexOf(draggedColumn);const targetIndex=visibleColumnKeys.indexOf(targetColumnKey);if(draggedIndex===-1||targetIndex===-1){handleColumnDragEnd(e);return;}// Create new visible order\nconst newVisibleOrder=[...visibleColumnKeys];const[movedColumn]=newVisibleOrder.splice(draggedIndex,1);newVisibleOrder.splice(targetIndex,0,movedColumn);// Reconstruct full column order\nconst fullOrder=columnOrder.length>0?[...columnOrder]:AVAILABLE_COLUMNS.map(col=>col.key);const newFullOrder=['name'];// Always keep name first\n// Add the reordered visible columns\nnewVisibleOrder.forEach(key=>{if(!newFullOrder.includes(key)){newFullOrder.push(key);}});// Add any remaining columns that aren't visible\nfullOrder.forEach(key=>{if(!newFullOrder.includes(key)){newFullOrder.push(key);}});console.log('🔄 Column drag reorder:',{dragged:draggedColumn,target:targetColumnKey,newOrder:newFullOrder});if(onColumnOrderChange){onColumnOrderChange(newFullOrder);}handleColumnDragEnd(e);};const handleColumnDragEnd=e=>{// Reset visual feedback\nif(e.target){e.target.style.opacity='';}setDraggedColumn(null);setDragOverColumn(null);};// Row drag handlers\nconst handleRowDragStart=(e,id)=>{setDraggedRowId(id);e.dataTransfer.effectAllowed='move';e.dataTransfer.setDragImage(new Image(),0,0);// hide ghost for cleaner UX\n};const handleRowDragEnter=(e,id)=>{e.preventDefault();if(id!==dragOverRowId)setDragOverRowId(id);};const handleRowDrop=(e,targetId)=>{e.preventDefault();if(!draggedRowId||draggedRowId===targetId)return;const newOrder=[...rowOrder];const from=newOrder.indexOf(draggedRowId);const to=newOrder.indexOf(targetId);newOrder.splice(to,0,newOrder.splice(from,1)[0]);onRowOrderChange===null||onRowOrderChange===void 0?void 0:onRowOrderChange(newOrder);cleanupRowDrag();};const handleRowDragEnd=cleanupRowDrag;function cleanupRowDrag(){setDraggedRowId(null);setDragOverRowId(null);}const toggleExpand=id=>{setExpandedRows(prev=>_objectSpread(_objectSpread({},prev),{},{[id]:!prev[id]}));};const toggleBreakdown=id=>{setExpandedBreakdowns(prev=>_objectSpread(_objectSpread({},prev),{},{[id]:!prev[id]}));};const expandAllRows=()=>{const newExpandedRows={};const processRows=rows=>{rows.forEach(row=>{newExpandedRows[row.id]=true;if(row.children){processRows(row.children);}});};processRows(data);setExpandedRows(newExpandedRows);};const collapseAllRows=()=>{setExpandedRows({});};const expandAllBreakdowns=()=>{const newExpandedBreakdowns={};const processRows=rows=>{rows.forEach(row=>{if(row.breakdowns&&row.breakdowns.length>0){newExpandedBreakdowns[row.id]=true;}if(row.children){processRows(row.children);}});};processRows(data);setExpandedBreakdowns(newExpandedBreakdowns);};const collapseAllBreakdowns=()=>{setExpandedBreakdowns({});};const renderAllBreakdownRows=(row,level)=>{const breakdownNodes=[];if(!row.breakdowns)return breakdownNodes;row.breakdowns.forEach(breakdown=>{breakdownNodes.push(/*#__PURE__*/_jsxs(\"tr\",{className:\"border-b border-gray-200 dark:border-gray-700 bg-gray-50/50 dark:bg-gray-900/50\",children:[/*#__PURE__*/_jsx(\"td\",{className:\"sticky left-0 px-3 py-1 whitespace-nowrap bg-gray-50/50 dark:bg-gray-900/50 z-10\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"opacity-0 w-8\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{paddingLeft:\"\".concat((level+1)*20,\"px\")},className:\"text-xs font-medium text-gray-500 dark:text-gray-400\",children:breakdown.type.charAt(0).toUpperCase()+breakdown.type.slice(1)})]})}),visibleColumns.slice(1).map(column=>/*#__PURE__*/_jsx(\"td\",{colSpan:1},column.key))]},\"\".concat(row.id,\"-\").concat(breakdown.type,\"-header\")));breakdown.values.forEach((value,index)=>{const calculatedValue=calculateDerivedValues(value);breakdownNodes.push(/*#__PURE__*/_jsxs(\"tr\",{className:\"border-b border-gray-200 dark:border-gray-700 bg-gray-50/30 dark:bg-gray-900/30 text-xs\",children:[/*#__PURE__*/_jsx(\"td\",{className:\"sticky left-0 px-3 py-1 whitespace-nowrap bg-gray-50/30 dark:bg-gray-900/30 z-10\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"opacity-0 w-8\"}),\" \",/*#__PURE__*/_jsx(\"span\",{style:{paddingLeft:\"\".concat((level+1)*20+12,\"px\")},className:\"text-gray-500 italic\",children:value.name})]})}),visibleColumns.slice(1).map(column=>{if(column.key==='campaign_name'||column.key==='adset_name'){return/*#__PURE__*/_jsx(\"td\",{className:\"px-3 py-1\"},column.key);}return/*#__PURE__*/_jsx(\"td\",{className:\"px-3 py-1 whitespace-nowrap text-right\",children:renderCellValue(calculatedValue,column.key,false,getEventPriority(calculatedValue))},column.key);})]},\"\".concat(row.id,\"-\").concat(breakdown.type,\"-\").concat(index)));});});return breakdownNodes;};const renderRow=(row,level)=>{const isExpanded=!!expandedRows[row.id];const isBreakdownExpanded=!!expandedBreakdowns[row.id];const rowNodes=[];// Check if this row has been updated with pipeline data\nconst isPipelineUpdated=row._pipelineUpdated;const pipelineTimestamp=row._pipelineTimestamp;const calculatedRow=calculateDerivedValues(row);// Determine event priority\nconst eventPriority=getEventPriority(row);rowNodes.push(/*#__PURE__*/_jsxs(\"tr\",{draggable:level===0,onDragStart:e=>handleRowDragStart(e,row.id),onDragEnter:e=>handleRowDragEnter(e,row.id),onDragOver:e=>e.preventDefault(),onDrop:e=>handleRowDrop(e,row.id),onDragEnd:handleRowDragEnd,className:\"border-b border-gray-200 dark:border-gray-700 \".concat(level===0?'bg-gray-50 dark:bg-gray-800 font-semibold':level===1?'bg-white dark:bg-gray-700 text-gray-800 dark:text-gray-200':'bg-gray-100 dark:bg-gray-600 text-gray-800 dark:text-gray-200',\" \").concat(isPipelineUpdated||row._pipelineUpdated?'ring-2 ring-green-400 bg-green-50 dark:bg-green-900/20':'',\" \").concat(draggedRowId===row.id?'opacity-50':'',\" \").concat(dragOverRowId===row.id&&draggedRowId!==row.id?'ring-2 ring-blue-400':''),children:[/*#__PURE__*/_jsx(\"td\",{className:\"sticky left-0 px-3 py-2 whitespace-nowrap z-10 \".concat(level===0?isPipelineUpdated||row._pipelineUpdated?'bg-green-50 dark:bg-green-900/20':'bg-gray-50 dark:bg-gray-800':level===1?isPipelineUpdated||row._pipelineUpdated?'bg-green-50 dark:bg-green-900/20':'bg-white dark:bg-gray-700':isPipelineUpdated||row._pipelineUpdated?'bg-green-50 dark:bg-green-900/20':'bg-gray-100 dark:bg-gray-600'),children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>onRowAction('graph',row),className:\"mr-2 p-1 hover:text-blue-500\",title:\"View Chart\",children:/*#__PURE__*/_jsx(BarChart2,{size:16})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>onRowAction('debug',row),className:\"mr-2 p-1 hover:text-orange-500\",title:\"Debug Info\",children:/*#__PURE__*/_jsx(Info,{size:16})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>onRowAction('pipeline',row),disabled:isPipelineRunning(row.id)||isPipelineQueued(row.id),className:\"mr-2 p-1 \".concat(isPipelineRunning(row.id)?'text-green-500 cursor-not-allowed':isPipelineQueued(row.id)?'text-yellow-500 cursor-not-allowed':'hover:text-green-500'),title:isPipelineRunning(row.id)?'Pipeline Running...':isPipelineQueued(row.id)?'Pipeline Queued...':'Run Pipeline',children:isPipelineRunning(row.id)?/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-4 w-4 border-b-2 border-green-500\"}):isPipelineQueued(row.id)?/*#__PURE__*/_jsx(\"div\",{className:\"animate-pulse rounded-full h-4 w-4 border-2 border-yellow-500 bg-yellow-200\"}):/*#__PURE__*/_jsx(Play,{size:16})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>onRowAction('timeline',row),className:\"mr-2 p-1 hover:text-purple-500\",title:\"View Timeline\",children:/*#__PURE__*/_jsx(Clock,{size:16})}),/*#__PURE__*/_jsxs(\"span\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"span\",{style:{paddingLeft:\"\".concat(level*20,\"px\")},children:row.children&&row.children.length>0?/*#__PURE__*/_jsx(\"button\",{onClick:()=>toggleExpand(row.id),className:\"mr-1 p-1\",children:isExpanded?/*#__PURE__*/_jsx(ChevronDown,{size:16}):/*#__PURE__*/_jsx(ChevronRight,{size:16})}):/*#__PURE__*/_jsx(\"span\",{className:\"inline-block w-8\"})}),row.breakdowns&&row.breakdowns.length>0&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>toggleBreakdown(row.id),className:\"mr-2 p-1 rounded \".concat(isBreakdownExpanded?'text-blue-500 bg-blue-100 dark:bg-blue-900/30':'text-gray-400 hover:text-blue-400'),title:\"Toggle breakdowns\",children:/*#__PURE__*/_jsx(Search,{size:14})}),(isPipelineUpdated||row._pipelineUpdated)&&/*#__PURE__*/_jsx(PipelineBadge,{isPipelineUpdated:true,className:\"mr-2\"}),isPipelineRunning(row.id)&&/*#__PURE__*/_jsx(\"span\",{className:\"mr-2 px-2 py-1 bg-blue-100 dark:bg-blue-800 text-blue-800 dark:text-blue-200 text-xs rounded-full animate-pulse\",children:\"\\uD83D\\uDD04 Running\"}),isPipelineQueued(row.id)&&/*#__PURE__*/_jsx(\"span\",{className:\"mr-2 px-2 py-1 bg-yellow-100 dark:bg-yellow-800 text-yellow-800 dark:text-yellow-200 text-xs rounded-full animate-pulse\",children:\"\\u23F3 Queued\"}),/*#__PURE__*/_jsx(\"span\",{className:\"\".concat(level===0?'text-gray-900 dark:text-gray-100':level===1?'text-gray-800 dark:text-gray-200':'text-gray-700 dark:text-gray-100'),children:level===0?row.name||row.campaign_name:level===1?row.name||row.adset_name:row.name||row.ad_name})]})]})}),visibleColumns.slice(1).map(column=>{// Special handling for campaign/adset name columns based on level\nif(column.key==='campaign_name'){if(level>0){return/*#__PURE__*/_jsx(\"td\",{className:\"px-3 py-2 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\",children:row.campaign_name},column.key);}else{return/*#__PURE__*/_jsx(\"td\",{className:\"px-3 py-2\"},column.key);}}if(column.key==='adset_name'){if(level>1){return/*#__PURE__*/_jsx(\"td\",{className:\"px-3 py-2 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\",children:row.adset_name},column.key);}else{return/*#__PURE__*/_jsx(\"td\",{className:\"px-3 py-2\"},column.key);}}// Regular data columns\nconst fieldColor=getFieldColor(column.key,calculatedRow[column.key]);const isRoasColumn=column.key==='roas'||column.key==='estimated_roas';const roasColor=isRoasColumn?getRoasColor(calculatedRow[column.key]):'';const finalColor=isRoasColumn?roasColor:fieldColor;const pipelineHighlight=(isPipelineUpdated||row._pipelineUpdated)&&['total_conversions','revenue_usd','estimated_conversions','estimated_revenue_usd','roas','estimated_roas','total_trials_started','total_refunds_usd','total_converted_amount_mixpanel','mixpanel_trials','mixpanel_purchases','estimated_roas','profit'].includes(column.key)?'font-bold text-green-600 dark:text-green-400':'';// Check if the column should be grayed out based on event priority\nconst shouldGrayOut=shouldGrayOutColumn(column.key,eventPriority);const grayedOutColor=shouldGrayOut?'text-gray-500 dark:text-gray-500':finalColor;// Get column background class for visual differentiation\nconst columnBackgroundClass=getColumnBackgroundClass(column.key);return/*#__PURE__*/_jsx(\"td\",{className:\"px-3 py-2 whitespace-nowrap text-right \".concat(grayedOutColor,\" \").concat(pipelineHighlight,\" \").concat(isRoasColumn?'font-medium':'',\" \").concat(columnBackgroundClass),children:renderCellValue(calculatedRow,column.key,isPipelineUpdated,eventPriority)},column.key);})]},row.id));if(isBreakdownExpanded&&row.breakdowns){rowNodes.push(...renderAllBreakdownRows(row,level));}if(isExpanded&&row.children){row.children.forEach(childRow=>{rowNodes.push(...renderRow(childRow,level+1));});}return rowNodes;};if(!data||data.length===0){return/*#__PURE__*/_jsx(\"div\",{className:\"p-4 text-center text-gray-500 dark:text-gray-400\",children:\"No data available.\"});}const orderedData=rowOrder.length?rowOrder.map(id=>data.find(r=>r.id===id)).filter(Boolean):data;const allRows=orderedData.reduce((acc,campaign)=>acc.concat(renderRow(campaign,0)),[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"shadow-soft rounded-2xl\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800 px-4 py-2 flex space-x-4 border-b border-gray-200 dark:border-gray-700\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"inline-flex rounded-md shadow-sm\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:expandAllRows,className:\"px-3 py-1.5 text-xs font-medium bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-200 rounded-l-lg border border-gray-300 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600 flex items-center\",children:[/*#__PURE__*/_jsx(Layers,{size:14,className:\"mr-1\"}),\" Expand All\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:collapseAllRows,className:\"px-3 py-1.5 text-xs font-medium bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-200 rounded-r-lg border border-l-0 border-gray-300 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600 flex items-center\",children:[/*#__PURE__*/_jsx(Table2,{size:14,className:\"mr-1\"}),\" Collapse All\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"inline-flex rounded-md shadow-sm\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:expandAllBreakdowns,className:\"px-3 py-1.5 text-xs font-medium bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-200 rounded-l-lg border border-gray-300 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600 flex items-center\",children:[/*#__PURE__*/_jsx(Search,{size:14,className:\"mr-1\"}),\" Show Breakdowns\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:collapseAllBreakdowns,className:\"px-3 py-1.5 text-xs font-medium bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-200 rounded-r-lg border border-l-0 border-gray-300 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600 flex items-center\",children:[/*#__PURE__*/_jsx(AlignJustify,{size:14,className:\"mr-1\"}),\" Hide Breakdowns\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-4 ml-auto text-xs\",children:[(runningPipelines.size>0||pipelineQueue.length>0)&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[runningPipelines.size>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center bg-blue-100 dark:bg-blue-900 px-2 py-1 rounded-full\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-3 w-3 border-b border-blue-600 dark:border-blue-400 mr-2\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-blue-800 dark:text-blue-200 font-medium\",children:[runningPipelines.size,\" active\"]})]}),pipelineQueue.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center bg-yellow-100 dark:bg-yellow-900 px-2 py-1 rounded-full\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-pulse rounded-full h-3 w-3 bg-yellow-600 dark:bg-yellow-400 mr-2\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-yellow-800 dark:text-yellow-200 font-medium\",children:[pipelineQueue.length,\" queued\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-gray-500 dark:text-gray-400 text-xs\",children:[\"(\",activePipelineCount,\"/\",maxConcurrentPipelines,\" concurrent)\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-green-600 dark:text-green-400 mr-1\",children:\"\\u2728\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-600 dark:text-gray-400\",children:\"Pipeline Enhanced\"})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full divide-y divide-gray-200 dark:divide-gray-700 text-sm\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-gray-100 dark:bg-gray-800\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{scope:\"col\",className:\"sticky left-0 px-3 py-3 text-left text-xs font-medium uppercase tracking-wider bg-gray-100 dark:bg-gray-800 z-20\",children:\"Name\"}),visibleColumns.slice(1).map(column=>{const columnType=getColumnType(column.key);const backgroundClass=getColumnBackgroundClass(column.key,dragOverColumn===column.key);return/*#__PURE__*/_jsx(\"th\",{scope:\"col\",draggable:!column.alwaysVisible,onDragStart:e=>handleColumnDragStart(e,column.key),onDragOver:handleColumnDragOver,onDragEnter:e=>handleColumnDragEnter(e,column.key),onDragLeave:handleColumnDragLeave,onDrop:e=>handleColumnDrop(e,column.key),onDragEnd:handleColumnDragEnd,className:\"px-3 py-3 text-\".concat(column.key==='campaign_name'||column.key==='adset_name'?'left':'right',\" text-xs font-medium uppercase tracking-wider \").concat(getHeaderColor(column.key),\" \").concat(backgroundClass,\"\\n                      \").concat(!column.alwaysVisible?'cursor-move select-none hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors duration-150':'',\" \\n                      \").concat(dragOverColumn===column.key&&draggedColumn!==column.key?'bg-blue-100 dark:bg-blue-900 border-2 border-blue-300 dark:border-blue-600':'',\"\\n                      \").concat(columnType==='trial'?'border-l-2 border-blue-200 dark:border-blue-800':'',\"\\n                      \").concat(columnType==='purchase'?'border-l-2 border-green-200 dark:border-green-800':''),title:!column.alwaysVisible?\"Drag to reorder \\\"\".concat(column.label,\"\\\" column\"):'',children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{children:column.label}),!column.alwaysVisible&&/*#__PURE__*/_jsx(\"span\",{className:\"ml-1 text-gray-400 dark:text-gray-500 text-lg leading-none hover:text-gray-600 dark:hover:text-gray-300 transition-colors duration-150\",style:{transform:'rotate(90deg)'},children:\"\\u22EE\\u22EE\"})]})},column.key);})]})}),/*#__PURE__*/_jsx(\"tbody\",{className:\"bg-white dark:bg-gray-900 divide-y divide-gray-200 dark:divide-gray-700\",children:allRows.map(row=>/*#__PURE__*/_jsx(Fragment,{children:row},row.key))})]})})]});};","map":{"version":3,"names":["React","useState","Fragment","useRef","useEffect","ChevronDown","ChevronRight","BarChart2","Info","Layers","Table2","Search","AlignJustify","Play","Clock","Sparkles","AVAILABLE_COLUMNS","ROASSparkline","jsx","_jsx","jsxs","_jsxs","_Fragment","PipelineBadge","_ref","isPipelineUpdated","className","concat","children","size","EstimatedRoasTooltip","_ref2","roas","estimatedRevenue","diffPercent","spend","colorClass","pipelineUpdatedClass","showTooltip","setShowTooltip","tooltipPosition","setTooltipPosition","x","y","handleMouseEnter","e","rect","currentTarget","getBoundingClientRect","left","width","top","handleMouseLeave","adjustedRevenue","onMouseEnter","onMouseLeave","formatNumber","style","transform","formatCurrency","formatPercentage","AccuracyTooltip","_ref3","average","breakdown","ref","getAccuracyColor","level","toLowerCase","formatLevelName","split","map","word","charAt","toUpperCase","slice","join","Object","entries","sort","_ref4","_ref5","a","b","percentage","_ref6","data","count","values","reduce","sum","RefundRateTooltip","_ref7","value","type","isMinimum","Math","abs","minimumRate","num","digits","arguments","length","undefined","toLocaleString","minimumFractionDigits","maximumFractionDigits","currency","toFixed","TRIAL_RELATED_COLUMNS","PURCHASE_RELATED_COLUMNS","getEventPriority","row","trialsCount","mixpanel_trials_started","purchasesCount","mixpanel_purchases","shouldGrayOutColumn","columnKey","eventPriority","includes","getColumnType","getColumnBackgroundClass","isHovered","columnType","calculateDerivedValues","calculated","_objectSpread","total_trials_started","cost_per_trial_mixpanel","total_conversions","cost_per_purchase_mixpanel","meta_trials_started","trial_conversion_diff_pct","revenue_usd","profit","estimated_revenue_usd","estimated_roas","getFieldColor","fieldName","getHeaderColor","roas_green_threshold","roas_yellow_threshold","getRoasColor","DashboardGrid","_ref8","rowOrder","onRowOrderChange","onRowAction","columnVisibility","columnOrder","onColumnOrderChange","runningPipelines","Set","pipelineQueue","activePipelineCount","maxConcurrentPipelines","dashboardParams","expandedRows","setExpandedRows","expandedBreakdowns","setExpandedBreakdowns","draggedColumn","setDraggedColumn","dragOverColumn","setDragOverColumn","draggedRowId","setDraggedRowId","dragOverRowId","setDragOverRowId","getOrderedVisibleColumns","orderToUse","col","key","orderedColumns","find","filter","keys","defaultVisible","visibleColumns","isColumnVisible","column","isPipelineRunning","rowId","has","isPipelineQueued","some","item","id","getPipelineStatus","renderCellValue","calculatedRow","formattedValue","isEstimated","roundedValue","hasMinimumFlag","accuracy_breakdown","entityId","entityType","currentROAS","conversionCount","startDate","start_date","endDate","end_date","handleColumnDragStart","dataTransfer","effectAllowed","setData","target","opacity","handleColumnDragOver","preventDefault","dropEffect","handleColumnDragEnter","handleColumnDragLeave","contains","relatedTarget","handleColumnDrop","targetColumnKey","handleColumnDragEnd","visibleColumnKeys","draggedIndex","indexOf","targetIndex","newVisibleOrder","movedColumn","splice","fullOrder","newFullOrder","forEach","push","console","log","dragged","newOrder","handleRowDragStart","setDragImage","Image","handleRowDragEnter","handleRowDrop","targetId","from","to","cleanupRowDrag","handleRowDragEnd","toggleExpand","prev","toggleBreakdown","expandAllRows","newExpandedRows","processRows","rows","collapseAllRows","expandAllBreakdowns","newExpandedBreakdowns","breakdowns","collapseAllBreakdowns","renderAllBreakdownRows","breakdownNodes","paddingLeft","colSpan","index","calculatedValue","name","renderRow","isExpanded","isBreakdownExpanded","rowNodes","_pipelineUpdated","pipelineTimestamp","_pipelineTimestamp","draggable","onDragStart","onDragEnter","onDragOver","onDrop","onDragEnd","onClick","title","disabled","campaign_name","adset_name","ad_name","fieldColor","isRoasColumn","roasColor","finalColor","pipelineHighlight","shouldGrayOut","grayedOutColor","columnBackgroundClass","childRow","orderedData","r","Boolean","allRows","acc","campaign","scope","backgroundClass","alwaysVisible","onDragLeave","label"],"sources":["/Users/joshuakaufman/untitled folder 3/orchestrator/dashboard/client/src/components/DashboardGrid.js"],"sourcesContent":["import React, { useState, Fragment, useRef, useEffect } from 'react';\nimport { ChevronDown, ChevronRight, BarChart2, Info, Layers, Table2, Search, AlignJustify, Play, Clock, Sparkles } from 'lucide-react';\nimport { AVAILABLE_COLUMNS } from './dashboard/DashboardControls';\nimport ROASSparkline from './dashboard/ROASSparkline';\n\n// Pipeline Update Badge Component\nconst PipelineBadge = ({ isPipelineUpdated, className = \"\" }) => {\n  if (!isPipelineUpdated) return null;\n  \n  return (\n    <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200 ${className}`}>\n      <Sparkles size={12} className=\"mr-1\" />\n      Pipeline\n    </span>\n  );\n};\n\n// Estimated ROAS Tooltip Component\nconst EstimatedRoasTooltip = ({ roas, estimatedRevenue, diffPercent, spend, colorClass, pipelineUpdatedClass }) => {\n  const [showTooltip, setShowTooltip] = useState(false);\n  const [tooltipPosition, setTooltipPosition] = useState({ x: 0, y: 0 });\n\n  const handleMouseEnter = (e) => {\n    setShowTooltip(true);\n    const rect = e.currentTarget.getBoundingClientRect();\n    setTooltipPosition({\n      x: rect.left + rect.width / 2,\n      y: rect.top - 10\n    });\n  };\n\n  const handleMouseLeave = () => {\n    setShowTooltip(false);\n  };\n\n  const adjustedRevenue = diffPercent > 0 ? estimatedRevenue / diffPercent : estimatedRevenue;\n\n  return (\n    <div className=\"relative\">\n      <span \n        className={`${colorClass} ${pipelineUpdatedClass} cursor-pointer hover:underline`}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        {formatNumber(roas, 2)}\n      </span>\n      \n      {showTooltip && (\n        <div \n          className=\"fixed z-50 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-md shadow-lg p-3 min-w-64\"\n          style={{\n            left: tooltipPosition.x - 128, // Center the tooltip\n            top: tooltipPosition.y - 10,\n            transform: 'translateY(-100%)'\n          }}\n        >\n          <div className=\"text-sm font-semibold text-gray-900 dark:text-gray-100 mb-2\">\n            Estimated ROAS Calculation\n          </div>\n          <div className=\"space-y-1 text-xs\">\n            <div className=\"text-gray-700 dark:text-gray-300\">\n              Original Est. Revenue: {formatCurrency(estimatedRevenue)}\n            </div>\n            {diffPercent > 0 && (\n              <>\n                <div className=\"text-gray-700 dark:text-gray-300\">\n                  Trial Accuracy Ratio: {formatPercentage(diffPercent)} (Mixpanel/Meta)\n                </div>\n                <div className=\"text-gray-700 dark:text-gray-300\">\n                  Adjusted Revenue: {formatCurrency(adjustedRevenue)}\n                </div>\n                <div className=\"text-gray-500 dark:text-gray-400 text-xs italic\">\n                  (Revenue ÷ {formatPercentage(diffPercent)} to account for Meta accuracy)\n                </div>\n              </>\n            )}\n            <div className=\"text-gray-700 dark:text-gray-300\">\n              Spend: {formatCurrency(spend)}\n            </div>\n            <div className=\"border-t border-gray-200 dark:border-gray-600 mt-2 pt-2 font-medium\">\n              Est. ROAS: {formatCurrency(adjustedRevenue)} ÷ {formatCurrency(spend)} = {formatNumber(roas, 2)}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Accuracy Tooltip Component\nconst AccuracyTooltip = ({ average, breakdown, colorClass, pipelineUpdatedClass }) => {\n  const [showTooltip, setShowTooltip] = useState(false);\n  const [tooltipPosition, setTooltipPosition] = useState({ x: 0, y: 0 });\n  const ref = useRef(null);\n\n  const handleMouseEnter = (e) => {\n    setShowTooltip(true);\n    // Position tooltip relative to the cell\n    const rect = e.currentTarget.getBoundingClientRect();\n    setTooltipPosition({\n      x: rect.left + rect.width / 2,\n      y: rect.top - 10\n    });\n  };\n\n  const handleMouseLeave = () => {\n    setShowTooltip(false);\n  };\n\n  // Get color for accuracy level\n  const getAccuracyColor = (level) => {\n    switch (level.toLowerCase()) {\n      case 'very_high': return 'text-green-700';\n      case 'high': return 'text-green-600';\n      case 'medium': return 'text-yellow-600';\n      case 'low': return 'text-orange-600';\n      case 'very_low': return 'text-red-600';\n      default: return 'text-gray-600';\n    }\n  };\n\n  const formatLevelName = (level) => {\n    return level.split('_').map(word => \n      word.charAt(0).toUpperCase() + word.slice(1)\n    ).join(' ');\n  };\n\n  return (\n    <div className=\"relative\">\n      <span \n        ref={ref}\n        className={`${colorClass} ${pipelineUpdatedClass} cursor-pointer hover:underline`}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        {average}\n      </span>\n      \n      {showTooltip && (\n        <div \n          className=\"fixed z-50 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-md shadow-lg p-3 min-w-48\"\n          style={{\n            left: tooltipPosition.x - 96, // Center the tooltip (half of min-width)\n            top: tooltipPosition.y - 10,\n            transform: 'translateY(-100%)'\n          }}\n        >\n          <div className=\"text-sm font-semibold text-gray-900 dark:text-gray-100 mb-2\">\n            Accuracy Breakdown\n          </div>\n          <div className=\"space-y-1\">\n            {Object.entries(breakdown)\n              .sort(([,a], [,b]) => b.percentage - a.percentage) // Sort by percentage desc\n              .map(([level, data]) => (\n                <div key={level} className=\"flex justify-between items-center text-xs\">\n                  <span className={`${getAccuracyColor(level)} font-medium`}>\n                    {formatLevelName(level)}:\n                  </span>\n                  <span className=\"text-gray-700 dark:text-gray-300\">\n                    {data.count} ({data.percentage}%)\n                  </span>\n                </div>\n              ))}\n          </div>\n          <div className=\"border-t border-gray-200 dark:border-gray-600 mt-2 pt-2 text-xs text-gray-600 dark:text-gray-400\">\n            Total Users: {Object.values(breakdown).reduce((sum, data) => sum + data.count, 0)}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Refund Rate Tooltip Component for showing minimum default explanations\nconst RefundRateTooltip = ({ value, type, colorClass, pipelineUpdatedClass }) => {\n  const [showTooltip, setShowTooltip] = useState(false);\n  const [tooltipPosition, setTooltipPosition] = useState({ x: 0, y: 0 });\n  \n  const isMinimum = type === 'trial' ? Math.abs(value - 5.0) < 0.01 : Math.abs(value - 15.0) < 0.01;\n  const minimumRate = type === 'trial' ? '5%' : '15%';\n  \n  if (!isMinimum) return null; // Only show tooltip for minimum values\n\n  const handleMouseEnter = (e) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    setTooltipPosition({\n      x: rect.left + rect.width / 2,\n      y: rect.top - 10\n    });\n    setShowTooltip(true);\n  };\n\n  const handleMouseLeave = () => {\n    setShowTooltip(false);\n  };\n\n  return (\n    <>\n      <span\n        className={`${colorClass} ${pipelineUpdatedClass} cursor-help`}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        *\n      </span>\n      {showTooltip && (\n        <div\n          className=\"fixed z-50 bg-gray-900 text-white text-xs rounded px-2 py-1 max-w-xs\"\n          style={{\n            left: tooltipPosition.x,\n            top: tooltipPosition.y,\n            transform: 'translateX(-50%) translateY(-100%)'\n          }}\n        >\n          <div className=\"text-center\">\n            <div className=\"font-medium\">Default Minimum Applied</div>\n            <div className=\"mt-1\">\n              This rate defaulted to {minimumRate} because either there weren't enough users \n              or the calculated rate was lower. We use this minimum to ensure reliable estimates.\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\n// Helper to format numbers, e.g., with commas\nconst formatNumber = (num, digits = 0) => {\n  if (num === undefined || num === null) return 'N/A';\n  return num.toLocaleString(undefined, { minimumFractionDigits: digits, maximumFractionDigits: digits });\n};\n\nconst formatCurrency = (num) => {\n  if (num === undefined || num === null) return 'N/A';\n  return num.toLocaleString(undefined, { style: 'currency', currency: 'USD' });\n};\n\nconst formatPercentage = (num, digits = 2) => {\n  if (num === undefined || num === null) return 'N/A';\n  return `${(num * 100).toFixed(digits)}%`;\n};\n\n// Column categorization for event priority styling based on actual dashboard columns:\n// TRIAL columns: \"Trials (Meta)\", \"Trials (Mixpanel)\", etc.\nconst TRIAL_RELATED_COLUMNS = [\n  'mixpanel_trials_started',    // \"Trials (Mixpanel)\" \n  'meta_trials_started',        // \"Trials (Meta)\"\n  'mixpanel_trials_ended',      // \"Trials Ended (Mixpanel)\"\n  'mixpanel_trials_in_progress', // \"Trials In Progress (Mixpanel)\"  \n  'click_to_trial_rate',        // \"Click to Trial Rate\"\n  'mixpanel_cost_per_trial',    // \"Cost per Trial (Mixpanel)\"\n  'meta_cost_per_trial',        // \"Cost per Trial (Meta)\"\n  'trial_conversion_rate',      // \"Trial Conversion Rate\" (rate of trials converting to purchases)\n  'avg_trial_refund_rate',      // \"Trial Refund Rate\" (rate of trial conversions that get refunded)\n  'trial_accuracy_ratio'        // \"Trial Accuracy Ratio\"\n];\n\n// PURCHASE columns: \"Purchases (Meta)\", \"Purchases (Mixpanel)\", etc.\nconst PURCHASE_RELATED_COLUMNS = [\n  'mixpanel_purchases',         // \"Purchases (Mixpanel)\"\n  'meta_purchases',             // \"Purchases (Meta)\"  \n  'mixpanel_cost_per_purchase', // \"Cost per Purchase (Mixpanel)\"\n  'meta_cost_per_purchase',     // \"Cost per Purchase (Meta)\"\n  'purchase_refund_rate',       // \"Purchase Refund Rate\"\n  'purchase_accuracy_ratio',    // \"Purchase Accuracy Ratio\"\n  'mixpanel_conversions_net_refunds', // \"Net Conversions (Mixpanel)\"\n  'estimated_revenue_usd',      // \"Estimated Revenue\"\n  'mixpanel_revenue_usd',       // \"Revenue (Mixpanel)\"\n  'mixpanel_refunds_usd',       // \"Refunds (Mixpanel)\"\n  'profit',                     // \"Profit\"\n  'estimated_roas'              // \"ROAS\"\n];\n\n// Helper to determine event priority based on Mixpanel counts\n// Compares \"Trial Started by Mixpanel\" vs \"Purchases in Mixpanel\" \nconst getEventPriority = (row) => {\n  // Compares \"Trial Started by Mixpanel\" vs \"Purchases in Mixpanel\"\n  const trialsCount = row.mixpanel_trials_started || 0;    // \"Trial Started by Mixpanel\"\n  const purchasesCount = row.mixpanel_purchases || 0;      // \"Purchases in Mixpanel\"\n  \n  // When both are zero, default to graying out purchase columns (make trials the priority)\n  if (trialsCount === 0 && purchasesCount === 0) return 'trials';\n  \n  // When trials > purchases, gray out purchase columns (trials are priority)\n  if (trialsCount > purchasesCount) return 'trials';\n  \n  // When purchases > trials, gray out trial columns (purchases are priority)  \n  if (purchasesCount > trialsCount) return 'purchases';\n  \n  // If they're equal and both > 0, no graying out\n  return 'equal';\n};\n\n// Helper to check if a column should be grayed out based on event priority\nconst shouldGrayOutColumn = (columnKey, eventPriority) => {\n  if (eventPriority === 'equal') return false;\n  \n  // When trials are priority, gray out purchase-related columns\n  if (eventPriority === 'trials' && PURCHASE_RELATED_COLUMNS.includes(columnKey)) {\n    return true;\n  }\n  \n  // When purchases are priority, gray out trial-related columns\n  if (eventPriority === 'purchases' && TRIAL_RELATED_COLUMNS.includes(columnKey)) {\n    return true;\n  }\n  \n  return false;\n};\n\n// Helper to get column type for visual differentiation\nconst getColumnType = (columnKey) => {\n  if (TRIAL_RELATED_COLUMNS.includes(columnKey)) return 'trial';\n  if (PURCHASE_RELATED_COLUMNS.includes(columnKey)) return 'purchase';\n  return 'neutral';\n};\n\n// Helper to get column background class based on type\nconst getColumnBackgroundClass = (columnKey, isHovered = false) => {\n  const columnType = getColumnType(columnKey);\n  \n  if (isHovered) {\n    // Slightly stronger background on hover\n    switch (columnType) {\n      case 'trial': return 'bg-blue-50 dark:bg-blue-900/20';\n      case 'purchase': return 'bg-green-50 dark:bg-green-900/20';\n      default: return ''; // No special hover background for neutral columns\n    }\n  } else {\n    // Subtle background for visual differentiation\n    switch (columnType) {\n      case 'trial': return 'bg-blue-25 dark:bg-blue-900/10';\n      case 'purchase': return 'bg-green-25 dark:bg-green-900/10';\n      default: return ''; // No background for neutral columns - normal grey\n    }\n  }\n};\n\n// Helper to calculate derived values for missing fields\nconst calculateDerivedValues = (row) => {\n  const calculated = { ...row };\n  \n  // Calculate new fields that don't exist in the data\n  if (calculated.spend && calculated.total_trials_started && calculated.total_trials_started > 0) {\n    calculated.cost_per_trial_mixpanel = calculated.spend / calculated.total_trials_started;\n  }\n  \n  if (calculated.spend && calculated.total_conversions && calculated.total_conversions > 0) {\n    calculated.cost_per_purchase_mixpanel = calculated.spend / calculated.total_conversions;\n  }\n  \n  // Trial conversion difference percentage (what percent Mixpanel trials are of Meta trials)\n  if (calculated.meta_trials_started && calculated.total_trials_started && calculated.meta_trials_started > 0) {\n    calculated.trial_conversion_diff_pct = calculated.total_trials_started / calculated.meta_trials_started;\n  }\n  \n  // Profit calculation (Revenue - Spend)\n  if (calculated.revenue_usd !== undefined && calculated.spend !== undefined) {\n    calculated.profit = calculated.revenue_usd - calculated.spend;\n  }\n  \n  // Estimated ROAS calculation (adjusted for Meta vs Mixpanel trial difference)\n  if (calculated.estimated_revenue_usd !== undefined && calculated.spend !== undefined && calculated.spend > 0) {\n    if (calculated.trial_conversion_diff_pct && calculated.trial_conversion_diff_pct > 0) {\n      // Adjust estimated revenue by dividing by the percentage (to scale up for Meta accuracy)\n      const adjustedRevenue = calculated.estimated_revenue_usd / calculated.trial_conversion_diff_pct;\n      calculated.estimated_roas = adjustedRevenue / calculated.spend;\n    } else {\n      // Fallback to standard calculation if no diff percentage available\n      calculated.estimated_roas = calculated.estimated_revenue_usd / calculated.spend;\n    }\n  }\n  \n  return calculated;\n};\n\n// Field color - use normal text colors\nconst getFieldColor = (fieldName, value) => {\n  // Special color coding for accuracy column\n  if (fieldName === 'average_accuracy' && value) {\n    switch (value.toLowerCase()) {\n      case 'very high': return 'text-green-700 dark:text-green-400';\n      case 'high': return 'text-green-600 dark:text-green-400';\n      case 'medium': return 'text-yellow-600 dark:text-yellow-400';\n      case 'low': return 'text-orange-600 dark:text-orange-400';\n      case 'very low': return 'text-red-600 dark:text-red-400';\n      default: return 'text-gray-600 dark:text-gray-400';\n    }\n  }\n  // Use standard text colors for all other fields\n  return 'text-gray-900 dark:text-gray-100';\n};\n\n// Header color - use normal text colors\nconst getHeaderColor = (fieldName) => {\n  // Use standard header colors for all fields\n  return 'text-gray-700 dark:text-gray-300';\n};\n\n// ROAS color thresholds: <1 = Red, 1 = Yellow, >1.5 = Green\nconst roas_green_threshold = 1.5;\nconst roas_yellow_threshold = 1.0;\n\nconst getRoasColor = (roas) => {\n  if (roas === undefined || roas === null) return 'text-gray-500 dark:text-gray-400';\n  if (roas > roas_green_threshold) return 'text-green-600 dark:text-green-400';\n  if (roas >= roas_yellow_threshold) return 'text-amber-600 dark:text-amber-400';\n  return 'text-red-600 dark:text-red-400';\n};\n\nexport const DashboardGrid = ({ \n  data = [], \n  rowOrder = [],\n  onRowOrderChange = null,\n  onRowAction = () => {}, \n  columnVisibility = {}, \n  columnOrder = [],\n  onColumnOrderChange = null,\n  runningPipelines = new Set(),\n  pipelineQueue = [],\n  activePipelineCount = 0,\n  maxConcurrentPipelines = 8,\n  dashboardParams = null\n}) => {\n  const [expandedRows, setExpandedRows] = useState({});\n  const [expandedBreakdowns, setExpandedBreakdowns] = useState({});\n  \n  // Column drag state\n  const [draggedColumn, setDraggedColumn] = useState(null);\n  const [dragOverColumn, setDragOverColumn] = useState(null);\n  \n  // Row drag state\n  const [draggedRowId, setDraggedRowId] = useState(null);\n  const [dragOverRowId, setDragOverRowId] = useState(null);\n\n  // Get visible columns based on columnVisibility settings and column order\n  const getOrderedVisibleColumns = () => {\n    // Use column order if available, otherwise use default order\n    const orderToUse = columnOrder.length > 0 ? columnOrder : AVAILABLE_COLUMNS.map(col => col.key);\n    \n    // Map the ordered keys to column objects, filtering out non-existent columns\n    const orderedColumns = orderToUse\n      .map(key => AVAILABLE_COLUMNS.find(col => col.key === key))\n      .filter(col => col); // Remove any undefined columns\n    \n    // Filter by visibility\n    if (Object.keys(columnVisibility).length === 0) {\n      // If no visibility settings loaded yet, use default visibility\n      return orderedColumns.filter(col => col.defaultVisible);\n    } else {\n      // Use explicit visibility settings\n      return orderedColumns.filter(col => columnVisibility[col.key] !== false);\n    }\n  };\n\n  const visibleColumns = getOrderedVisibleColumns();\n\n  // Helper function to check if a column should be visible\n  const isColumnVisible = (columnKey) => {\n    if (Object.keys(columnVisibility).length === 0) {\n      // If no visibility settings loaded yet, check default\n      const column = AVAILABLE_COLUMNS.find(col => col.key === columnKey);\n      return column ? column.defaultVisible : false;\n    }\n    return columnVisibility[columnKey] !== false;\n  };\n\n  // Helper function to check if a pipeline is running for a specific row\n  const isPipelineRunning = (rowId) => {\n    return runningPipelines.has(rowId);\n  };\n\n  // Helper function to check if a pipeline is queued for a specific row\n  const isPipelineQueued = (rowId) => {\n    return pipelineQueue.some(item => item.id === rowId);\n  };\n\n  // Helper function to get pipeline status\n  const getPipelineStatus = (rowId) => {\n    if (isPipelineRunning(rowId)) return 'running';\n    if (isPipelineQueued(rowId)) return 'queued';\n    return 'idle';\n  };\n\n  // Helper function to render a cell value with proper formatting and coloring\n  const renderCellValue = (row, columnKey, isPipelineUpdated = false, eventPriority = null) => {\n    const calculatedRow = calculateDerivedValues(row);\n    let value = calculatedRow[columnKey];\n    let formattedValue = 'N/A';\n    let isEstimated = false;\n\n    // Format values based on column type\n    switch (columnKey) {\n      case 'spend':\n      case 'mixpanel_revenue_usd':\n      case 'estimated_revenue_usd':\n      case 'mixpanel_refunds_usd':\n      case 'profit':\n      case 'mixpanel_cost_per_trial':\n      case 'mixpanel_cost_per_purchase':\n      case 'meta_cost_per_trial':\n      case 'meta_cost_per_purchase':\n        formattedValue = formatCurrency(value);\n        break;\n      case 'impressions':\n      case 'clicks':\n      case 'mixpanel_trials_started':\n      case 'meta_trials_started':\n      case 'mixpanel_trials_ended':\n      case 'mixpanel_trials_in_progress':\n      case 'mixpanel_purchases':\n      case 'meta_purchases':\n      case 'mixpanel_converted_amount':\n      case 'mixpanel_conversions_net_refunds':\n      case 'total_attributed_users':\n        formattedValue = formatNumber(value);\n        break;\n      case 'click_to_trial_rate':\n      case 'trial_conversion_rate':\n      case 'trial_accuracy_ratio':\n      case 'purchase_accuracy_ratio':\n        formattedValue = value !== undefined && value !== null ? `${formatNumber(value, 2)}%` : 'N/A';\n        break;\n      case 'avg_trial_refund_rate':\n        if (value !== undefined && value !== null) {\n          const roundedValue = formatNumber(value, 2);\n          const hasMinimumFlag = Math.abs(value - 5.0) < 0.01;\n          formattedValue = (\n            <span>\n              {roundedValue}%\n              {hasMinimumFlag && (\n                <RefundRateTooltip \n                  value={value} \n                  type=\"trial\" \n                  colorClass=\"text-blue-500\" \n                  pipelineUpdatedClass=\"\" \n                />\n              )}\n            </span>\n          );\n        } else {\n          formattedValue = 'N/A';\n        }\n        break;\n      case 'purchase_refund_rate':\n        if (value !== undefined && value !== null) {\n          const roundedValue = formatNumber(value, 2);\n          const hasMinimumFlag = Math.abs(value - 15.0) < 0.01;\n          formattedValue = (\n            <span>\n              {roundedValue}%\n              {hasMinimumFlag && (\n                <RefundRateTooltip \n                  value={value} \n                  type=\"purchase\" \n                  colorClass=\"text-orange-500\" \n                  pipelineUpdatedClass=\"\" \n                />\n              )}\n            </span>\n          );\n        } else {\n          formattedValue = 'N/A';\n        }\n        break;\n      case 'estimated_roas':\n        formattedValue = formatNumber(value, 2);\n        break;\n      case 'segment_accuracy_average':\n        formattedValue = value || 'N/A';\n        break;\n      default:\n        formattedValue = value || 'N/A';\n    }\n\n    // Apply special styling for ROAS columns\n    let colorClass = getFieldColor(columnKey, value);\n    if (columnKey === 'estimated_roas') {\n      colorClass = getRoasColor(value);\n    }\n\n    // Check if this column should be grayed out based on event priority\n    if (eventPriority && shouldGrayOutColumn(columnKey, eventPriority)) {\n      colorClass = 'text-gray-500 dark:text-gray-500';\n    }\n\n    // Add pipeline update styling for key metrics\n    const pipelineUpdatedClass = isPipelineUpdated && \n      ['mixpanel_purchases', 'mixpanel_revenue_usd', 'estimated_revenue_usd', 'estimated_roas', 'mixpanel_trials_started', 'mixpanel_refunds_usd', 'segment_accuracy_average'].includes(columnKey) \n        ? 'font-bold text-green-600 dark:text-green-400' : '';\n\n    // Special rendering for accuracy column with tooltip\n    if (columnKey === 'segment_accuracy_average' && row.accuracy_breakdown) {\n      return (\n        <AccuracyTooltip \n          average={formattedValue}\n          breakdown={row.accuracy_breakdown}\n          colorClass={colorClass}\n          pipelineUpdatedClass={pipelineUpdatedClass}\n        />\n      );\n    }\n\n    // Special rendering for estimated ROAS column with sparkline\n    if (columnKey === 'estimated_roas') {\n      // Extract the actual ID from the row.id field (format: \"campaign_123\", \"adset_456\", \"ad_789\")\n      const entityId = row.id ? row.id.split('_')[1] : null;\n      \n      return (\n        <ROASSparkline \n          entityType={row.type}\n          entityId={entityId}\n          currentROAS={value}\n          conversionCount={calculatedRow.mixpanel_purchases || 0}\n          breakdown={dashboardParams?.breakdown || 'all'}\n          startDate={dashboardParams?.start_date || '2025-04-01'}\n          endDate={dashboardParams?.end_date || '2025-04-10'}\n        />\n      );\n    }\n\n    return (\n      <span className={`${colorClass} ${pipelineUpdatedClass}`}>\n        {formattedValue}\n        {isEstimated && <span className=\"ml-1 text-xs\">*</span>}\n      </span>\n    );\n  };\n\n  // Simple column drag handlers\n  const handleColumnDragStart = (e, columnKey) => {\n    setDraggedColumn(columnKey);\n    e.dataTransfer.effectAllowed = 'move';\n    e.dataTransfer.setData('text/plain', columnKey);\n    \n    // Add visual feedback\n    e.target.style.opacity = '0.5';\n  };\n\n  const handleColumnDragOver = (e) => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n  };\n\n  const handleColumnDragEnter = (e, columnKey) => {\n    e.preventDefault();\n    if (draggedColumn && draggedColumn !== columnKey) {\n      setDragOverColumn(columnKey);\n    }\n  };\n\n  const handleColumnDragLeave = (e) => {\n    e.preventDefault();\n    // Only clear if we're actually leaving the column\n    if (!e.currentTarget.contains(e.relatedTarget)) {\n      setDragOverColumn(null);\n    }\n  };\n\n  const handleColumnDrop = (e, targetColumnKey) => {\n    e.preventDefault();\n    \n    if (!draggedColumn || draggedColumn === targetColumnKey) {\n      handleColumnDragEnd(e);\n      return;\n    }\n\n    // Get the visible columns order\n    const visibleColumnKeys = visibleColumns.slice(1).map(col => col.key);\n    const draggedIndex = visibleColumnKeys.indexOf(draggedColumn);\n    const targetIndex = visibleColumnKeys.indexOf(targetColumnKey);\n    \n    if (draggedIndex === -1 || targetIndex === -1) {\n      handleColumnDragEnd(e);\n      return;\n    }\n\n    // Create new visible order\n    const newVisibleOrder = [...visibleColumnKeys];\n    const [movedColumn] = newVisibleOrder.splice(draggedIndex, 1);\n    newVisibleOrder.splice(targetIndex, 0, movedColumn);\n    \n    // Reconstruct full column order\n    const fullOrder = columnOrder.length > 0 ? [...columnOrder] : AVAILABLE_COLUMNS.map(col => col.key);\n    const newFullOrder = ['name']; // Always keep name first\n    \n    // Add the reordered visible columns\n    newVisibleOrder.forEach(key => {\n      if (!newFullOrder.includes(key)) {\n        newFullOrder.push(key);\n      }\n    });\n    \n    // Add any remaining columns that aren't visible\n    fullOrder.forEach(key => {\n      if (!newFullOrder.includes(key)) {\n        newFullOrder.push(key);\n      }\n    });\n    \n    console.log('🔄 Column drag reorder:', {\n      dragged: draggedColumn,\n      target: targetColumnKey,\n      newOrder: newFullOrder\n    });\n    \n    if (onColumnOrderChange) {\n      onColumnOrderChange(newFullOrder);\n    }\n    \n    handleColumnDragEnd(e);\n  };\n\n  const handleColumnDragEnd = (e) => {\n    // Reset visual feedback\n    if (e.target) {\n      e.target.style.opacity = '';\n    }\n    setDraggedColumn(null);\n    setDragOverColumn(null);\n  };\n\n\n\n  // Row drag handlers\n  const handleRowDragStart = (e, id) => {\n    setDraggedRowId(id);\n    e.dataTransfer.effectAllowed = 'move';\n    e.dataTransfer.setDragImage(new Image(), 0, 0); // hide ghost for cleaner UX\n  };\n\n  const handleRowDragEnter = (e, id) => {\n    e.preventDefault();\n    if (id !== dragOverRowId) setDragOverRowId(id);\n  };\n\n  const handleRowDrop = (e, targetId) => {\n    e.preventDefault();\n    if (!draggedRowId || draggedRowId === targetId) return;\n\n    const newOrder = [...rowOrder];\n    const from = newOrder.indexOf(draggedRowId);\n    const to = newOrder.indexOf(targetId);\n    newOrder.splice(to, 0, newOrder.splice(from, 1)[0]);\n\n    onRowOrderChange?.(newOrder);\n    cleanupRowDrag();\n  };\n\n  const handleRowDragEnd = cleanupRowDrag;\n\n  function cleanupRowDrag() {\n    setDraggedRowId(null);\n    setDragOverRowId(null);\n  }\n\n  const toggleExpand = (id) => {\n    setExpandedRows(prev => ({ ...prev, [id]: !prev[id] }));\n  };\n\n  const toggleBreakdown = (id) => {\n    setExpandedBreakdowns(prev => ({ ...prev, [id]: !prev[id] }));\n  };\n\n  const expandAllRows = () => {\n    const newExpandedRows = {};\n    const processRows = (rows) => {\n      rows.forEach(row => {\n        newExpandedRows[row.id] = true;\n        if (row.children) {\n          processRows(row.children);\n        }\n      });\n    };\n    processRows(data);\n    setExpandedRows(newExpandedRows);\n  };\n\n  const collapseAllRows = () => {\n    setExpandedRows({});\n  };\n\n  const expandAllBreakdowns = () => {\n    const newExpandedBreakdowns = {};\n    const processRows = (rows) => {\n      rows.forEach(row => {\n        if (row.breakdowns && row.breakdowns.length > 0) {\n          newExpandedBreakdowns[row.id] = true;\n        }\n        if (row.children) {\n          processRows(row.children);\n        }\n      });\n    };\n    processRows(data);\n    setExpandedBreakdowns(newExpandedBreakdowns);\n  };\n\n  const collapseAllBreakdowns = () => {\n    setExpandedBreakdowns({});\n  };\n\n  const renderAllBreakdownRows = (row, level) => {\n    const breakdownNodes = [];\n    \n    if (!row.breakdowns) return breakdownNodes;\n    \n    row.breakdowns.forEach(breakdown => {\n      breakdownNodes.push(\n        <tr key={`${row.id}-${breakdown.type}-header`} className=\"border-b border-gray-200 dark:border-gray-700 bg-gray-50/50 dark:bg-gray-900/50\">\n          <td className=\"sticky left-0 px-3 py-1 whitespace-nowrap bg-gray-50/50 dark:bg-gray-900/50 z-10\">\n            <div className=\"flex items-center\">\n              <span className=\"opacity-0 w-8\"></span> {/* Space for chart/info icons */}\n              <span style={{ paddingLeft: `${(level + 1) * 20}px` }} className=\"text-xs font-medium text-gray-500 dark:text-gray-400\">\n                {breakdown.type.charAt(0).toUpperCase() + breakdown.type.slice(1)}\n              </span>\n            </div>\n          </td>\n          {visibleColumns.slice(1).map((column) => (\n            <td key={column.key} colSpan={1}></td>\n          ))}\n        </tr>\n      );\n\n      breakdown.values.forEach((value, index) => {\n        const calculatedValue = calculateDerivedValues(value);\n        breakdownNodes.push(\n          <tr key={`${row.id}-${breakdown.type}-${index}`} className=\"border-b border-gray-200 dark:border-gray-700 bg-gray-50/30 dark:bg-gray-900/30 text-xs\">\n            <td className=\"sticky left-0 px-3 py-1 whitespace-nowrap bg-gray-50/30 dark:bg-gray-900/30 z-10\">\n              <div className=\"flex items-center\">\n                <span className=\"opacity-0 w-8\"></span> {/* Space for chart/info icons */}\n                <span style={{ paddingLeft: `${(level + 1) * 20 + 12}px` }} className=\"text-gray-500 italic\">\n                  {value.name}\n                </span>\n              </div>\n            </td>\n            {visibleColumns.slice(1).map((column) => {\n              if (column.key === 'campaign_name' || column.key === 'adset_name') {\n                return <td key={column.key} className=\"px-3 py-1\"></td>;\n              }\n              return (\n                <td key={column.key} className=\"px-3 py-1 whitespace-nowrap text-right\">\n                  {renderCellValue(calculatedValue, column.key, false, getEventPriority(calculatedValue))}\n                </td>\n              );\n            })}\n          </tr>\n        );\n      });\n    });\n    \n    return breakdownNodes;\n  };\n\n  const renderRow = (row, level) => {\n    const isExpanded = !!expandedRows[row.id];\n    const isBreakdownExpanded = !!expandedBreakdowns[row.id];\n    const rowNodes = [];\n\n    // Check if this row has been updated with pipeline data\n    const isPipelineUpdated = row._pipelineUpdated;\n    const pipelineTimestamp = row._pipelineTimestamp;\n\n    const calculatedRow = calculateDerivedValues(row);\n\n    // Determine event priority\n    const eventPriority = getEventPriority(row);\n\n    rowNodes.push(\n      <tr \n        key={row.id} \n        draggable={level === 0}\n        onDragStart={e => handleRowDragStart(e, row.id)}\n        onDragEnter={e => handleRowDragEnter(e, row.id)}\n        onDragOver={e => e.preventDefault()}\n        onDrop={e => handleRowDrop(e, row.id)}\n        onDragEnd={handleRowDragEnd}\n        className={`border-b border-gray-200 dark:border-gray-700 ${\n        level === 0 \n          ? 'bg-gray-50 dark:bg-gray-800 font-semibold' \n          : level === 1 \n            ? 'bg-white dark:bg-gray-700 text-gray-800 dark:text-gray-200' \n            : 'bg-gray-100 dark:bg-gray-600 text-gray-800 dark:text-gray-200'\n      } ${(isPipelineUpdated || row._pipelineUpdated) ? 'ring-2 ring-green-400 bg-green-50 dark:bg-green-900/20' : ''} ${draggedRowId === row.id ? 'opacity-50' : ''} ${dragOverRowId === row.id && draggedRowId !== row.id ? 'ring-2 ring-blue-400' : ''}`}>\n        \n        {/* Name column - always visible */}\n        <td className={`sticky left-0 px-3 py-2 whitespace-nowrap z-10 ${\n          level === 0 \n            ? ((isPipelineUpdated || row._pipelineUpdated) ? 'bg-green-50 dark:bg-green-900/20' : 'bg-gray-50 dark:bg-gray-800')\n            : level === 1 \n              ? ((isPipelineUpdated || row._pipelineUpdated) ? 'bg-green-50 dark:bg-green-900/20' : 'bg-white dark:bg-gray-700')\n              : ((isPipelineUpdated || row._pipelineUpdated) ? 'bg-green-50 dark:bg-green-900/20' : 'bg-gray-100 dark:bg-gray-600')\n        }`}>\n          <div className=\"flex items-center\">\n            <button onClick={() => onRowAction('graph', row)} className=\"mr-2 p-1 hover:text-blue-500\" title=\"View Chart\"><BarChart2 size={16} /></button>\n            <button onClick={() => onRowAction('debug', row)} className=\"mr-2 p-1 hover:text-orange-500\" title=\"Debug Info\"><Info size={16} /></button>\n            <button \n              onClick={() => onRowAction('pipeline', row)} \n              disabled={isPipelineRunning(row.id) || isPipelineQueued(row.id)}\n              className={`mr-2 p-1 ${\n                isPipelineRunning(row.id) ? 'text-green-500 cursor-not-allowed' : \n                isPipelineQueued(row.id) ? 'text-yellow-500 cursor-not-allowed' : \n                'hover:text-green-500'\n              }`} \n              title={\n                isPipelineRunning(row.id) ? 'Pipeline Running...' : \n                isPipelineQueued(row.id) ? 'Pipeline Queued...' : \n                'Run Pipeline'\n              }\n            >\n              {isPipelineRunning(row.id) ? (\n                <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-green-500\"></div>\n              ) : isPipelineQueued(row.id) ? (\n                <div className=\"animate-pulse rounded-full h-4 w-4 border-2 border-yellow-500 bg-yellow-200\"></div>\n              ) : (\n                <Play size={16} />\n              )}\n            </button>\n            <button onClick={() => onRowAction('timeline', row)} className=\"mr-2 p-1 hover:text-purple-500\" title=\"View Timeline\"><Clock size={16} /></button>\n            <span className=\"flex items-center\">\n              <span style={{ paddingLeft: `${level * 20}px` }}>\n                {row.children && row.children.length > 0 ? (\n                  <button onClick={() => toggleExpand(row.id)} className=\"mr-1 p-1\">\n                    {isExpanded ? <ChevronDown size={16} /> : <ChevronRight size={16} />}\n                  </button>\n                ) : (\n                  <span className=\"inline-block w-8\"></span>\n                )}\n              </span>\n              \n              {row.breakdowns && row.breakdowns.length > 0 && (\n                <button \n                  onClick={() => toggleBreakdown(row.id)} \n                  className={`mr-2 p-1 rounded ${isBreakdownExpanded ? 'text-blue-500 bg-blue-100 dark:bg-blue-900/30' : 'text-gray-400 hover:text-blue-400'}`}\n                  title=\"Toggle breakdowns\"\n                >\n                  <Search size={14} />\n                </button>\n              )}\n              \n              {/* Pipeline update indicator */}\n              {(isPipelineUpdated || row._pipelineUpdated) && (\n                <PipelineBadge \n                  isPipelineUpdated={true} \n                  className=\"mr-2\" \n                />\n              )}\n              \n              {/* Pipeline running indicator */}\n              {isPipelineRunning(row.id) && (\n                <span className=\"mr-2 px-2 py-1 bg-blue-100 dark:bg-blue-800 text-blue-800 dark:text-blue-200 text-xs rounded-full animate-pulse\">\n                  🔄 Running\n                </span>\n              )}\n              \n              {/* Pipeline queued indicator */}\n              {isPipelineQueued(row.id) && (\n                <span className=\"mr-2 px-2 py-1 bg-yellow-100 dark:bg-yellow-800 text-yellow-800 dark:text-yellow-200 text-xs rounded-full animate-pulse\">\n                  ⏳ Queued\n                </span>\n              )}\n              \n              <span className={`${level === 0 ? 'text-gray-900 dark:text-gray-100' : level === 1 ? 'text-gray-800 dark:text-gray-200' : 'text-gray-700 dark:text-gray-100'}`}>\n                {level === 0 \n                  ? (row.name || row.campaign_name)\n                  : level === 1 \n                    ? (row.name || row.adset_name)\n                    : (row.name || row.ad_name)\n                }\n              </span>\n            </span>\n          </div>\n        </td>\n\n        {/* Dynamic columns based on visibility */}\n        {visibleColumns.slice(1).map((column) => {\n          // Special handling for campaign/adset name columns based on level\n          if (column.key === 'campaign_name') {\n            if (level > 0) {\n              return <td key={column.key} className=\"px-3 py-2 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">{row.campaign_name}</td>;\n            } else {\n              return <td key={column.key} className=\"px-3 py-2\"></td>;\n            }\n          }\n          \n          if (column.key === 'adset_name') {\n            if (level > 1) {\n              return <td key={column.key} className=\"px-3 py-2 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">{row.adset_name}</td>;\n            } else {\n              return <td key={column.key} className=\"px-3 py-2\"></td>;\n            }\n          }\n\n          // Regular data columns\n          const fieldColor = getFieldColor(column.key, calculatedRow[column.key]);\n          const isRoasColumn = column.key === 'roas' || column.key === 'estimated_roas';\n          const roasColor = isRoasColumn ? getRoasColor(calculatedRow[column.key]) : '';\n          const finalColor = isRoasColumn ? roasColor : fieldColor;\n          \n          const pipelineHighlight = (isPipelineUpdated || row._pipelineUpdated) && \n            ['total_conversions', 'revenue_usd', 'estimated_conversions', 'estimated_revenue_usd', 'roas', 'estimated_roas', 'total_trials_started', 'total_refunds_usd', 'total_converted_amount_mixpanel', 'mixpanel_trials', 'mixpanel_purchases', 'estimated_roas', 'profit'].includes(column.key) \n              ? 'font-bold text-green-600 dark:text-green-400' : '';\n\n          // Check if the column should be grayed out based on event priority\n          const shouldGrayOut = shouldGrayOutColumn(column.key, eventPriority);\n          const grayedOutColor = shouldGrayOut ? 'text-gray-500 dark:text-gray-500' : finalColor;\n\n          // Get column background class for visual differentiation\n          const columnBackgroundClass = getColumnBackgroundClass(column.key);\n\n                      return (\n              <td key={column.key} className={`px-3 py-2 whitespace-nowrap text-right ${grayedOutColor} ${pipelineHighlight} ${isRoasColumn ? 'font-medium' : ''} ${columnBackgroundClass}`}>\n                {renderCellValue(calculatedRow, column.key, isPipelineUpdated, eventPriority)}\n              </td>\n            );\n        })}\n      </tr>\n    );\n\n    if (isBreakdownExpanded && row.breakdowns) {\n      rowNodes.push(...renderAllBreakdownRows(row, level));\n    }\n\n    if (isExpanded && row.children) {\n      row.children.forEach(childRow => {\n        rowNodes.push(...renderRow(childRow, level + 1));\n      });\n    }\n    return rowNodes;\n  };\n\n  if (!data || data.length === 0) {\n    return <div className=\"p-4 text-center text-gray-500 dark:text-gray-400\">No data available.</div>;\n  }\n\n  const orderedData = rowOrder.length\n    ? rowOrder.map(id => data.find(r => r.id === id)).filter(Boolean)\n    : data;\n\n  const allRows = orderedData.reduce(\n    (acc, campaign) => acc.concat(renderRow(campaign, 0)),\n    []\n  );\n\n  return (\n    <div className=\"shadow-soft rounded-2xl\">\n      <div className=\"bg-white dark:bg-gray-800 px-4 py-2 flex space-x-4 border-b border-gray-200 dark:border-gray-700\">\n        <div className=\"inline-flex rounded-md shadow-sm\">\n          <button \n            onClick={expandAllRows} \n            className=\"px-3 py-1.5 text-xs font-medium bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-200 rounded-l-lg border border-gray-300 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600 flex items-center\"\n          >\n            <Layers size={14} className=\"mr-1\" /> Expand All\n          </button>\n          <button \n            onClick={collapseAllRows} \n            className=\"px-3 py-1.5 text-xs font-medium bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-200 rounded-r-lg border border-l-0 border-gray-300 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600 flex items-center\"\n          >\n            <Table2 size={14} className=\"mr-1\" /> Collapse All\n          </button>\n        </div>\n        \n        <div className=\"inline-flex rounded-md shadow-sm\">\n          <button \n            onClick={expandAllBreakdowns} \n            className=\"px-3 py-1.5 text-xs font-medium bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-200 rounded-l-lg border border-gray-300 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600 flex items-center\"\n          >\n            <Search size={14} className=\"mr-1\" /> Show Breakdowns\n          </button>\n          <button \n            onClick={collapseAllBreakdowns} \n            className=\"px-3 py-1.5 text-xs font-medium bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-200 rounded-r-lg border border-l-0 border-gray-300 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600 flex items-center\"\n          >\n            <AlignJustify size={14} className=\"mr-1\" /> Hide Breakdowns\n          </button>\n        </div>\n\n\n\n        {/* Pipeline Status */}\n        <div className=\"flex items-center space-x-4 ml-auto text-xs\">\n          {/* Running Pipelines Counter */}\n          {(runningPipelines.size > 0 || pipelineQueue.length > 0) && (\n            <div className=\"flex items-center space-x-2\">\n              {runningPipelines.size > 0 && (\n                <div className=\"flex items-center bg-blue-100 dark:bg-blue-900 px-2 py-1 rounded-full\">\n                  <div className=\"animate-spin rounded-full h-3 w-3 border-b border-blue-600 dark:border-blue-400 mr-2\"></div>\n                  <span className=\"text-blue-800 dark:text-blue-200 font-medium\">\n                    {runningPipelines.size} active\n                  </span>\n                </div>\n              )}\n              \n              {pipelineQueue.length > 0 && (\n                <div className=\"flex items-center bg-yellow-100 dark:bg-yellow-900 px-2 py-1 rounded-full\">\n                  <div className=\"animate-pulse rounded-full h-3 w-3 bg-yellow-600 dark:bg-yellow-400 mr-2\"></div>\n                  <span className=\"text-yellow-800 dark:text-yellow-200 font-medium\">\n                    {pipelineQueue.length} queued\n                  </span>\n                </div>\n              )}\n              \n              <div className=\"text-gray-500 dark:text-gray-400 text-xs\">\n                ({activePipelineCount}/{maxConcurrentPipelines} concurrent)\n              </div>\n            </div>\n          )}\n          \n          <div className=\"flex items-center\">\n            <span className=\"text-green-600 dark:text-green-400 mr-1\">✨</span>\n            <span className=\"text-gray-600 dark:text-gray-400\">Pipeline Enhanced</span>\n          </div>\n        </div>\n      </div>\n      \n      {/* Table container with proper horizontal scrolling */}\n      <div className=\"overflow-x-auto\">\n        <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700 text-sm\">\n          <thead className=\"bg-gray-100 dark:bg-gray-800\">\n            <tr>\n              {/* Name column - always visible and not draggable */}\n              <th scope=\"col\" className=\"sticky left-0 px-3 py-3 text-left text-xs font-medium uppercase tracking-wider bg-gray-100 dark:bg-gray-800 z-20\">\n                Name\n              </th>\n              \n              {/* Dynamic columns based on visibility - draggable */}\n              {visibleColumns.slice(1).map((column) => {\n                const columnType = getColumnType(column.key);\n                const backgroundClass = getColumnBackgroundClass(column.key, dragOverColumn === column.key);\n                \n                return (\n                  <th \n                    key={column.key} \n                    scope=\"col\"\n                    draggable={!column.alwaysVisible}\n                    onDragStart={(e) => handleColumnDragStart(e, column.key)}\n                    onDragOver={handleColumnDragOver}\n                    onDragEnter={(e) => handleColumnDragEnter(e, column.key)}\n                    onDragLeave={handleColumnDragLeave}\n                    onDrop={(e) => handleColumnDrop(e, column.key)}\n                    onDragEnd={handleColumnDragEnd}\n                    className={`px-3 py-3 text-${column.key === 'campaign_name' || column.key === 'adset_name' ? 'left' : 'right'} text-xs font-medium uppercase tracking-wider ${getHeaderColor(column.key)} ${backgroundClass}\n                      ${!column.alwaysVisible ? 'cursor-move select-none hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors duration-150' : ''} \n                      ${dragOverColumn === column.key && draggedColumn !== column.key ? 'bg-blue-100 dark:bg-blue-900 border-2 border-blue-300 dark:border-blue-600' : ''}\n                      ${columnType === 'trial' ? 'border-l-2 border-blue-200 dark:border-blue-800' : ''}\n                      ${columnType === 'purchase' ? 'border-l-2 border-green-200 dark:border-green-800' : ''}`}\n                    title={!column.alwaysVisible ? `Drag to reorder \"${column.label}\" column` : ''}\n                  >\n                  <div className=\"flex items-center justify-between\">\n                    <span>{column.label}</span>\n                    {!column.alwaysVisible && (\n                      <span className=\"ml-1 text-gray-400 dark:text-gray-500 text-lg leading-none hover:text-gray-600 dark:hover:text-gray-300 transition-colors duration-150\" style={{ transform: 'rotate(90deg)' }}>⋮⋮</span>\n                    )}\n                  </div>\n                </th>\n              );\n              })}\n            </tr>\n          </thead>\n          <tbody className=\"bg-white dark:bg-gray-900 divide-y divide-gray-200 dark:divide-gray-700\">\n            {allRows.map(row => <Fragment key={row.key}>{row}</Fragment>)}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}