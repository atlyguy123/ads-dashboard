{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{dashboardApi}from'../../services/dashboardApi';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ROASSparkline=_ref=>{let{entityType,entityId,currentROAS,conversionCount=0,breakdown='all',startDate,endDate}=_ref;const[chartData,setChartData]=useState([]);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[hoveredPoint,setHoveredPoint]=useState(null);const[tooltipPosition,setTooltipPosition]=useState({x:0,y:0});const svgRef=useRef(null);// Get ROAS performance color with intensity based on conversion count\nconst getROASPerformanceColor=function(roas){let conversions=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;const roasValue=parseFloat(roas)||0;const hasSignificantData=conversions>=5;// 5+ conversions = darker, <5 = lighter\nif(roasValue<1.0){return hasSignificantData?'text-red-600':'text-red-400';}if(roasValue>=1.0&&roasValue<1.5){return hasSignificantData?'text-yellow-600':'text-yellow-400';}// >= 1.5\nreturn hasSignificantData?'text-green-600':'text-green-400';};// Calculate limited date range (max 14 days)\nconst getLimitedDateRange=(start,end)=>{const startDate=new Date(start);const endDate=new Date(end);const daysDiff=Math.ceil((endDate-startDate)/(1000*60*60*24));if(daysDiff<=14){return{start,end};}// Take the last 14 days from the end date\nconst limitedStart=new Date(endDate);limitedStart.setDate(limitedStart.getDate()-13);// 13 days back + end date = 14 days\nreturn{start:limitedStart.toISOString().split('T')[0],end};};// Load chart data\nuseEffect(()=>{const loadChartData=async()=>{if(!entityId||!startDate||!endDate){return;}setLoading(true);setError(null);try{// Limit to 14 days maximum\nconst{start:limitedStart,end:limitedEnd}=getLimitedDateRange(startDate,endDate);const apiParams={entity_type:entityType,entity_id:entityId,breakdown:breakdown,start_date:limitedStart,end_date:limitedEnd};const response=await dashboardApi.getAnalyticsChartData(apiParams);if(response&&response.success&&response.chart_data){setChartData(response.chart_data);}else{console.error('ROASSparkline: Invalid API response for',entityId,response);setError('Invalid API response');}}catch(error){console.error('ROASSparkline: API call failed for',entityId,error.message);setError(error.message);}finally{setLoading(false);}};loadChartData();},[entityType,entityId,breakdown,startDate,endDate]);// Handle mouse move over SVG\nconst handleMouseMove=event=>{if(!svgRef.current||chartData.length<2)return;const svgRect=svgRef.current.getBoundingClientRect();const mouseX=event.clientX-svgRect.left;const width=60;const padding=2;const dataWidth=width-2*padding;// Calculate which data point is closest\nconst relativeX=Math.max(0,Math.min(dataWidth,mouseX-padding));const dataIndex=Math.round(relativeX/dataWidth*(chartData.length-1));if(dataIndex>=0&&dataIndex<chartData.length){setHoveredPoint(dataIndex);setTooltipPosition({x:event.clientX,y:event.clientY-60});}};const handleMouseLeave=()=>{setHoveredPoint(null);};// Format date for tooltip\nconst formatDate=dateStr=>{const date=new Date(dateStr);return date.toLocaleDateString('en-US',{month:'short',day:'numeric'});};// Format ROAS value\nconst formatROAS=value=>{const roas=parseFloat(value)||0;return roas.toFixed(2);};// Calculate current ROAS color (using conversionCount passed as prop)\nconst colorClass=getROASPerformanceColor(currentROAS,conversionCount);// Check if we have enough valid data for sparkline\nconst hasEnoughData=chartData.length>=2&&chartData.some(d=>parseFloat(d.daily_roas)>0||parseFloat(d.daily_spend)>0||parseFloat(d.daily_estimated_revenue)>0);return/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3 min-w-[120px] relative\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-sm \".concat(colorClass),children:formatROAS(currentROAS)}),/*#__PURE__*/_jsx(\"div\",{className:\"min-w-[60px] relative\",children:loading?/*#__PURE__*/_jsx(\"div\",{className:\"w-[60px] h-[20px] bg-blue-200 animate-pulse rounded flex items-center justify-center text-xs\",children:\"\\u23F3\"}):error?/*#__PURE__*/_jsx(\"div\",{className:\"w-[60px] h-[20px] flex items-center justify-center text-red-400 text-xs border border-red-300\",children:\"\\u274C\"}):hasEnoughData?// Real sparkline using actual data\n(()=>{const width=60;const height=20;const padding=2;const values=chartData.map(d=>parseFloat(d.daily_roas)||0);const minValue=Math.min(...values);const maxValue=Math.max(...values);const range=maxValue-minValue||0.1;// Prevent division by zero\nconst points=values.map((value,index)=>{const x=padding+index/(values.length-1)*(width-2*padding);const y=height-padding-(value-minValue)/range*(height-2*padding);return\"\".concat(x,\",\").concat(y);});// Create colored segments using midpoint approach\nconst segments=[];for(let i=0;i<points.length-1;i++){// Calculate midpoint ROAS and conversion values for segment coloring\nconst startROAS=values[i];const endROAS=values[i+1];const midpointROAS=(startROAS+endROAS)/2;const startConversions=parseInt(chartData[i].daily_mixpanel_purchases)||0;const endConversions=parseInt(chartData[i+1].daily_mixpanel_purchases)||0;const midpointConversions=Math.round((startConversions+endConversions)/2);const segmentColor=getROASPerformanceColor(midpointROAS,midpointConversions);segments.push({path:\"M \".concat(points[i],\" L \").concat(points[i+1]),color:segmentColor});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"svg\",{ref:svgRef,width:\"60\",height:\"20\",className:\"overflow-visible cursor-crosshair\",onMouseMove:handleMouseMove,onMouseLeave:handleMouseLeave,children:[segments.map((segment,index)=>/*#__PURE__*/_jsx(\"path\",{d:segment.path,fill:\"none\",stroke:\"currentColor\",strokeWidth:\"1.5\",className:segment.color},index)),values.map((value,index)=>{const x=padding+index/(values.length-1)*(width-2*padding);const y=height-padding-(value-minValue)/range*(height-2*padding);const isHovered=hoveredPoint===index;const dayConversions=parseInt(chartData[index].daily_mixpanel_purchases)||0;const dayColor=getROASPerformanceColor(value,dayConversions);return/*#__PURE__*/_jsx(\"circle\",{cx:x,cy:y,r:isHovered?\"2.5\":\"1\",fill:\"currentColor\",className:dayColor,style:{filter:isHovered?'drop-shadow(0 0 3px rgba(0,0,0,0.3))':'none'}},index);})]}),hoveredPoint!==null&&/*#__PURE__*/_jsxs(\"div\",{className:\"fixed z-50 bg-gray-900 text-white text-xs rounded px-2 py-1 pointer-events-none shadow-lg\",style:{left:tooltipPosition.x-120,// Move tooltip to the left of cursor\ntop:tooltipPosition.y,transform:'none'// Remove centering transform\n},children:[(()=>{const dayData=chartData[hoveredPoint];const spend=parseFloat(dayData.daily_spend)||0;const revenue=parseFloat(dayData.daily_estimated_revenue)||0;const backendROAS=parseFloat(dayData.daily_roas)||0;// Verify ROAS calculation\nconst calculatedROAS=spend>0?revenue/spend:0;const roasMatch=Math.abs(backendROAS-calculatedROAS)<0.01;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-white\",children:formatDate(dayData.date)}),/*#__PURE__*/_jsxs(\"div\",{className:getROASPerformanceColor(backendROAS,dayData.daily_mixpanel_purchases||0).replace('text-','text-').replace('600','400'),children:[\"ROAS: \",formatROAS(backendROAS),!roasMatch&&/*#__PURE__*/_jsx(\"span\",{className:\"text-yellow-400 ml-1\",title:\"Calculated: \".concat(calculatedROAS.toFixed(2)),children:\"\\u26A0\\uFE0F\"})]})]});})(),/*#__PURE__*/_jsxs(\"div\",{className:\"text-gray-300 text-xs\",children:[\"Spend: $\",(parseFloat(chartData[hoveredPoint].daily_spend)||0).toFixed(2)]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-gray-300 text-xs\",children:[\"Revenue: $\",(parseFloat(chartData[hoveredPoint].daily_estimated_revenue)||0).toFixed(2)]}),(()=>{const spend=parseFloat(chartData[hoveredPoint].daily_spend)||0;const revenue=parseFloat(chartData[hoveredPoint].daily_estimated_revenue)||0;const accuracyRatio=parseFloat(chartData[hoveredPoint].period_accuracy_ratio)||0;if(spend>0){const baseROAS=(revenue/spend).toFixed(2);if(accuracyRatio>0&&accuracyRatio!==1.0){const adjustedRevenue=revenue/accuracyRatio;const adjustedROAS=(adjustedRevenue/spend).toFixed(2);return/*#__PURE__*/_jsxs(\"div\",{className:\"text-gray-400 text-xs\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[\"Base: $\",revenue.toFixed(2),\" \\xF7 $\",spend.toFixed(2),\" = \",baseROAS]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Ratio: \",(accuracyRatio*100).toFixed(1),\"% (MP/Meta)\"]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Adj: $\",adjustedRevenue.toFixed(2),\" \\xF7 $\",spend.toFixed(2),\" = \",adjustedROAS]})]});}else{return/*#__PURE__*/_jsxs(\"div\",{className:\"text-gray-400 text-xs\",children:[\"Calc: $\",revenue.toFixed(2),\" \\xF7 $\",spend.toFixed(2),\" = \",baseROAS]});}}return null;})(),/*#__PURE__*/_jsxs(\"div\",{className:\"text-green-300 text-xs\",children:[\"Conversions: \",chartData[hoveredPoint].daily_mixpanel_purchases||0]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-blue-300 text-xs\",children:[\"Trials: \",chartData[hoveredPoint].daily_mixpanel_trials||0]}),chartData[hoveredPoint].daily_meta_trials&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-gray-400 text-xs\",children:[\"Meta Trials: \",chartData[hoveredPoint].daily_meta_trials]})]})]});})():/*#__PURE__*/// No data placeholder - subtle dashed gray line\n_jsx(\"div\",{className:\"w-[60px] h-[20px] flex items-center justify-center\",children:/*#__PURE__*/_jsx(\"svg\",{width:\"60\",height:\"20\",className:\"overflow-visible\",children:/*#__PURE__*/_jsx(\"line\",{x1:\"2\",y1:\"10\",x2:\"58\",y2:\"10\",stroke:\"currentColor\",strokeWidth:\"1\",strokeDasharray:\"2,2\",className:\"text-gray-300 dark:text-gray-600\"})})})})]});};export default ROASSparkline;","map":{"version":3,"names":["React","useState","useEffect","useRef","dashboardApi","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ROASSparkline","_ref","entityType","entityId","currentROAS","conversionCount","breakdown","startDate","endDate","chartData","setChartData","loading","setLoading","error","setError","hoveredPoint","setHoveredPoint","tooltipPosition","setTooltipPosition","x","y","svgRef","getROASPerformanceColor","roas","conversions","arguments","length","undefined","roasValue","parseFloat","hasSignificantData","getLimitedDateRange","start","end","Date","daysDiff","Math","ceil","limitedStart","setDate","getDate","toISOString","split","loadChartData","limitedEnd","apiParams","entity_type","entity_id","start_date","end_date","response","getAnalyticsChartData","success","chart_data","console","message","handleMouseMove","event","current","svgRect","getBoundingClientRect","mouseX","clientX","left","width","padding","dataWidth","relativeX","max","min","dataIndex","round","clientY","handleMouseLeave","formatDate","dateStr","date","toLocaleDateString","month","day","formatROAS","value","toFixed","colorClass","hasEnoughData","some","d","daily_roas","daily_spend","daily_estimated_revenue","className","children","concat","height","values","map","minValue","maxValue","range","points","index","segments","i","startROAS","endROAS","midpointROAS","startConversions","parseInt","daily_mixpanel_purchases","endConversions","midpointConversions","segmentColor","push","path","color","ref","onMouseMove","onMouseLeave","segment","fill","stroke","strokeWidth","isHovered","dayConversions","dayColor","cx","cy","r","style","filter","top","transform","dayData","spend","revenue","backendROAS","calculatedROAS","roasMatch","abs","replace","title","accuracyRatio","period_accuracy_ratio","baseROAS","adjustedRevenue","adjustedROAS","daily_mixpanel_trials","daily_meta_trials","x1","y1","x2","y2","strokeDasharray"],"sources":["/Users/joshuakaufman/untitled folder 3/orchestrator/dashboard/client/src/components/dashboard/ROASSparkline.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { dashboardApi } from '../../services/dashboardApi';\n\nconst ROASSparkline = ({ \n  entityType, \n  entityId, \n  currentROAS,\n  conversionCount = 0,\n  breakdown = 'all',\n  startDate,\n  endDate \n}) => {\n  const [chartData, setChartData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [hoveredPoint, setHoveredPoint] = useState(null);\n  const [tooltipPosition, setTooltipPosition] = useState({ x: 0, y: 0 });\n  const svgRef = useRef(null);\n\n  // Get ROAS performance color with intensity based on conversion count\n  const getROASPerformanceColor = (roas, conversions = 0) => {\n    const roasValue = parseFloat(roas) || 0;\n    const hasSignificantData = conversions >= 5; // 5+ conversions = darker, <5 = lighter\n    \n    if (roasValue < 1.0) {\n      return hasSignificantData ? 'text-red-600' : 'text-red-400';\n    }\n    if (roasValue >= 1.0 && roasValue < 1.5) {\n      return hasSignificantData ? 'text-yellow-600' : 'text-yellow-400';\n    }\n    // >= 1.5\n    return hasSignificantData ? 'text-green-600' : 'text-green-400';\n  };\n\n  // Calculate limited date range (max 14 days)\n  const getLimitedDateRange = (start, end) => {\n    const startDate = new Date(start);\n    const endDate = new Date(end);\n    const daysDiff = Math.ceil((endDate - startDate) / (1000 * 60 * 60 * 24));\n    \n    if (daysDiff <= 14) {\n      return { start, end };\n    }\n    \n    // Take the last 14 days from the end date\n    const limitedStart = new Date(endDate);\n    limitedStart.setDate(limitedStart.getDate() - 13); // 13 days back + end date = 14 days\n    \n    return {\n      start: limitedStart.toISOString().split('T')[0],\n      end\n    };\n  };\n\n  // Load chart data\n  useEffect(() => {\n    const loadChartData = async () => {\n      if (!entityId || !startDate || !endDate) {\n        return;\n      }\n      \n      setLoading(true);\n      setError(null);\n      \n      try {\n        // Limit to 14 days maximum\n        const { start: limitedStart, end: limitedEnd } = getLimitedDateRange(startDate, endDate);\n        \n        const apiParams = {\n          entity_type: entityType,\n          entity_id: entityId,\n          breakdown: breakdown,\n          start_date: limitedStart,\n          end_date: limitedEnd\n        };\n        \n        const response = await dashboardApi.getAnalyticsChartData(apiParams);\n        \n        if (response && response.success && response.chart_data) {\n          setChartData(response.chart_data);\n        } else {\n          console.error('ROASSparkline: Invalid API response for', entityId, response);\n          setError('Invalid API response');\n        }\n      } catch (error) {\n        console.error('ROASSparkline: API call failed for', entityId, error.message);\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadChartData();\n  }, [entityType, entityId, breakdown, startDate, endDate]);\n\n  // Handle mouse move over SVG\n  const handleMouseMove = (event) => {\n    if (!svgRef.current || chartData.length < 2) return;\n    \n    const svgRect = svgRef.current.getBoundingClientRect();\n    const mouseX = event.clientX - svgRect.left;\n    \n    const width = 60;\n    const padding = 2;\n    const dataWidth = width - 2 * padding;\n    \n    // Calculate which data point is closest\n    const relativeX = Math.max(0, Math.min(dataWidth, mouseX - padding));\n    const dataIndex = Math.round((relativeX / dataWidth) * (chartData.length - 1));\n    \n    if (dataIndex >= 0 && dataIndex < chartData.length) {\n      setHoveredPoint(dataIndex);\n      setTooltipPosition({ \n        x: event.clientX, \n        y: event.clientY - 60 \n      });\n    }\n  };\n\n  const handleMouseLeave = () => {\n    setHoveredPoint(null);\n  };\n\n  // Format date for tooltip\n  const formatDate = (dateStr) => {\n    const date = new Date(dateStr);\n    return date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n  };\n\n  // Format ROAS value\n  const formatROAS = (value) => {\n    const roas = parseFloat(value) || 0;\n    return roas.toFixed(2);\n  };\n\n  // Calculate current ROAS color (using conversionCount passed as prop)\n  const colorClass = getROASPerformanceColor(currentROAS, conversionCount);\n  \n  // Check if we have enough valid data for sparkline\n  const hasEnoughData = chartData.length >= 2 && chartData.some(d => \n    parseFloat(d.daily_roas) > 0 || parseFloat(d.daily_spend) > 0 || parseFloat(d.daily_estimated_revenue) > 0\n  );\n\n  return (\n    <div className=\"flex items-center space-x-3 min-w-[120px] relative\">\n      {/* ROAS Value */}\n      <span className={`font-medium text-sm ${colorClass}`}>\n        {formatROAS(currentROAS)}\n      </span>\n      \n      {/* Sparkline Area */}\n      <div className=\"min-w-[60px] relative\">\n        {loading ? (\n          <div className=\"w-[60px] h-[20px] bg-blue-200 animate-pulse rounded flex items-center justify-center text-xs\">\n            ⏳\n          </div>\n        ) : error ? (\n          <div className=\"w-[60px] h-[20px] flex items-center justify-center text-red-400 text-xs border border-red-300\">\n            ❌\n          </div>\n        ) : hasEnoughData ? (\n          // Real sparkline using actual data\n          (() => {\n            const width = 60;\n            const height = 20;\n            const padding = 2;\n            \n            const values = chartData.map(d => parseFloat(d.daily_roas) || 0);\n            const minValue = Math.min(...values);\n            const maxValue = Math.max(...values);\n            const range = maxValue - minValue || 0.1; // Prevent division by zero\n            \n            const points = values.map((value, index) => {\n              const x = padding + (index / (values.length - 1)) * (width - 2 * padding);\n              const y = height - padding - ((value - minValue) / range) * (height - 2 * padding);\n              return `${x},${y}`;\n            });\n            \n            // Create colored segments using midpoint approach\n            const segments = [];\n            for (let i = 0; i < points.length - 1; i++) {\n              // Calculate midpoint ROAS and conversion values for segment coloring\n              const startROAS = values[i];\n              const endROAS = values[i + 1];\n              const midpointROAS = (startROAS + endROAS) / 2;\n              \n              const startConversions = parseInt(chartData[i].daily_mixpanel_purchases) || 0;\n              const endConversions = parseInt(chartData[i + 1].daily_mixpanel_purchases) || 0;\n              const midpointConversions = Math.round((startConversions + endConversions) / 2);\n              \n              const segmentColor = getROASPerformanceColor(midpointROAS, midpointConversions);\n              segments.push({\n                path: `M ${points[i]} L ${points[i + 1]}`,\n                color: segmentColor\n              });\n            }\n            \n            return (\n              <>\n                <svg \n                  ref={svgRef}\n                  width=\"60\" \n                  height=\"20\" \n                  className=\"overflow-visible cursor-crosshair\"\n                  onMouseMove={handleMouseMove}\n                  onMouseLeave={handleMouseLeave}\n                >\n                  {/* Render each segment with its own color */}\n                  {segments.map((segment, index) => (\n                    <path\n                      key={index}\n                      d={segment.path}\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth=\"1.5\"\n                      className={segment.color}\n                    />\n                  ))}\n                  {values.map((value, index) => {\n                    const x = padding + (index / (values.length - 1)) * (width - 2 * padding);\n                    const y = height - padding - ((value - minValue) / range) * (height - 2 * padding);\n                    const isHovered = hoveredPoint === index;\n                    const dayConversions = parseInt(chartData[index].daily_mixpanel_purchases) || 0;\n                    const dayColor = getROASPerformanceColor(value, dayConversions);\n                    \n                    return (\n                      <circle\n                        key={index}\n                        cx={x}\n                        cy={y}\n                        r={isHovered ? \"2.5\" : \"1\"}\n                        fill=\"currentColor\"\n                        className={dayColor}\n                        style={{\n                          filter: isHovered ? 'drop-shadow(0 0 3px rgba(0,0,0,0.3))' : 'none'\n                        }}\n                      />\n                    );\n                  })}\n                </svg>\n                \n                {/* Tooltip */}\n                {hoveredPoint !== null && (\n                  <div \n                    className=\"fixed z-50 bg-gray-900 text-white text-xs rounded px-2 py-1 pointer-events-none shadow-lg\"\n                    style={{\n                      left: tooltipPosition.x - 120, // Move tooltip to the left of cursor\n                      top: tooltipPosition.y,\n                      transform: 'none' // Remove centering transform\n                    }}\n                  >\n                    {(() => {\n                      const dayData = chartData[hoveredPoint];\n                      const spend = parseFloat(dayData.daily_spend) || 0;\n                      const revenue = parseFloat(dayData.daily_estimated_revenue) || 0;\n                      const backendROAS = parseFloat(dayData.daily_roas) || 0;\n                      \n                      // Verify ROAS calculation\n                      const calculatedROAS = spend > 0 ? revenue / spend : 0;\n                      const roasMatch = Math.abs(backendROAS - calculatedROAS) < 0.01;\n                      \n                      return (\n                        <>\n                          <div className=\"font-medium text-white\">\n                            {formatDate(dayData.date)}\n                          </div>\n                          <div className={getROASPerformanceColor(backendROAS, dayData.daily_mixpanel_purchases || 0).replace('text-', 'text-').replace('600', '400')}>\n                            ROAS: {formatROAS(backendROAS)}\n                            {!roasMatch && (\n                              <span className=\"text-yellow-400 ml-1\" title={`Calculated: ${calculatedROAS.toFixed(2)}`}>\n                                ⚠️\n                              </span>\n                            )}\n                          </div>\n                        </>\n                      );\n                    })()}\n                          <div className=\"text-gray-300 text-xs\">\n                            Spend: ${(parseFloat(chartData[hoveredPoint].daily_spend) || 0).toFixed(2)}\n                          </div>\n                          <div className=\"text-gray-300 text-xs\">\n                            Revenue: ${(parseFloat(chartData[hoveredPoint].daily_estimated_revenue) || 0).toFixed(2)}\n                          </div>\n                          {(() => {\n                            const spend = parseFloat(chartData[hoveredPoint].daily_spend) || 0;\n                            const revenue = parseFloat(chartData[hoveredPoint].daily_estimated_revenue) || 0;\n                            const accuracyRatio = parseFloat(chartData[hoveredPoint].period_accuracy_ratio) || 0;\n                            \n                            if (spend > 0) {\n                              const baseROAS = (revenue / spend).toFixed(2);\n                              \n                              if (accuracyRatio > 0 && accuracyRatio !== 1.0) {\n                                const adjustedRevenue = revenue / accuracyRatio;\n                                const adjustedROAS = (adjustedRevenue / spend).toFixed(2);\n                                return (\n                                  <div className=\"text-gray-400 text-xs\">\n                                    <div>Base: ${revenue.toFixed(2)} ÷ ${spend.toFixed(2)} = {baseROAS}</div>\n                                    <div>Ratio: {(accuracyRatio * 100).toFixed(1)}% (MP/Meta)</div>\n                                    <div>Adj: ${adjustedRevenue.toFixed(2)} ÷ ${spend.toFixed(2)} = {adjustedROAS}</div>\n                                  </div>\n                                );\n                              } else {\n                                return (\n                                  <div className=\"text-gray-400 text-xs\">\n                                    Calc: ${revenue.toFixed(2)} ÷ ${spend.toFixed(2)} = {baseROAS}\n                                  </div>\n                                );\n                              }\n                            }\n                            return null;\n                          })()}\n          {/* Show conversion counts for confidence assessment */}\n          <div className=\"text-green-300 text-xs\">\n            Conversions: {chartData[hoveredPoint].daily_mixpanel_purchases || 0}\n          </div>\n          <div className=\"text-blue-300 text-xs\">\n            Trials: {chartData[hoveredPoint].daily_mixpanel_trials || 0}\n          </div>\n          {/* Show Meta comparison if available */}\n          {chartData[hoveredPoint].daily_meta_trials && (\n            <div className=\"text-gray-400 text-xs\">\n              Meta Trials: {chartData[hoveredPoint].daily_meta_trials}\n            </div>\n          )}\n                  </div>\n                )}\n              </>\n            );\n          })()\n        ) : (\n          // No data placeholder - subtle dashed gray line\n          <div className=\"w-[60px] h-[20px] flex items-center justify-center\">\n            <svg width=\"60\" height=\"20\" className=\"overflow-visible\">\n              <line\n                x1=\"2\"\n                y1=\"10\"\n                x2=\"58\"\n                y2=\"10\"\n                stroke=\"currentColor\"\n                strokeWidth=\"1\"\n                strokeDasharray=\"2,2\"\n                className=\"text-gray-300 dark:text-gray-600\"\n              />\n            </svg>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ROASSparkline; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}