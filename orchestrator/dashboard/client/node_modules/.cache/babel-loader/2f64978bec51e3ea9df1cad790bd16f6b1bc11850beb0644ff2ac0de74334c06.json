{"ast":null,"code":"var _jsxFileName = \"/Users/joshuakaufman/untitled folder 3/orchestrator/dashboard/client/src/components/dashboard/DashboardControls.jsx\",\n  _s = $RefreshSig$();\n// Dashboard Controls Component\n// \n// Provides the main controls for the dashboard including date range selection,\n// configuration dropdown, and data refresh functionality.\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Calendar, RefreshCw, Settings, Database, Clock, Eye, ChevronDown, ChevronUp, ArrowUp, ArrowDown } from 'lucide-react';\n\n// Define all available columns with their display names and default visibility\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AVAILABLE_COLUMNS = [{\n  key: 'name',\n  label: 'Name',\n  defaultVisible: true,\n  alwaysVisible: true\n},\n// Always visible\n{\n  key: 'campaign_name',\n  label: 'Campaign',\n  defaultVisible: true\n}, {\n  key: 'adset_name',\n  label: 'Ad Set',\n  defaultVisible: true\n}, {\n  key: 'impressions',\n  label: 'Impressions',\n  defaultVisible: true\n}, {\n  key: 'clicks',\n  label: 'Clicks',\n  defaultVisible: true\n}, {\n  key: 'spend',\n  label: 'Spend',\n  defaultVisible: true\n}, {\n  key: 'meta_trials_started',\n  label: 'Trials (Meta)',\n  defaultVisible: true\n}, {\n  key: 'mixpanel_trials_started',\n  label: 'Trials (Mixpanel)',\n  defaultVisible: true\n}, {\n  key: 'meta_purchases',\n  label: 'Purchases (Meta)',\n  defaultVisible: true\n}, {\n  key: 'mixpanel_purchases',\n  label: 'Purchases (Mixpanel)',\n  defaultVisible: true\n}, {\n  key: 'trial_accuracy_ratio',\n  label: 'Trial Accuracy Ratio',\n  defaultVisible: true\n}, {\n  key: 'mixpanel_trials_ended',\n  label: 'Trials Ended (Mixpanel)',\n  defaultVisible: false\n}, {\n  key: 'mixpanel_trials_in_progress',\n  label: 'Trials In Progress (Mixpanel)',\n  defaultVisible: false\n}, {\n  key: 'mixpanel_refunds_usd',\n  label: 'Refunds (Mixpanel)',\n  defaultVisible: true\n}, {\n  key: 'mixpanel_revenue_usd',\n  label: 'Revenue (Mixpanel)',\n  defaultVisible: true\n}, {\n  key: 'mixpanel_conversions_net_refunds',\n  label: 'Net Conversions (Mixpanel)',\n  defaultVisible: false\n}, {\n  key: 'mixpanel_cost_per_trial',\n  label: 'Cost per Trial (Mixpanel)',\n  defaultVisible: true\n}, {\n  key: 'mixpanel_cost_per_purchase',\n  label: 'Cost per Purchase (Mixpanel)',\n  defaultVisible: true\n}, {\n  key: 'meta_cost_per_trial',\n  label: 'Cost per Trial (Meta)',\n  defaultVisible: false\n}, {\n  key: 'meta_cost_per_purchase',\n  label: 'Cost per Purchase (Meta)',\n  defaultVisible: false\n}, {\n  key: 'click_to_trial_rate',\n  label: 'Click to Trial Rate',\n  defaultVisible: true\n}, {\n  key: 'trial_conversion_rate',\n  label: 'Trial Conversion Rate',\n  defaultVisible: true\n}, {\n  key: 'avg_trial_refund_rate',\n  label: 'Trial Refund Rate',\n  defaultVisible: true\n}, {\n  key: 'purchase_accuracy_ratio',\n  label: 'Purchase Accuracy Ratio',\n  defaultVisible: false\n}, {\n  key: 'purchase_refund_rate',\n  label: 'Purchase Refund Rate',\n  defaultVisible: true\n}, {\n  key: 'estimated_revenue_usd',\n  label: 'Estimated Revenue',\n  defaultVisible: true\n}, {\n  key: 'profit',\n  label: 'Profit',\n  defaultVisible: true\n}, {\n  key: 'estimated_roas',\n  label: 'ROAS',\n  defaultVisible: true\n}, {\n  key: 'segment_accuracy_average',\n  label: 'Avg. Accuracy',\n  defaultVisible: true\n}];\nconst DashboardControls = ({\n  onRefresh,\n  isLoading = false,\n  configurations = {},\n  selectedConfig = null,\n  // Changed from 'basic_ad_data' to null\n  onConfigChange,\n  lastUpdated = null,\n  onGetCurrentParams = null,\n  // New prop to get current params\n  onColumnVisibilityChange = null,\n  // New prop to pass column visibility changes\n  onColumnOrderChange = null // New prop to pass column order changes\n}) => {\n  _s();\n  // Date range state with default values\n  const [dateRange, setDateRange] = useState({\n    start_date: '2025-05-01',\n    end_date: '2025-05-31'\n  });\n\n  // Breakdown selection state for analytics API\n  const [breakdown, setBreakdown] = useState('all');\n\n  // Column visibility state\n  const [columnVisibility, setColumnVisibility] = useState({});\n\n  // Column order state - array of column keys in display order\n  const [columnOrder, setColumnOrder] = useState(AVAILABLE_COLUMNS.map(col => col.key));\n  const [isColumnSelectorOpen, setIsColumnSelectorOpen] = useState(false);\n\n  // Ref for the dropdown container\n  const dropdownRef = useRef(null);\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsColumnSelectorOpen(false);\n      }\n    };\n    if (isColumnSelectorOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n      return () => {\n        document.removeEventListener('mousedown', handleClickOutside);\n      };\n    }\n  }, [isColumnSelectorOpen]);\n\n  // Load saved date range from localStorage on component mount\n  useEffect(() => {\n    const savedDateRange = localStorage.getItem('dashboard_date_range');\n    if (savedDateRange) {\n      try {\n        const parsed = JSON.parse(savedDateRange);\n        setDateRange(parsed);\n      } catch (e) {\n        console.warn('Failed to parse saved date range:', e);\n      }\n    }\n  }, []);\n\n  // Load saved breakdown from localStorage on component mount\n  useEffect(() => {\n    const savedBreakdown = localStorage.getItem('dashboard_breakdown');\n    if (savedBreakdown) {\n      setBreakdown(savedBreakdown);\n    }\n  }, []);\n\n  // Load saved column visibility from localStorage on component mount\n  useEffect(() => {\n    const savedVisibility = localStorage.getItem('dashboard_column_visibility');\n    if (savedVisibility) {\n      try {\n        const parsed = JSON.parse(savedVisibility);\n        setColumnVisibility(parsed);\n      } catch (e) {\n        console.warn('Failed to parse saved column visibility:', e);\n        // Set default visibility if parsing fails\n        const defaultVisibility = {};\n        AVAILABLE_COLUMNS.forEach(col => {\n          defaultVisibility[col.key] = col.defaultVisible;\n        });\n        setColumnVisibility(defaultVisibility);\n      }\n    } else {\n      // Set default visibility if no saved state\n      const defaultVisibility = {};\n      AVAILABLE_COLUMNS.forEach(col => {\n        defaultVisibility[col.key] = col.defaultVisible;\n      });\n      setColumnVisibility(defaultVisibility);\n    }\n  }, []);\n\n  // Load saved column order from localStorage on component mount\n  useEffect(() => {\n    const savedOrder = localStorage.getItem('dashboard_column_order');\n    if (savedOrder) {\n      try {\n        const parsed = JSON.parse(savedOrder);\n        // Validate that all current columns are in the saved order\n        const currentKeys = AVAILABLE_COLUMNS.map(col => col.key);\n        const validOrder = parsed.filter(key => currentKeys.includes(key));\n\n        // Add any new columns that weren't in the saved order\n        const missingKeys = currentKeys.filter(key => !validOrder.includes(key));\n        const finalOrder = [...validOrder, ...missingKeys];\n        setColumnOrder(finalOrder);\n      } catch (e) {\n        console.warn('Failed to parse saved column order:', e);\n      }\n    }\n  }, []);\n\n  // Save date range to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('dashboard_date_range', JSON.stringify(dateRange));\n  }, [dateRange]);\n\n  // Save breakdown to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('dashboard_breakdown', breakdown);\n  }, [breakdown]);\n\n  // Save column visibility to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('dashboard_column_visibility', JSON.stringify(columnVisibility));\n    // Notify parent component about column visibility changes\n    if (onColumnVisibilityChange) {\n      onColumnVisibilityChange(columnVisibility);\n    }\n  }, [columnVisibility]); // Remove onColumnVisibilityChange from dependencies\n\n  // Save column order to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('dashboard_column_order', JSON.stringify(columnOrder));\n    // Notify parent component about column order changes\n    if (onColumnOrderChange) {\n      onColumnOrderChange(columnOrder);\n    }\n  }, [columnOrder]); // Remove onColumnOrderChange from dependencies\n\n  // Provide current params to parent component whenever they change\n  useEffect(() => {\n    if (onGetCurrentParams) {\n      const currentParams = {\n        ...dateRange,\n        config_key: selectedConfig,\n        breakdown: breakdown\n      };\n      onGetCurrentParams(currentParams);\n    }\n  }, [dateRange, selectedConfig, breakdown]); // Remove onGetCurrentParams from dependencies\n\n  const handleDateChange = (field, value) => {\n    setDateRange(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const handleRefresh = () => {\n    if (onRefresh && selectedConfig) {\n      onRefresh({\n        ...dateRange,\n        config_key: selectedConfig,\n        breakdown: breakdown\n      });\n    }\n  };\n  const handleColumnToggle = columnKey => {\n    setColumnVisibility(prev => ({\n      ...prev,\n      [columnKey]: !prev[columnKey]\n    }));\n  };\n  const handleSelectAll = () => {\n    const newVisibility = {};\n    AVAILABLE_COLUMNS.forEach(col => {\n      newVisibility[col.key] = true;\n    });\n    setColumnVisibility(newVisibility);\n  };\n  const handleSelectNone = () => {\n    const newVisibility = {};\n    AVAILABLE_COLUMNS.forEach(col => {\n      // Always keep name column visible\n      newVisibility[col.key] = col.alwaysVisible || false;\n    });\n    setColumnVisibility(newVisibility);\n  };\n  const handleResetToDefaults = () => {\n    const defaultVisibility = {};\n    AVAILABLE_COLUMNS.forEach(col => {\n      defaultVisibility[col.key] = col.defaultVisible;\n    });\n    setColumnVisibility(defaultVisibility);\n\n    // Reset column order too\n    setColumnOrder(AVAILABLE_COLUMNS.map(col => col.key));\n  };\n  const moveColumn = (columnKey, direction) => {\n    const currentIndex = columnOrder.indexOf(columnKey);\n    if (currentIndex === -1) return;\n    let newIndex;\n    if (direction === 'up') {\n      newIndex = currentIndex - 1;\n    } else {\n      newIndex = currentIndex + 1;\n    }\n\n    // Prevent moving beyond bounds or into the name column position (index 0)\n    if (newIndex < 1 || newIndex >= columnOrder.length) return;\n    const newOrder = [...columnOrder];\n    const [movedColumn] = newOrder.splice(currentIndex, 1);\n    newOrder.splice(newIndex, 0, movedColumn);\n    setColumnOrder(newOrder);\n  };\n  const formatLastUpdated = timestamp => {\n    if (!timestamp) return 'Never';\n    try {\n      return new Date(timestamp).toLocaleString();\n    } catch (e) {\n      return 'Invalid date';\n    }\n  };\n  const visibleColumnsCount = Object.values(columnVisibility).filter(Boolean).length;\n\n  // Get ordered columns for display in dropdown\n  const orderedColumns = columnOrder.map(key => AVAILABLE_COLUMNS.find(col => col.key === key)).filter(Boolean);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white dark:bg-gray-800 rounded-lg shadow-soft p-6 mb-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold text-gray-900 dark:text-gray-100 flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Settings, {\n          size: 20,\n          className: \"mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), \"Dashboard Controls\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), lastUpdated && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center text-sm text-gray-500 dark:text-gray-400\",\n        children: [/*#__PURE__*/_jsxDEV(Clock, {\n          size: 14,\n          className: \"mr-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this), \"Last updated: \", formatLastUpdated(lastUpdated)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-4 gap-4 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700 dark:text-gray-300\",\n          children: [/*#__PURE__*/_jsxDEV(Calendar, {\n            size: 16,\n            className: \"inline mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), \"Date Range\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-xs text-gray-500 mb-1\",\n              children: \"Start Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: dateRange.start_date,\n              onChange: e => handleDateChange('start_date', e.target.value),\n              className: \"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md  bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-xs text-gray-500 mb-1\",\n              children: \"End Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: dateRange.end_date,\n              onChange: e => handleDateChange('end_date', e.target.value),\n              className: \"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md  bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700 dark:text-gray-300\",\n          children: [/*#__PURE__*/_jsxDEV(Database, {\n            size: 16,\n            className: \"inline mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this), \"Data Configuration\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedConfig || '',\n          onChange: e => onConfigChange && onConfigChange(e.target.value),\n          className: \"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md  bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm\",\n          children: [!selectedConfig && /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Loading configurations...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 15\n          }, this), Object.entries(configurations).map(([key, config]) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: key,\n            children: [config.name, config.day_count ? ` (${config.day_count} days)` : '', config.is_default ? ' - Default' : '']\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this), configurations[selectedConfig] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-500 dark:text-gray-400 mt-1 space-y-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: configurations[selectedConfig].description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this), configurations[selectedConfig].date_range && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(Calendar, {\n              size: 12,\n              className: \"mr-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 19\n            }, this), \"Available: \", configurations[selectedConfig].date_range]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 17\n          }, this), configurations[selectedConfig].day_count && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(Database, {\n              size: 12,\n              className: \"mr-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 19\n            }, this), configurations[selectedConfig].day_count, \" days of data\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700 dark:text-gray-300\",\n          children: [/*#__PURE__*/_jsxDEV(Settings, {\n            size: 16,\n            className: \"inline mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this), \"Data Breakdown\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: breakdown,\n          onChange: e => setBreakdown(e.target.value),\n          className: \"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md  bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"all\",\n            children: \"All Data (Combined View)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"country\",\n            children: \"By Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"region\",\n            children: \"By Region\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"device\",\n            children: \"By Device Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-500 dark:text-gray-400\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Controls which analytics table is used for data aggregation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-2 relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700 dark:text-gray-300\",\n          children: [/*#__PURE__*/_jsxDEV(Eye, {\n            size: 16,\n            className: \"inline mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 13\n          }, this), \"Column Visibility\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsColumnSelectorOpen(!isColumnSelectorOpen),\n          className: \"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md  bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [visibleColumnsCount, \" columns visible\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 13\n          }, this), isColumnSelectorOpen ? /*#__PURE__*/_jsxDEV(ChevronUp, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(ChevronDown, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 63\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this), isColumnSelectorOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: dropdownRef,\n          className: \"absolute top-full left-0 right-0 z-50 mt-1 bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-md shadow-lg max-h-[480px] overflow-y-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-3 border-b border-gray-200 dark:border-gray-600 sticky top-0 bg-white dark:bg-gray-700 z-10\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex space-x-2 mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleSelectAll,\n                className: \"px-2 py-1 text-xs bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300 rounded hover:bg-blue-200 dark:hover:bg-blue-800\",\n                children: \"Select All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleSelectNone,\n                className: \"px-2 py-1 text-xs bg-gray-100 dark:bg-gray-600 text-gray-700 dark:text-gray-300 rounded hover:bg-gray-200 dark:hover:bg-gray-500\",\n                children: \"Select None\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleResetToDefaults,\n                className: \"px-2 py-1 text-xs bg-green-100 dark:bg-green-900 text-green-700 dark:text-green-300 rounded hover:bg-green-200 dark:hover:bg-green-800\",\n                children: \"Reset to Defaults\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-gray-500 dark:text-gray-400\",\n              children: \"\\uD83D\\uDCA1 Tip: Drag column headers in the table or use arrows below to reorder\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-3 space-y-2\",\n            children: orderedColumns.map((column, index) => {\n              const canMoveUp = index > 1; // Skip name column (index 0) and first moveable column\n              const canMoveDown = index < orderedColumns.length - 1;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center group\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: columnVisibility[column.key] || false,\n                  onChange: () => handleColumnToggle(column.key),\n                  disabled: column.alwaysVisible,\n                  className: \"mr-3 h-4 w-4 text-blue-600 rounded border-gray-300 dark:border-gray-500 focus:ring-blue-500\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 459,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `flex-1 text-sm ${column.alwaysVisible ? 'text-gray-500 dark:text-gray-400' : 'text-gray-700 dark:text-gray-300 group-hover:text-gray-900 dark:group-hover:text-gray-100'}`,\n                  children: [column.label, column.alwaysVisible && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"ml-1 text-xs\",\n                    children: \"(always visible)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 472,\n                    columnNumber: 50\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 23\n                }, this), !column.alwaysVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center space-x-1 ml-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => moveColumn(column.key, 'up'),\n                    disabled: !canMoveUp,\n                    className: `p-1 rounded ${canMoveUp ? 'text-gray-600 dark:text-gray-400 hover:text-blue-600 dark:hover:text-blue-400 hover:bg-gray-200 dark:hover:bg-gray-500' : 'text-gray-300 dark:text-gray-600 cursor-not-allowed'}`,\n                    title: \"Move up\",\n                    children: /*#__PURE__*/_jsxDEV(ArrowUp, {\n                      size: 12\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 486,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 478,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => moveColumn(column.key, 'down'),\n                    disabled: !canMoveDown,\n                    className: `p-1 rounded ${canMoveDown ? 'text-gray-600 dark:text-gray-400 hover:text-blue-600 dark:hover:text-blue-400 hover:bg-gray-200 dark:hover:bg-gray-500' : 'text-gray-300 dark:text-gray-600 cursor-not-allowed'}`,\n                    title: \"Move down\",\n                    children: /*#__PURE__*/_jsxDEV(ArrowDown, {\n                      size: 12\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 496,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 488,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 25\n                }, this)]\n              }, column.key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700 dark:text-gray-300\",\n          children: \"Action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRefresh,\n          disabled: isLoading || !selectedConfig,\n          className: `w-full flex items-center justify-center px-4 py-2 rounded-md text-sm font-medium\n                       ${isLoading || !selectedConfig ? 'bg-gray-300 dark:bg-gray-600 text-gray-500 dark:text-gray-400 cursor-not-allowed' : 'bg-blue-600 hover:bg-blue-700 text-white'} transition-colors duration-200`,\n          children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n            size: 16,\n            className: `mr-2 ${isLoading ? 'animate-spin' : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 13\n          }, this), isLoading ? 'Refreshing...' : !selectedConfig ? 'Select Configuration' : 'Refresh Data']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 287,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardControls, \"RlRP4e+e8GZ7hfHqZSLzjg58yng=\");\n_c = DashboardControls;\nexport { DashboardControls, AVAILABLE_COLUMNS };\nvar _c;\n$RefreshReg$(_c, \"DashboardControls\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Calendar","RefreshCw","Settings","Database","Clock","Eye","ChevronDown","ChevronUp","ArrowUp","ArrowDown","jsxDEV","_jsxDEV","AVAILABLE_COLUMNS","key","label","defaultVisible","alwaysVisible","DashboardControls","onRefresh","isLoading","configurations","selectedConfig","onConfigChange","lastUpdated","onGetCurrentParams","onColumnVisibilityChange","onColumnOrderChange","_s","dateRange","setDateRange","start_date","end_date","breakdown","setBreakdown","columnVisibility","setColumnVisibility","columnOrder","setColumnOrder","map","col","isColumnSelectorOpen","setIsColumnSelectorOpen","dropdownRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","savedDateRange","localStorage","getItem","parsed","JSON","parse","e","console","warn","savedBreakdown","savedVisibility","defaultVisibility","forEach","savedOrder","currentKeys","validOrder","filter","includes","missingKeys","finalOrder","setItem","stringify","currentParams","config_key","handleDateChange","field","value","prev","handleRefresh","handleColumnToggle","columnKey","handleSelectAll","newVisibility","handleSelectNone","handleResetToDefaults","moveColumn","direction","currentIndex","indexOf","newIndex","length","newOrder","movedColumn","splice","formatLastUpdated","timestamp","Date","toLocaleString","visibleColumnsCount","Object","values","Boolean","orderedColumns","find","className","children","size","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","disabled","entries","config","name","day_count","is_default","description","date_range","onClick","ref","column","index","canMoveUp","canMoveDown","checked","title","_c","$RefreshReg$"],"sources":["/Users/joshuakaufman/untitled folder 3/orchestrator/dashboard/client/src/components/dashboard/DashboardControls.jsx"],"sourcesContent":["// Dashboard Controls Component\n// \n// Provides the main controls for the dashboard including date range selection,\n// configuration dropdown, and data refresh functionality.\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Calendar, RefreshCw, Settings, Database, Clock, Eye, ChevronDown, ChevronUp, ArrowUp, ArrowDown } from 'lucide-react';\n\n// Define all available columns with their display names and default visibility\nconst AVAILABLE_COLUMNS = [\n  { key: 'name', label: 'Name', defaultVisible: true, alwaysVisible: true }, // Always visible\n  { key: 'campaign_name', label: 'Campaign', defaultVisible: true },\n  { key: 'adset_name', label: 'Ad Set', defaultVisible: true },\n  { key: 'impressions', label: 'Impressions', defaultVisible: true },\n  { key: 'clicks', label: 'Clicks', defaultVisible: true },\n  { key: 'spend', label: 'Spend', defaultVisible: true },\n  { key: 'meta_trials_started', label: 'Trials (Meta)', defaultVisible: true },\n  { key: 'mixpanel_trials_started', label: 'Trials (Mixpanel)', defaultVisible: true },\n  { key: 'meta_purchases', label: 'Purchases (Meta)', defaultVisible: true },\n  { key: 'mixpanel_purchases', label: 'Purchases (Mixpanel)', defaultVisible: true },\n  { key: 'trial_accuracy_ratio', label: 'Trial Accuracy Ratio', defaultVisible: true },\n  { key: 'mixpanel_trials_ended', label: 'Trials Ended (Mixpanel)', defaultVisible: false },\n  { key: 'mixpanel_trials_in_progress', label: 'Trials In Progress (Mixpanel)', defaultVisible: false },\n  { key: 'mixpanel_refunds_usd', label: 'Refunds (Mixpanel)', defaultVisible: true },\n  { key: 'mixpanel_revenue_usd', label: 'Revenue (Mixpanel)', defaultVisible: true },\n  { key: 'mixpanel_conversions_net_refunds', label: 'Net Conversions (Mixpanel)', defaultVisible: false },\n  { key: 'mixpanel_cost_per_trial', label: 'Cost per Trial (Mixpanel)', defaultVisible: true },\n  { key: 'mixpanel_cost_per_purchase', label: 'Cost per Purchase (Mixpanel)', defaultVisible: true },\n  { key: 'meta_cost_per_trial', label: 'Cost per Trial (Meta)', defaultVisible: false },\n  { key: 'meta_cost_per_purchase', label: 'Cost per Purchase (Meta)', defaultVisible: false },\n  { key: 'click_to_trial_rate', label: 'Click to Trial Rate', defaultVisible: true },\n  { key: 'trial_conversion_rate', label: 'Trial Conversion Rate', defaultVisible: true },\n  { key: 'avg_trial_refund_rate', label: 'Trial Refund Rate', defaultVisible: true },\n  { key: 'purchase_accuracy_ratio', label: 'Purchase Accuracy Ratio', defaultVisible: false },\n  { key: 'purchase_refund_rate', label: 'Purchase Refund Rate', defaultVisible: true },\n  { key: 'estimated_revenue_usd', label: 'Estimated Revenue', defaultVisible: true },\n  { key: 'profit', label: 'Profit', defaultVisible: true },\n  { key: 'estimated_roas', label: 'ROAS', defaultVisible: true },\n  { key: 'segment_accuracy_average', label: 'Avg. Accuracy', defaultVisible: true }\n];\n\nconst DashboardControls = ({ \n  onRefresh, \n  isLoading = false, \n  configurations = {}, \n  selectedConfig = null,  // Changed from 'basic_ad_data' to null\n  onConfigChange,\n  lastUpdated = null,\n  onGetCurrentParams = null,  // New prop to get current params\n  onColumnVisibilityChange = null,  // New prop to pass column visibility changes\n  onColumnOrderChange = null  // New prop to pass column order changes\n}) => {\n  // Date range state with default values\n  const [dateRange, setDateRange] = useState({\n    start_date: '2025-05-01',\n    end_date: '2025-05-31'\n  });\n\n  // Breakdown selection state for analytics API\n  const [breakdown, setBreakdown] = useState('all');\n\n  // Column visibility state\n  const [columnVisibility, setColumnVisibility] = useState({});\n  \n  // Column order state - array of column keys in display order\n  const [columnOrder, setColumnOrder] = useState(AVAILABLE_COLUMNS.map(col => col.key));\n  \n  const [isColumnSelectorOpen, setIsColumnSelectorOpen] = useState(false);\n  \n  // Ref for the dropdown container\n  const dropdownRef = useRef(null);\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsColumnSelectorOpen(false);\n      }\n    };\n\n    if (isColumnSelectorOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n      return () => {\n        document.removeEventListener('mousedown', handleClickOutside);\n      };\n    }\n  }, [isColumnSelectorOpen]);\n\n  // Load saved date range from localStorage on component mount\n  useEffect(() => {\n    const savedDateRange = localStorage.getItem('dashboard_date_range');\n    if (savedDateRange) {\n      try {\n        const parsed = JSON.parse(savedDateRange);\n        setDateRange(parsed);\n      } catch (e) {\n        console.warn('Failed to parse saved date range:', e);\n      }\n    }\n  }, []);\n\n  // Load saved breakdown from localStorage on component mount\n  useEffect(() => {\n    const savedBreakdown = localStorage.getItem('dashboard_breakdown');\n    if (savedBreakdown) {\n      setBreakdown(savedBreakdown);\n    }\n  }, []);\n\n  // Load saved column visibility from localStorage on component mount\n  useEffect(() => {\n    const savedVisibility = localStorage.getItem('dashboard_column_visibility');\n    if (savedVisibility) {\n      try {\n        const parsed = JSON.parse(savedVisibility);\n        setColumnVisibility(parsed);\n      } catch (e) {\n        console.warn('Failed to parse saved column visibility:', e);\n        // Set default visibility if parsing fails\n        const defaultVisibility = {};\n        AVAILABLE_COLUMNS.forEach(col => {\n          defaultVisibility[col.key] = col.defaultVisible;\n        });\n        setColumnVisibility(defaultVisibility);\n      }\n    } else {\n      // Set default visibility if no saved state\n      const defaultVisibility = {};\n      AVAILABLE_COLUMNS.forEach(col => {\n        defaultVisibility[col.key] = col.defaultVisible;\n      });\n      setColumnVisibility(defaultVisibility);\n    }\n  }, []);\n\n  // Load saved column order from localStorage on component mount\n  useEffect(() => {\n    const savedOrder = localStorage.getItem('dashboard_column_order');\n    if (savedOrder) {\n      try {\n        const parsed = JSON.parse(savedOrder);\n        // Validate that all current columns are in the saved order\n        const currentKeys = AVAILABLE_COLUMNS.map(col => col.key);\n        const validOrder = parsed.filter(key => currentKeys.includes(key));\n        \n        // Add any new columns that weren't in the saved order\n        const missingKeys = currentKeys.filter(key => !validOrder.includes(key));\n        const finalOrder = [...validOrder, ...missingKeys];\n        \n        setColumnOrder(finalOrder);\n      } catch (e) {\n        console.warn('Failed to parse saved column order:', e);\n      }\n    }\n  }, []);\n\n  // Save date range to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('dashboard_date_range', JSON.stringify(dateRange));\n  }, [dateRange]);\n\n  // Save breakdown to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('dashboard_breakdown', breakdown);\n  }, [breakdown]);\n\n  // Save column visibility to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('dashboard_column_visibility', JSON.stringify(columnVisibility));\n    // Notify parent component about column visibility changes\n    if (onColumnVisibilityChange) {\n      onColumnVisibilityChange(columnVisibility);\n    }\n  }, [columnVisibility]); // Remove onColumnVisibilityChange from dependencies\n\n  // Save column order to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('dashboard_column_order', JSON.stringify(columnOrder));\n    // Notify parent component about column order changes\n    if (onColumnOrderChange) {\n      onColumnOrderChange(columnOrder);\n    }\n  }, [columnOrder]); // Remove onColumnOrderChange from dependencies\n\n  // Provide current params to parent component whenever they change\n  useEffect(() => {\n    if (onGetCurrentParams) {\n      const currentParams = {\n        ...dateRange,\n        config_key: selectedConfig,\n        breakdown: breakdown\n      };\n      onGetCurrentParams(currentParams);\n    }\n  }, [dateRange, selectedConfig, breakdown]); // Remove onGetCurrentParams from dependencies\n\n  const handleDateChange = (field, value) => {\n    setDateRange(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  const handleRefresh = () => {\n    if (onRefresh && selectedConfig) {\n      onRefresh({\n        ...dateRange,\n        config_key: selectedConfig,\n        breakdown: breakdown\n      });\n    }\n  };\n\n  const handleColumnToggle = (columnKey) => {\n    setColumnVisibility(prev => ({\n      ...prev,\n      [columnKey]: !prev[columnKey]\n    }));\n  };\n\n  const handleSelectAll = () => {\n    const newVisibility = {};\n    AVAILABLE_COLUMNS.forEach(col => {\n      newVisibility[col.key] = true;\n    });\n    setColumnVisibility(newVisibility);\n  };\n\n  const handleSelectNone = () => {\n    const newVisibility = {};\n    AVAILABLE_COLUMNS.forEach(col => {\n      // Always keep name column visible\n      newVisibility[col.key] = col.alwaysVisible || false;\n    });\n    setColumnVisibility(newVisibility);\n  };\n\n  const handleResetToDefaults = () => {\n    const defaultVisibility = {};\n    AVAILABLE_COLUMNS.forEach(col => {\n      defaultVisibility[col.key] = col.defaultVisible;\n    });\n    setColumnVisibility(defaultVisibility);\n    \n    // Reset column order too\n    setColumnOrder(AVAILABLE_COLUMNS.map(col => col.key));\n  };\n\n  const moveColumn = (columnKey, direction) => {\n    const currentIndex = columnOrder.indexOf(columnKey);\n    if (currentIndex === -1) return;\n    \n    let newIndex;\n    if (direction === 'up') {\n      newIndex = currentIndex - 1;\n    } else {\n      newIndex = currentIndex + 1;\n    }\n    \n    // Prevent moving beyond bounds or into the name column position (index 0)\n    if (newIndex < 1 || newIndex >= columnOrder.length) return;\n    \n    const newOrder = [...columnOrder];\n    const [movedColumn] = newOrder.splice(currentIndex, 1);\n    newOrder.splice(newIndex, 0, movedColumn);\n    \n    setColumnOrder(newOrder);\n  };\n\n  const formatLastUpdated = (timestamp) => {\n    if (!timestamp) return 'Never';\n    try {\n      return new Date(timestamp).toLocaleString();\n    } catch (e) {\n      return 'Invalid date';\n    }\n  };\n\n  const visibleColumnsCount = Object.values(columnVisibility).filter(Boolean).length;\n\n  // Get ordered columns for display in dropdown\n  const orderedColumns = columnOrder.map(key => \n    AVAILABLE_COLUMNS.find(col => col.key === key)\n  ).filter(Boolean);\n\n  return (\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-soft p-6 mb-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between mb-6\">\n        <h2 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100 flex items-center\">\n          <Settings size={20} className=\"mr-2\" />\n          Dashboard Controls\n        </h2>\n        \n        {lastUpdated && (\n          <div className=\"flex items-center text-sm text-gray-500 dark:text-gray-400\">\n            <Clock size={14} className=\"mr-1\" />\n            Last updated: {formatLastUpdated(lastUpdated)}\n          </div>\n        )}\n      </div>\n\n      {/* Controls Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-4\">\n        {/* Date Range */}\n        <div className=\"space-y-2\">\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\n            <Calendar size={16} className=\"inline mr-2\" />\n            Date Range\n          </label>\n          <div className=\"grid grid-cols-2 gap-2\">\n            <div>\n              <label className=\"block text-xs text-gray-500 mb-1\">Start Date</label>\n              <input\n                type=\"date\"\n                value={dateRange.start_date}\n                onChange={(e) => handleDateChange('start_date', e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md \n                         bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\n                         focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-xs text-gray-500 mb-1\">End Date</label>\n              <input\n                type=\"date\"\n                value={dateRange.end_date}\n                onChange={(e) => handleDateChange('end_date', e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md \n                         bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\n                         focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm\"\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Configuration Dropdown */}\n        <div className=\"space-y-2\">\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\n            <Database size={16} className=\"inline mr-2\" />\n            Data Configuration\n          </label>\n          <select\n            value={selectedConfig || ''}\n            onChange={(e) => onConfigChange && onConfigChange(e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md \n                     bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\n                     focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm\"\n          >\n            {!selectedConfig && (\n              <option value=\"\" disabled>\n                Loading configurations...\n              </option>\n            )}\n            {Object.entries(configurations).map(([key, config]) => (\n              <option key={key} value={key}>\n                {config.name}\n                {config.day_count ? ` (${config.day_count} days)` : ''}\n                {config.is_default ? ' - Default' : ''}\n              </option>\n            ))}\n          </select>\n          {configurations[selectedConfig] && (\n            <div className=\"text-xs text-gray-500 dark:text-gray-400 mt-1 space-y-1\">\n              <p>{configurations[selectedConfig].description}</p>\n              {configurations[selectedConfig].date_range && (\n                <p className=\"flex items-center\">\n                  <Calendar size={12} className=\"mr-1\" />\n                  Available: {configurations[selectedConfig].date_range}\n                </p>\n              )}\n              {configurations[selectedConfig].day_count && (\n                <p className=\"flex items-center\">\n                  <Database size={12} className=\"mr-1\" />\n                  {configurations[selectedConfig].day_count} days of data\n                </p>\n              )}\n            </div>\n          )}\n        </div>\n\n        {/* Breakdown Selection - NEW ANALYTICS API FEATURE */}\n        <div className=\"space-y-2\">\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\n            <Settings size={16} className=\"inline mr-2\" />\n            Data Breakdown\n          </label>\n          <select\n            value={breakdown}\n            onChange={(e) => setBreakdown(e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md \n                     bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\n                     focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm\"\n          >\n            <option value=\"all\">All Data (Combined View)</option>\n            <option value=\"country\">By Country</option>\n            <option value=\"region\">By Region</option>\n            <option value=\"device\">By Device Type</option>\n          </select>\n          <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n            <p>Controls which analytics table is used for data aggregation</p>\n          </div>\n        </div>\n\n        {/* Column Selection */}\n        <div className=\"space-y-2 relative\">\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\n            <Eye size={16} className=\"inline mr-2\" />\n            Column Visibility\n          </label>\n          <button\n            onClick={() => setIsColumnSelectorOpen(!isColumnSelectorOpen)}\n            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md \n                     bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\n                     focus:outline-none focus:ring-2 focus:ring-blue-500 text-sm\n                     flex items-center justify-between\"\n          >\n            <span>{visibleColumnsCount} columns visible</span>\n            {isColumnSelectorOpen ? <ChevronUp size={16} /> : <ChevronDown size={16} />}\n          </button>\n          \n          {isColumnSelectorOpen && (\n            <div ref={dropdownRef} className=\"absolute top-full left-0 right-0 z-50 mt-1 bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-md shadow-lg max-h-[480px] overflow-y-auto\">\n              {/* Quick Actions */}\n              <div className=\"p-3 border-b border-gray-200 dark:border-gray-600 sticky top-0 bg-white dark:bg-gray-700 z-10\">\n                <div className=\"flex space-x-2 mb-2\">\n                  <button\n                    onClick={handleSelectAll}\n                    className=\"px-2 py-1 text-xs bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300 rounded hover:bg-blue-200 dark:hover:bg-blue-800\"\n                  >\n                    Select All\n                  </button>\n                  <button\n                    onClick={handleSelectNone}\n                    className=\"px-2 py-1 text-xs bg-gray-100 dark:bg-gray-600 text-gray-700 dark:text-gray-300 rounded hover:bg-gray-200 dark:hover:bg-gray-500\"\n                  >\n                    Select None\n                  </button>\n                  <button\n                    onClick={handleResetToDefaults}\n                    className=\"px-2 py-1 text-xs bg-green-100 dark:bg-green-900 text-green-700 dark:text-green-300 rounded hover:bg-green-200 dark:hover:bg-green-800\"\n                  >\n                    Reset to Defaults\n                  </button>\n                </div>\n                <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n                  💡 Tip: Drag column headers in the table or use arrows below to reorder\n                </div>\n              </div>\n              \n              {/* Column Checkboxes with Reorder Controls */}\n              <div className=\"p-3 space-y-2\">\n                {orderedColumns.map((column, index) => {\n                  const canMoveUp = index > 1; // Skip name column (index 0) and first moveable column\n                  const canMoveDown = index < orderedColumns.length - 1;\n                  \n                  return (\n                    <div key={column.key} className=\"flex items-center group\">\n                      <input\n                        type=\"checkbox\"\n                        checked={columnVisibility[column.key] || false}\n                        onChange={() => handleColumnToggle(column.key)}\n                        disabled={column.alwaysVisible}\n                        className=\"mr-3 h-4 w-4 text-blue-600 rounded border-gray-300 dark:border-gray-500 focus:ring-blue-500\"\n                      />\n                      <span className={`flex-1 text-sm ${\n                        column.alwaysVisible \n                          ? 'text-gray-500 dark:text-gray-400' \n                          : 'text-gray-700 dark:text-gray-300 group-hover:text-gray-900 dark:group-hover:text-gray-100'\n                      }`}>\n                        {column.label}\n                        {column.alwaysVisible && <span className=\"ml-1 text-xs\">(always visible)</span>}\n                      </span>\n                      \n                      {/* Reorder Controls - only for non-alwaysVisible columns */}\n                      {!column.alwaysVisible && (\n                        <div className=\"flex items-center space-x-1 ml-2\">\n                          <button\n                            onClick={() => moveColumn(column.key, 'up')}\n                            disabled={!canMoveUp}\n                            className={`p-1 rounded ${canMoveUp \n                              ? 'text-gray-600 dark:text-gray-400 hover:text-blue-600 dark:hover:text-blue-400 hover:bg-gray-200 dark:hover:bg-gray-500' \n                              : 'text-gray-300 dark:text-gray-600 cursor-not-allowed'}`}\n                            title=\"Move up\"\n                          >\n                            <ArrowUp size={12} />\n                          </button>\n                          <button\n                            onClick={() => moveColumn(column.key, 'down')}\n                            disabled={!canMoveDown}\n                            className={`p-1 rounded ${canMoveDown \n                              ? 'text-gray-600 dark:text-gray-400 hover:text-blue-600 dark:hover:text-blue-400 hover:bg-gray-200 dark:hover:bg-gray-500' \n                              : 'text-gray-300 dark:text-gray-600 cursor-not-allowed'}`}\n                            title=\"Move down\"\n                          >\n                            <ArrowDown size={12} />\n                          </button>\n                        </div>\n                      )}\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Refresh Button */}\n        <div className=\"space-y-2\">\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\n            Action\n          </label>\n          <button\n            onClick={handleRefresh}\n            disabled={isLoading || !selectedConfig}\n            className={`w-full flex items-center justify-center px-4 py-2 rounded-md text-sm font-medium\n                       ${(isLoading || !selectedConfig)\n                         ? 'bg-gray-300 dark:bg-gray-600 text-gray-500 dark:text-gray-400 cursor-not-allowed'\n                         : 'bg-blue-600 hover:bg-blue-700 text-white'\n                       } transition-colors duration-200`}\n          >\n            <RefreshCw size={16} className={`mr-2 ${isLoading ? 'animate-spin' : ''}`} />\n            {isLoading ? 'Refreshing...' : !selectedConfig ? 'Select Configuration' : 'Refresh Data'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { DashboardControls, AVAILABLE_COLUMNS }; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}