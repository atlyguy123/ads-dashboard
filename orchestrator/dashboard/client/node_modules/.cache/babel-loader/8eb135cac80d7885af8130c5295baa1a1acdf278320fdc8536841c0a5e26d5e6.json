{"ast":null,"code":"import _objectSpread from\"/Users/joshuakaufman/untitled folder 3/orchestrator/dashboard/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useMemo}from'react';// Estimated Revenue Tooltip Component\nimport{jsxs as _jsxs,jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const EstimatedRevenueTooltip=_ref=>{let{data,position,onClose,selectedUserId,selectedProductId}=_ref;const[isHovered,setIsHovered]=React.useState(false);const closeTimeoutRef=React.useRef(null);if(!data)return null;// Add safety checks for data structure\nconst safeValue=data.value||0;const safeBreakdown=data.breakdown||{};const safeComponents=safeBreakdown.components||{};const safeFormula=safeBreakdown.formula||'No formula available';const safeCalculation=safeBreakdown.calculation||'No calculation available';const handleMouseEnter=()=>{setIsHovered(true);// Clear any pending close timeout\nif(closeTimeoutRef.current){clearTimeout(closeTimeoutRef.current);closeTimeoutRef.current=null;}};const handleMouseLeave=()=>{setIsHovered(false);// Set a timeout to close the tooltip\ncloseTimeoutRef.current=setTimeout(()=>{onClose();},300);// Longer delay to prevent accidental closing\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"fixed z-50 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-600 rounded-lg shadow-lg p-4 max-w-md pointer-events-auto\",style:{// Use the position calculated in the mouse event handler directly\nleft:position.x,top:position.y,pointerEvents:'auto'},onMouseEnter:handleMouseEnter,onMouseLeave:handleMouseLeave,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-start mb-3\",children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"font-semibold text-gray-900 dark:text-white\",children:[\"Estimated Revenue: $\",safeValue.toFixed(2)]}),/*#__PURE__*/_jsx(\"button\",{onClick:onClose,className:\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 ml-2\",children:\"\\xD7\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-3\",children:[(()=>{const trialConverted=safeBreakdown.trial_converted||{};const initialPurchase=safeBreakdown.initial_purchase||{};const showTrialRatio=trialConverted.actual_revenue>0;const showInitialRatio=initialPurchase.actual_revenue>0;if(!showTrialRatio&&!showInitialRatio)return null;return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-blue-50 dark:bg-blue-900 p-3 rounded-lg border border-blue-200 dark:border-blue-700\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm font-medium text-blue-800 dark:text-blue-200 mb-2\",children:\"\\uD83C\\uDFAF Refund Rate Analysis\"}),showTrialRatio&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-xs font-medium text-blue-700 dark:text-blue-300\",children:\"Trial Conversion Refund Rate:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm font-bold text-blue-900 dark:text-blue-100\",children:(()=>{const revenue=trialConverted.actual_revenue||0;const estimatedRefunds=trialConverted.estimated_refunds||0;const refundRate=revenue>0?estimatedRefunds/revenue*100:0;return\"\".concat(estimatedRefunds.toFixed(2),\" / \").concat(revenue.toFixed(2),\" = \").concat(refundRate.toFixed(1),\"%\");})()}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-blue-600 dark:text-blue-400\",children:[\"$\",(trialConverted.estimated_refunds||0).toFixed(2),\" estimated refunds on $\",(trialConverted.actual_revenue||0).toFixed(2),\" revenue\"]})]}),showInitialRatio&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-xs font-medium text-blue-700 dark:text-blue-300\",children:\"Initial Purchase Refund Rate:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm font-bold text-blue-900 dark:text-blue-100\",children:(()=>{const revenue=initialPurchase.actual_revenue||0;const estimatedRefunds=initialPurchase.estimated_refunds||0;const refundRate=revenue>0?estimatedRefunds/revenue*100:0;return\"\".concat(estimatedRefunds.toFixed(2),\" / \").concat(revenue.toFixed(2),\" = \").concat(refundRate.toFixed(1),\"%\");})()}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-blue-600 dark:text-blue-400\",children:[\"$\",(initialPurchase.estimated_refunds||0).toFixed(2),\" estimated refunds on $\",(initialPurchase.actual_revenue||0).toFixed(2),\" revenue\"]})]})]});})(),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\",children:\"Formula:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-600 dark:text-gray-400 font-mono bg-gray-50 dark:bg-gray-700 p-2 rounded\",children:safeFormula})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\",children:\"Calculation:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-600 dark:text-gray-400 font-mono bg-gray-50 dark:bg-gray-700 p-2 rounded\",children:safeCalculation})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\",children:\"Components:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-1\",children:[(()=>{// Use explicit ordering from backend if available\nconst componentsOrder=safeBreakdown.components_order;const components=safeComponents;if(componentsOrder&&Array.isArray(componentsOrder)){// Use backend's explicit ordering\nreturn componentsOrder.map(key=>{const value=components[key];if(value===undefined)return null;return/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between text-xs\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"text-gray-600 dark:text-gray-400\",children:[key,\":\"]}),/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-900 dark:text-white font-medium\",children:typeof value==='string'?value:typeof value==='number'?key.toLowerCase().includes('revenue')||key.toLowerCase().includes('arpu')?\"$\".concat(value.toFixed(2)):value.toString():value||'N/A'})]},key);}).filter(Boolean);}else{// Fallback to object iteration (original behavior)\nreturn Object.entries(components).map(_ref2=>{let[key,value]=_ref2;return/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between text-xs\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"text-gray-600 dark:text-gray-400\",children:[key,\":\"]}),/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-900 dark:text-white font-medium\",children:typeof value==='string'?value:typeof value==='number'?key.toLowerCase().includes('revenue')||key.toLowerCase().includes('arpu')?\"$\".concat(value.toFixed(2)):value.toString():value||'N/A'})]},key);});}})(),(()=>{const componentsOrder=safeBreakdown.components_order;const components=safeComponents;// Show fallback message if no components\nif((!componentsOrder||!Array.isArray(componentsOrder)||componentsOrder.length===0)&&Object.keys(components).length===0){return/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-500 dark:text-gray-400\",children:\"No component data available\"});}return null;})()]})]}),(selectedUserId||selectedProductId)&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-3 pt-3 border-t border-gray-200 dark:border-gray-600\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-blue-600 dark:text-blue-400\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Note:\"}),\" This calculation is specific to the filtered view\",selectedUserId&&\" for user \".concat(selectedUserId),selectedProductId&&\" for product \".concat(selectedProductId),\".\"]})})]})]});};const EventTimelineTable=_ref3=>{var _data$data,_data$data2,_data$data3,_data$data4,_data$data4$structure,_data$data5,_data$data6,_data$data7,_data$data8,_data$data8$structure;let{data,selectedUserId='',selectedProductId=''}=_ref3;const[showCumulative,setShowCumulative]=useState(false);// Add state for tooltip with debounce\nconst[tooltipData,setTooltipData]=useState(null);const[tooltipPosition,setTooltipPosition]=useState({x:0,y:0});const tooltipTimeoutRef=React.useRef(null);// FILTER VARIABLES: Now received as props from parent Stage3RevenueResults\n// These are passed from the parent component that handles user selection\n// selectedUserId and selectedProductId are now props instead of hardcoded empty strings\n// Cleanup tooltip timeout on unmount\nReact.useEffect(()=>{return()=>{if(tooltipTimeoutRef.current){clearTimeout(tooltipTimeoutRef.current);}};},[]);// Debug logging\nconsole.log('[DEBUG] EventTimelineTable received data:',data);console.log('[DEBUG] Data structure check:',{hasData:!!data,hasDataData:!!(data!==null&&data!==void 0&&data.data),hasDailyMetrics:!!(data!==null&&data!==void 0&&(_data$data=data.data)!==null&&_data$data!==void 0&&_data$data.daily_metrics),hasTimelineData:!!(data!==null&&data!==void 0&&(_data$data2=data.data)!==null&&_data$data2!==void 0&&_data$data2.timeline_data),hasStructuredFormat:!!(data!==null&&data!==void 0&&(_data$data3=data.data)!==null&&_data$data3!==void 0&&_data$data3.structured_format),hasTimelineAnalysis:!!(data!==null&&data!==void 0&&(_data$data4=data.data)!==null&&_data$data4!==void 0&&(_data$data4$structure=_data$data4.structured_format)!==null&&_data$data4$structure!==void 0&&_data$data4$structure.timeline_analysis),dataKeys:data?Object.keys(data):[],dataDataKeys:data!==null&&data!==void 0&&data.data?Object.keys(data.data):[]});// NEW: Additional debugging for data.data structure\nconsole.log('[DEBUG] Raw data.data structure:',data===null||data===void 0?void 0:data.data);console.log('[DEBUG] Available keys in data.data:',data!==null&&data!==void 0&&data.data?Object.keys(data.data):[]);if(data!==null&&data!==void 0&&(_data$data5=data.data)!==null&&_data$data5!==void 0&&_data$data5.daily_metrics){console.log('[DEBUG] daily_metrics type:',typeof data.data.daily_metrics);console.log('[DEBUG] daily_metrics sample:',data.data.daily_metrics);}// Handle multiple data formats: unified pipeline, legacy API, and direct timeline API\nlet timelineData;let dates=[];let dailyMetrics={};let cumulativeMetrics={};let userTimelines={};let userDailyMetrics={};// Check if we have valid data first, but don't return early yet\nconst hasValidData=!!(data!==null&&data!==void 0&&(_data$data6=data.data)!==null&&_data$data6!==void 0&&_data$data6.daily_metrics||data!==null&&data!==void 0&&(_data$data7=data.data)!==null&&_data$data7!==void 0&&_data$data7.timeline_data||data!==null&&data!==void 0&&(_data$data8=data.data)!==null&&_data$data8!==void 0&&(_data$data8$structure=_data$data8.structured_format)!==null&&_data$data8$structure!==void 0&&_data$data8$structure.timeline_analysis||data!==null&&data!==void 0&&data.data);if(hasValidData){var _data$data$structured;if((_data$data$structured=data.data.structured_format)!==null&&_data$data$structured!==void 0&&_data$data$structured.timeline_analysis){// Unified pipeline format: timeline data is in structured_format.timeline_analysis\ntimelineData=data.data.structured_format.timeline_analysis;dates=timelineData.dates||[];dailyMetrics=timelineData.daily_metrics||{};cumulativeMetrics=timelineData.cumulative_metrics||{};userTimelines=timelineData.user_timelines||{};userDailyMetrics=timelineData.user_daily_metrics||{};console.log('[DEBUG] Using unified pipeline format. Timeline data:',timelineData);console.log('[DEBUG] Dates:',dates);console.log('[DEBUG] Daily metrics keys:',Object.keys(dailyMetrics));console.log('[DEBUG] User timelines available:',Object.keys(userTimelines).length);console.log('[DEBUG] User daily metrics available:',Object.keys(userDailyMetrics).length);}else if(data.data.timeline_data&&data.data.timeline_data.daily_metrics){// Direct timeline API format: timeline_data contains the TimelineData structure\ntimelineData=data.data.timeline_data;dates=timelineData.dates||[];dailyMetrics=timelineData.daily_metrics||{};cumulativeMetrics=timelineData.cumulative_metrics||{};userTimelines=timelineData.user_timelines||{};userDailyMetrics=timelineData.user_daily_metrics||{};}else if(data.data.daily_metrics&&typeof data.data.daily_metrics==='object'&&data.data.daily_metrics.dates){// Legacy format: daily_metrics contains the entire legacy result\ntimelineData=data.data.daily_metrics;dates=timelineData.dates||[];// Convert legacy format to expected structure\nif(timelineData.event_rows){// Transform legacy event_rows format to daily_metrics format\ndates.forEach(date=>{dailyMetrics[date]={};Object.keys(timelineData.event_rows).forEach(metric=>{dailyMetrics[date][metric]=timelineData.event_rows[metric][date]||0;});});}// Legacy format doesn't have user daily metrics\nuserDailyMetrics={};}else if(data.data.daily_metrics){// New format: daily_metrics is a direct mapping\ntimelineData=data.data;dates=timelineData.dates||[];dailyMetrics=timelineData.daily_metrics||{};cumulativeMetrics=timelineData.cumulative_metrics||{};userTimelines=timelineData.user_timelines||{};userDailyMetrics=timelineData.user_daily_metrics||{};}}// Extract available users and products for filtering\nconst{availableUsers,availableProducts}=useMemo(()=>{const users=new Set();const products=new Set();// PRIORITY 1: Extract from user daily metrics (most accurate)\nObject.keys(userDailyMetrics).forEach(userId=>{users.add(userId);});// PRIORITY 2: Extract from user timelines if available\nObject.keys(userTimelines).forEach(userId=>{var _userTimeline$summary;users.add(userId);const userTimeline=userTimelines[userId];if(userTimeline.events){userTimeline.events.forEach(event=>{if(event.product_id){products.add(event.product_id);}});}if((_userTimeline$summary=userTimeline.summary)!==null&&_userTimeline$summary!==void 0&&_userTimeline$summary.product_summaries){Object.keys(userTimeline.summary.product_summaries).forEach(productId=>{products.add(productId);});}});// PRIORITY 3: Extract from daily metrics breakdown if available\nObject.values(dailyMetrics).forEach(dayData=>{var _dayData$estimated_re;if((_dayData$estimated_re=dayData.estimated_revenue_breakdown)!==null&&_dayData$estimated_re!==void 0&&_dayData$estimated_re.user_breakdowns){Object.keys(dayData.estimated_revenue_breakdown.user_breakdowns).forEach(userId=>{users.add(userId);const userBreakdown=dayData.estimated_revenue_breakdown.user_breakdowns[userId];if(userBreakdown.product_breakdowns){Object.keys(userBreakdown.product_breakdowns).forEach(productId=>{products.add(productId);});}});}});return{availableUsers:Array.from(users).sort(),availableProducts:Array.from(products).sort()};},[userDailyMetrics,userTimelines,dailyMetrics]);// Filter data based on selected user/product\nconst filteredData=useMemo(()=>{if(!selectedUserId&&!selectedProductId){return{dailyMetrics,cumulativeMetrics};}// CRITICAL: Use backend's pre-calculated user daily metrics directly\n// No business logic recalculation in frontend - pure display layer\nconst filteredDaily={};const filteredCumulative={};if(selectedUserId&&!selectedProductId){// Filter by user only - use backend's user daily metrics directly\nconst userMetrics=userDailyMetrics[selectedUserId];if(userMetrics){// CRITICAL FIX: Calculate cumulative values for single user view\n// Backend provides daily user metrics, but we need to calculate cumulative on frontend\nlet cumulativeValues={trial_started:0,trial_ended:0,trial_converted:0,trial_cancelled:0,initial_purchase:0,subscription_cancelled:0,revenue:0,refund:0,refund_count:0};dates.forEach(date=>{const userDayMetrics=userMetrics[date];if(userDayMetrics){// Use backend's pre-calculated daily metrics directly\nfilteredDaily[date]=_objectSpread(_objectSpread({},userDayMetrics),{},{// CRITICAL FIX: Calculate revenue_net since backend doesn't provide it for individual users\nrevenue_net:(userDayMetrics.revenue||0)-(userDayMetrics.refund||0)});// Calculate cumulative values by summing daily values\ncumulativeValues.trial_started+=userDayMetrics.trial_started||0;cumulativeValues.trial_ended+=userDayMetrics.trial_ended||0;cumulativeValues.trial_converted+=userDayMetrics.trial_converted||0;cumulativeValues.trial_cancelled+=userDayMetrics.trial_cancelled||0;cumulativeValues.initial_purchase+=userDayMetrics.initial_purchase||0;cumulativeValues.subscription_cancelled+=userDayMetrics.subscription_cancelled||0;cumulativeValues.revenue+=userDayMetrics.revenue||0;cumulativeValues.refund+=userDayMetrics.refund||0;cumulativeValues.refund_count+=userDayMetrics.refund_count||0;// Create cumulative metrics with proper field names\nfilteredCumulative[date]={// Copy daily values for state-based metrics (these don't accumulate)\ntrial_pending:userDayMetrics.trial_pending||0,subscription_active:userDayMetrics.subscription_active||0,estimated_revenue:userDayMetrics.estimated_revenue||0,// Add cumulative values with proper field names expected by getCumulativeValue functions\ncumulative_trial_started:cumulativeValues.trial_started,cumulative_trial_ended:cumulativeValues.trial_ended,cumulative_trial_converted:cumulativeValues.trial_converted,cumulative_trial_cancelled:cumulativeValues.trial_cancelled,cumulative_initial_purchase:cumulativeValues.initial_purchase,cumulative_subscription_cancelled:cumulativeValues.subscription_cancelled,cumulative_revenue:cumulativeValues.revenue,cumulative_refund:cumulativeValues.refund,cumulative_refund_count:cumulativeValues.refund_count,cumulative_revenue_net:cumulativeValues.revenue-cumulativeValues.refund};}else{// No data for this user on this date\nfilteredDaily[date]={trial_started:0,trial_pending:0,trial_ended:0,trial_converted:0,trial_cancelled:0,initial_purchase:0,subscription_active:0,subscription_cancelled:0,revenue:0,refund:0,refund_count:0,estimated_revenue:0,revenue_net:0};// For cumulative, maintain previous cumulative values (no change on days with no activity)\nfilteredCumulative[date]={// State-based metrics remain 0\ntrial_pending:0,subscription_active:0,estimated_revenue:0,// Cumulative values remain at previous levels\ncumulative_trial_started:cumulativeValues.trial_started,cumulative_trial_ended:cumulativeValues.trial_ended,cumulative_trial_converted:cumulativeValues.trial_converted,cumulative_trial_cancelled:cumulativeValues.trial_cancelled,cumulative_initial_purchase:cumulativeValues.initial_purchase,cumulative_subscription_cancelled:cumulativeValues.subscription_cancelled,cumulative_revenue:cumulativeValues.revenue,cumulative_refund:cumulativeValues.refund,cumulative_refund_count:cumulativeValues.refund_count,cumulative_revenue_net:cumulativeValues.revenue-cumulativeValues.refund};}});}else{// User not found in user daily metrics\ndates.forEach(date=>{filteredDaily[date]={trial_started:0,trial_pending:0,trial_ended:0,trial_converted:0,trial_cancelled:0,initial_purchase:0,subscription_active:0,subscription_cancelled:0,revenue:0,refund:0,refund_count:0,estimated_revenue:0,revenue_net:0};filteredCumulative[date]={trial_pending:0,subscription_active:0,estimated_revenue:0,cumulative_trial_started:0,cumulative_trial_ended:0,cumulative_trial_converted:0,cumulative_trial_cancelled:0,cumulative_initial_purchase:0,cumulative_subscription_cancelled:0,cumulative_revenue:0,cumulative_refund:0,cumulative_refund_count:0,cumulative_revenue_net:0};});}}else if(selectedProductId&&!selectedUserId){// Filter by product only - aggregate all users for this product\n// TODO: Backend should provide product-specific aggregations directly\n// For now, show original aggregate data with a note\ndates.forEach(date=>{filteredDaily[date]=_objectSpread({},dailyMetrics[date]);filteredCumulative[date]=_objectSpread({},cumulativeMetrics[date]);});}else if(selectedUserId&&selectedProductId){// Filter by both user and product\n// TODO: Backend should provide user-product specific metrics\n// For now, use user metrics (which aggregate across all products for that user)\nconst userMetrics=userDailyMetrics[selectedUserId];if(userMetrics){// CRITICAL FIX: Calculate cumulative values for single user view (same logic as user-only)\nlet cumulativeValues={trial_started:0,trial_ended:0,trial_converted:0,trial_cancelled:0,initial_purchase:0,subscription_cancelled:0,revenue:0,refund:0,refund_count:0};dates.forEach(date=>{const userDayMetrics=userMetrics[date];if(userDayMetrics){// Use backend's pre-calculated metrics directly\n// Note: This shows all products for the user, not just the selected product\nfilteredDaily[date]=_objectSpread(_objectSpread({},userDayMetrics),{},{// CRITICAL FIX: Calculate revenue_net since backend doesn't provide it for individual users\nrevenue_net:(userDayMetrics.revenue||0)-(userDayMetrics.refund||0)});// Calculate cumulative values by summing daily values\ncumulativeValues.trial_started+=userDayMetrics.trial_started||0;cumulativeValues.trial_ended+=userDayMetrics.trial_ended||0;cumulativeValues.trial_converted+=userDayMetrics.trial_converted||0;cumulativeValues.trial_cancelled+=userDayMetrics.trial_cancelled||0;cumulativeValues.initial_purchase+=userDayMetrics.initial_purchase||0;cumulativeValues.subscription_cancelled+=userDayMetrics.subscription_cancelled||0;cumulativeValues.revenue+=userDayMetrics.revenue||0;cumulativeValues.refund+=userDayMetrics.refund||0;cumulativeValues.refund_count+=userDayMetrics.refund_count||0;// Create cumulative metrics with proper field names\nfilteredCumulative[date]={// Copy daily values for state-based metrics (these don't accumulate)\ntrial_pending:userDayMetrics.trial_pending||0,subscription_active:userDayMetrics.subscription_active||0,estimated_revenue:userDayMetrics.estimated_revenue||0,// Add cumulative values with proper field names expected by getCumulativeValue functions\ncumulative_trial_started:cumulativeValues.trial_started,cumulative_trial_ended:cumulativeValues.trial_ended,cumulative_trial_converted:cumulativeValues.trial_converted,cumulative_trial_cancelled:cumulativeValues.trial_cancelled,cumulative_initial_purchase:cumulativeValues.initial_purchase,cumulative_subscription_cancelled:cumulativeValues.subscription_cancelled,cumulative_revenue:cumulativeValues.revenue,cumulative_refund:cumulativeValues.refund,cumulative_refund_count:cumulativeValues.refund_count,cumulative_revenue_net:cumulativeValues.revenue-cumulativeValues.refund};}else{filteredDaily[date]={trial_started:0,trial_pending:0,trial_ended:0,trial_converted:0,trial_cancelled:0,initial_purchase:0,subscription_active:0,subscription_cancelled:0,revenue:0,refund:0,refund_count:0,estimated_revenue:0,revenue_net:0};// For cumulative, maintain previous cumulative values (no change on days with no activity)\nfilteredCumulative[date]={// State-based metrics remain 0\ntrial_pending:0,subscription_active:0,estimated_revenue:0,// Cumulative values remain at previous levels\ncumulative_trial_started:cumulativeValues.trial_started,cumulative_trial_ended:cumulativeValues.trial_ended,cumulative_trial_converted:cumulativeValues.trial_converted,cumulative_trial_cancelled:cumulativeValues.trial_cancelled,cumulative_initial_purchase:cumulativeValues.initial_purchase,cumulative_subscription_cancelled:cumulativeValues.subscription_cancelled,cumulative_revenue:cumulativeValues.revenue,cumulative_refund:cumulativeValues.refund,cumulative_refund_count:cumulativeValues.refund_count,cumulative_revenue_net:cumulativeValues.revenue-cumulativeValues.refund};}});}else{dates.forEach(date=>{filteredDaily[date]={trial_started:0,trial_pending:0,trial_ended:0,trial_converted:0,trial_cancelled:0,initial_purchase:0,subscription_active:0,subscription_cancelled:0,revenue:0,refund:0,refund_count:0,estimated_revenue:0,revenue_net:0};filteredCumulative[date]={trial_pending:0,subscription_active:0,estimated_revenue:0,cumulative_trial_started:0,cumulative_trial_ended:0,cumulative_trial_converted:0,cumulative_trial_cancelled:0,cumulative_initial_purchase:0,cumulative_subscription_cancelled:0,cumulative_revenue:0,cumulative_refund:0,cumulative_refund_count:0,cumulative_revenue_net:0};});}}return{dailyMetrics:filteredDaily,cumulativeMetrics:filteredCumulative};},[selectedUserId,selectedProductId,dailyMetrics,cumulativeMetrics,userDailyMetrics,dates]);// NOW we can do early returns after all hooks are called\nif(!hasValidData){return/*#__PURE__*/_jsx(\"div\",{className:\"text-center py-8\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500 dark:text-gray-400\",children:\"No timeline data available. Run an analysis to see results.\"})});}const formatCurrency=value=>{if(value===null||value===undefined)return'$0';const rounded=Math.round(Number(value));return\"$\".concat(rounded.toLocaleString());};const formatNumber=value=>{if(value===null||value===undefined)return'0';return Number(value).toLocaleString();};// Function to generate tooltip data for estimated revenue\nconst getEstimatedRevenueTooltipData=(date,value)=>{// CRITICAL: Only show tooltip for individual user view, NEVER for aggregate\nif(!selectedUserId){return null;}// Add safety check for value parameter\nconst safeValue=typeof value==='number'?value:0;if(safeValue===0){return null;// Don't show tooltip for $0 values\n}console.log(\"[DEBUG] getEstimatedRevenueTooltipData called with:\",{date,originalValue:value,safeValue,valueType:typeof value,selectedUserId,selectedProductId});// SIMPLIFIED: Use pre-computed tooltip data from backend\n// No more business logic calculations on frontend - just display what backend sends\n// Get the user's daily metrics for this date\nconst userMetrics=userDailyMetrics[selectedUserId];if(!userMetrics||!userMetrics[date]){console.warn(\"[WARN] No user metrics found for user \".concat(selectedUserId,\" on date \").concat(date));return null;}const dayMetrics=userMetrics[date];const tooltipData=dayMetrics.tooltip_data;console.log(\"[DEBUG] Backend tooltip data for \".concat(selectedUserId,\" on \").concat(date,\":\"),{hasTooltipData:!!tooltipData,tooltipData:tooltipData,dayMetrics:dayMetrics});if(!tooltipData){console.warn(\"[WARN] No tooltip data found for user \".concat(selectedUserId,\" on date \").concat(date));return null;}// Return the pre-computed tooltip data from backend\nreturn{value:safeValue,breakdown:tooltipData.breakdown,result:\"$\".concat(safeValue.toFixed(2))};};// Define all metrics with their categories and data extraction logic\nconst metrics=[// Daily Absolute Values\n{key:'daily_trial_started',label:'Trial Started',category:'daily_absolute',categoryLabel:'Daily Absolute Values',getValue:date=>{var _filteredData$dailyMe;return((_filteredData$dailyMe=filteredData.dailyMetrics[date])===null||_filteredData$dailyMe===void 0?void 0:_filteredData$dailyMe.trial_started)||0;},getCumulativeValue:date=>{var _filteredData$cumulat;return((_filteredData$cumulat=filteredData.cumulativeMetrics[date])===null||_filteredData$cumulat===void 0?void 0:_filteredData$cumulat.cumulative_trial_started)||0;},format:formatNumber},{key:'daily_trial_pending',label:'Trial Pending',category:'daily_absolute',getValue:date=>{var _filteredData$dailyMe2;return((_filteredData$dailyMe2=filteredData.dailyMetrics[date])===null||_filteredData$dailyMe2===void 0?void 0:_filteredData$dailyMe2.trial_pending)||0;},// CRITICAL FIX: Trial pending is a state-based metric, cumulative should show same as daily\ngetCumulativeValue:date=>{var _filteredData$dailyMe3;return((_filteredData$dailyMe3=filteredData.dailyMetrics[date])===null||_filteredData$dailyMe3===void 0?void 0:_filteredData$dailyMe3.trial_pending)||0;},format:formatNumber},{key:'daily_trial_ended',label:'Trial Ended',category:'daily_absolute',getValue:date=>{var _filteredData$dailyMe4;return((_filteredData$dailyMe4=filteredData.dailyMetrics[date])===null||_filteredData$dailyMe4===void 0?void 0:_filteredData$dailyMe4.trial_ended)||0;},getCumulativeValue:date=>{var _filteredData$cumulat2;return((_filteredData$cumulat2=filteredData.cumulativeMetrics[date])===null||_filteredData$cumulat2===void 0?void 0:_filteredData$cumulat2.cumulative_trial_ended)||0;},format:formatNumber},{key:'daily_trial_cancelled',label:'Trial Cancelled',category:'daily_absolute',getValue:date=>{var _filteredData$dailyMe5;return((_filteredData$dailyMe5=filteredData.dailyMetrics[date])===null||_filteredData$dailyMe5===void 0?void 0:_filteredData$dailyMe5.trial_cancelled)||0;},getCumulativeValue:date=>{var _filteredData$cumulat3;return((_filteredData$cumulat3=filteredData.cumulativeMetrics[date])===null||_filteredData$cumulat3===void 0?void 0:_filteredData$cumulat3.cumulative_trial_cancelled)||0;},format:formatNumber},{key:'daily_trial_converted',label:'Trial Converted',category:'daily_absolute',getValue:date=>{var _filteredData$dailyMe6;return((_filteredData$dailyMe6=filteredData.dailyMetrics[date])===null||_filteredData$dailyMe6===void 0?void 0:_filteredData$dailyMe6.trial_converted)||0;},getCumulativeValue:date=>{var _filteredData$cumulat4;return((_filteredData$cumulat4=filteredData.cumulativeMetrics[date])===null||_filteredData$cumulat4===void 0?void 0:_filteredData$cumulat4.cumulative_trial_converted)||0;},format:formatNumber},{key:'daily_initial_purchase',label:'Initial Purchase',category:'daily_absolute',getValue:date=>{var _filteredData$dailyMe7;return((_filteredData$dailyMe7=filteredData.dailyMetrics[date])===null||_filteredData$dailyMe7===void 0?void 0:_filteredData$dailyMe7.initial_purchase)||0;},getCumulativeValue:date=>{var _filteredData$cumulat5;return((_filteredData$cumulat5=filteredData.cumulativeMetrics[date])===null||_filteredData$cumulat5===void 0?void 0:_filteredData$cumulat5.cumulative_initial_purchase)||0;},format:formatNumber},{key:'daily_subscription_active',label:'Subscription Active',category:'daily_absolute',getValue:date=>{var _filteredData$dailyMe8;return((_filteredData$dailyMe8=filteredData.dailyMetrics[date])===null||_filteredData$dailyMe8===void 0?void 0:_filteredData$dailyMe8.subscription_active)||0;},// CRITICAL FIX: Subscription active is a state-based metric, cumulative should show same as daily\ngetCumulativeValue:date=>{var _filteredData$dailyMe9;return((_filteredData$dailyMe9=filteredData.dailyMetrics[date])===null||_filteredData$dailyMe9===void 0?void 0:_filteredData$dailyMe9.subscription_active)||0;},format:formatNumber},{key:'daily_subscription_cancelled',label:'Subscription Cancelled',category:'daily_absolute',getValue:date=>{var _filteredData$dailyMe0;return((_filteredData$dailyMe0=filteredData.dailyMetrics[date])===null||_filteredData$dailyMe0===void 0?void 0:_filteredData$dailyMe0.subscription_cancelled)||0;},getCumulativeValue:date=>{var _filteredData$cumulat6;return((_filteredData$cumulat6=filteredData.cumulativeMetrics[date])===null||_filteredData$cumulat6===void 0?void 0:_filteredData$cumulat6.cumulative_subscription_cancelled)||0;},format:formatNumber},{key:'daily_users',label:'Daily Users',category:'daily_absolute',getValue:date=>{var _filteredData$dailyMe1;return((_filteredData$dailyMe1=filteredData.dailyMetrics[date])===null||_filteredData$dailyMe1===void 0?void 0:_filteredData$dailyMe1.daily_users)||0;},getCumulativeValue:date=>{var _filteredData$dailyMe10;return((_filteredData$dailyMe10=filteredData.dailyMetrics[date])===null||_filteredData$dailyMe10===void 0?void 0:_filteredData$dailyMe10.cumulative_users)||0;},format:formatNumber},{key:'daily_refund_count',label:'Refunds',category:'daily_absolute',getValue:date=>{var _filteredData$dailyMe11;return((_filteredData$dailyMe11=filteredData.dailyMetrics[date])===null||_filteredData$dailyMe11===void 0?void 0:_filteredData$dailyMe11.refund_count)||0;},getCumulativeValue:date=>{var _filteredData$cumulat7;return((_filteredData$cumulat7=filteredData.cumulativeMetrics[date])===null||_filteredData$cumulat7===void 0?void 0:_filteredData$cumulat7.cumulative_refund_count)||0;},format:formatNumber},// Revenue Values\n{key:'daily_revenue',label:'Revenue',category:'revenue',categoryLabel:'Revenue Values',getValue:date=>{var _filteredData$dailyMe12;return((_filteredData$dailyMe12=filteredData.dailyMetrics[date])===null||_filteredData$dailyMe12===void 0?void 0:_filteredData$dailyMe12.revenue)||0;},getCumulativeValue:date=>{var _filteredData$cumulat8;return((_filteredData$cumulat8=filteredData.cumulativeMetrics[date])===null||_filteredData$cumulat8===void 0?void 0:_filteredData$cumulat8.cumulative_revenue)||0;},format:formatCurrency},{key:'daily_refund',label:'Refunds',category:'revenue',getValue:date=>{var _filteredData$dailyMe13;return((_filteredData$dailyMe13=filteredData.dailyMetrics[date])===null||_filteredData$dailyMe13===void 0?void 0:_filteredData$dailyMe13.refund)||0;},getCumulativeValue:date=>{var _filteredData$cumulat9;return((_filteredData$cumulat9=filteredData.cumulativeMetrics[date])===null||_filteredData$cumulat9===void 0?void 0:_filteredData$cumulat9.cumulative_refund)||0;},format:formatCurrency},{key:'daily_revenue_net',label:'Net Revenue',category:'revenue',getValue:date=>{var _filteredData$dailyMe14;return((_filteredData$dailyMe14=filteredData.dailyMetrics[date])===null||_filteredData$dailyMe14===void 0?void 0:_filteredData$dailyMe14.revenue_net)||0;},getCumulativeValue:date=>{var _filteredData$cumulat0;return((_filteredData$cumulat0=filteredData.cumulativeMetrics[date])===null||_filteredData$cumulat0===void 0?void 0:_filteredData$cumulat0.cumulative_revenue_net)||0;},format:formatCurrency},{key:'daily_estimated_revenue',label:'Estimated Revenue',category:'revenue',isEstimatedRevenue:true,getValue:date=>{var _filteredData$dailyMe15;return((_filteredData$dailyMe15=filteredData.dailyMetrics[date])===null||_filteredData$dailyMe15===void 0?void 0:_filteredData$dailyMe15.estimated_revenue)||0;},// CRITICAL FIX: Estimated revenue is a state-based metric, cumulative should show same as daily\ngetCumulativeValue:date=>{var _filteredData$dailyMe16;return((_filteredData$dailyMe16=filteredData.dailyMetrics[date])===null||_filteredData$dailyMe16===void 0?void 0:_filteredData$dailyMe16.estimated_revenue)||0;},format:formatCurrency,getTooltipData:date=>{var _filteredData$dailyMe17,_filteredData$dailyMe18;const value=showCumulative?((_filteredData$dailyMe17=filteredData.dailyMetrics[date])===null||_filteredData$dailyMe17===void 0?void 0:_filteredData$dailyMe17.estimated_revenue)||0// Same as daily for state-based\n:((_filteredData$dailyMe18=filteredData.dailyMetrics[date])===null||_filteredData$dailyMe18===void 0?void 0:_filteredData$dailyMe18.estimated_revenue)||0;return getEstimatedRevenueTooltipData(date,value);}}];// Group metrics by category\nconst groupedMetrics=metrics.reduce((acc,metric)=>{if(!acc[metric.category]){acc[metric.category]={label:metric.categoryLabel||metric.category,metrics:[]};}acc[metric.category].metrics.push(metric);return acc;},{});return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-8 bg-white dark:bg-gray-700 p-6 rounded-lg shadow-md\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-4\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-gray-800 dark:text-white\",children:\"Daily Event & Revenue Timeline\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex gap-2\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowCumulative(!showCumulative),className:\"px-3 py-1 text-sm rounded-full \".concat(showCumulative?'bg-blue-500 text-white':'bg-gray-200 dark:bg-gray-600 text-gray-700 dark:text-white'),children:showCumulative?'Show Daily':'Show Cumulative'})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full text-sm border dark:border-gray-600\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-gray-50 dark:bg-gray-700\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"p-2 border-b dark:border-gray-600 text-left text-gray-700 dark:text-white sticky left-0 bg-gray-50 dark:bg-gray-700 z-10 min-w-[200px]\",children:\"Metric\"}),dates.map(date=>/*#__PURE__*/_jsx(\"th\",{className:\"p-2 border-b dark:border-gray-600 text-center text-gray-700 dark:text-white whitespace-nowrap min-w-[80px]\",children:date},date))]})}),/*#__PURE__*/_jsx(\"tbody\",{className:\"bg-white dark:bg-gray-800\",children:Object.entries(groupedMetrics).map(_ref4=>{let[categoryKey,category]=_ref4;return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(\"tr\",{className:\"bg-gray-100 dark:bg-gray-600\",children:/*#__PURE__*/_jsx(\"td\",{colSpan:dates.length+1,className:\"p-2 font-semibold text-gray-800 dark:text-white border-b dark:border-gray-600\",children:category.label})}),category.metrics.map(metric=>/*#__PURE__*/_jsxs(\"tr\",{className:\"hover:bg-gray-50 dark:hover:bg-gray-700\",children:[/*#__PURE__*/_jsx(\"td\",{className:\"p-2 border-b dark:border-gray-600 font-medium text-gray-700 dark:text-white sticky left-0 bg-white dark:bg-gray-800 z-10\",children:metric.label}),dates.map(date=>{const value=showCumulative?metric.getCumulativeValue(date):metric.getValue(date);return/*#__PURE__*/_jsx(\"td\",{className:\"p-2 border-b dark:border-gray-600 text-center text-gray-700 dark:text-white \".concat(metric.isEstimatedRevenue&&selectedUserId?'cursor-help hover:bg-yellow-50 dark:hover:bg-yellow-900/20 relative':''),onMouseEnter:metric.isEstimatedRevenue&&selectedUserId?e=>{// Only show tooltip for single user views\nif(!selectedUserId)return;// Clear any existing timeout\nif(tooltipTimeoutRef.current){clearTimeout(tooltipTimeoutRef.current);tooltipTimeoutRef.current=null;}// Small delay to prevent tooltip from appearing on quick mouse movements\nconst newTimeout=setTimeout(()=>{const rect=e.target.getBoundingClientRect();const tooltipData=getEstimatedRevenueTooltipData(date,value);if(tooltipData){setTooltipData(tooltipData);// Smart positioning: check available space\nconst tooltipWidth=480;// Estimated tooltip width\nconst tooltipHeight=480;// Estimated tooltip height\nconst spaceOnRight=window.innerWidth-rect.right;const spaceOnLeft=rect.left;let xPosition,yPosition;// Choose horizontal position based on available space\nif(spaceOnRight>=tooltipWidth+20){// Enough space on the right\nxPosition=rect.right+10;}else if(spaceOnLeft>=tooltipWidth+20){// Not enough space on right, but enough on left\nxPosition=rect.left-tooltipWidth-10;}else{// Not enough space on either side, center it\nxPosition=Math.max(10,(window.innerWidth-tooltipWidth)/2);}// Vertical position: position so BOTTOM of tooltip aligns with cell center\nconst cellCenterY=rect.top+rect.height/2;yPosition=Math.max(10,cellCenterY-tooltipHeight);// Subtract tooltip height\n// Ensure tooltip doesn't go below screen\nyPosition=Math.min(yPosition,window.innerHeight-tooltipHeight-10);setTooltipPosition({x:xPosition,y:yPosition});}},150);// Shorter delay for better responsiveness\ntooltipTimeoutRef.current=newTimeout;}:undefined,onMouseLeave:metric.isEstimatedRevenue&&selectedUserId?()=>{// Only handle mouse leave for single user views\nif(!selectedUserId)return;// Clear the show timeout if mouse leaves before tooltip appears\nif(tooltipTimeoutRef.current){clearTimeout(tooltipTimeoutRef.current);tooltipTimeoutRef.current=null;}// Set a timeout to hide the tooltip, allowing time to move to tooltip\nconst hideTimeout=setTimeout(()=>{setTooltipData(null);},100);// Shorter delay for quicker hiding\ntooltipTimeoutRef.current=hideTimeout;}:undefined,children:metric.format(value)},date);})]},metric.key))]},categoryKey);})})]})}),dates.length===0&&/*#__PURE__*/_jsx(\"div\",{className:\"text-center py-8\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500 dark:text-gray-400\",children:\"No timeline data available. Run an analysis to see results.\"})})]}),/*#__PURE__*/_jsx(EstimatedRevenueTooltip,{data:tooltipData,position:tooltipPosition,onClose:()=>setTooltipData(null),selectedUserId:selectedUserId,selectedProductId:selectedProductId})]});};export default EventTimelineTable;","map":{"version":3,"names":["React","useState","useMemo","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","EstimatedRevenueTooltip","_ref","data","position","onClose","selectedUserId","selectedProductId","isHovered","setIsHovered","closeTimeoutRef","useRef","safeValue","value","safeBreakdown","breakdown","safeComponents","components","safeFormula","formula","safeCalculation","calculation","handleMouseEnter","current","clearTimeout","handleMouseLeave","setTimeout","className","style","left","x","top","y","pointerEvents","onMouseEnter","onMouseLeave","children","toFixed","onClick","trialConverted","trial_converted","initialPurchase","initial_purchase","showTrialRatio","actual_revenue","showInitialRatio","revenue","estimatedRefunds","estimated_refunds","refundRate","concat","componentsOrder","components_order","Array","isArray","map","key","undefined","toLowerCase","includes","toString","filter","Boolean","Object","entries","_ref2","length","keys","EventTimelineTable","_ref3","_data$data","_data$data2","_data$data3","_data$data4","_data$data4$structure","_data$data5","_data$data6","_data$data7","_data$data8","_data$data8$structure","showCumulative","setShowCumulative","tooltipData","setTooltipData","tooltipPosition","setTooltipPosition","tooltipTimeoutRef","useEffect","console","log","hasData","hasDataData","hasDailyMetrics","daily_metrics","hasTimelineData","timeline_data","hasStructuredFormat","structured_format","hasTimelineAnalysis","timeline_analysis","dataKeys","dataDataKeys","timelineData","dates","dailyMetrics","cumulativeMetrics","userTimelines","userDailyMetrics","hasValidData","_data$data$structured","cumulative_metrics","user_timelines","user_daily_metrics","event_rows","forEach","date","metric","availableUsers","availableProducts","users","Set","products","userId","add","_userTimeline$summary","userTimeline","events","event","product_id","summary","product_summaries","productId","values","dayData","_dayData$estimated_re","estimated_revenue_breakdown","user_breakdowns","userBreakdown","product_breakdowns","from","sort","filteredData","filteredDaily","filteredCumulative","userMetrics","cumulativeValues","trial_started","trial_ended","trial_cancelled","subscription_cancelled","refund","refund_count","userDayMetrics","_objectSpread","revenue_net","trial_pending","subscription_active","estimated_revenue","cumulative_trial_started","cumulative_trial_ended","cumulative_trial_converted","cumulative_trial_cancelled","cumulative_initial_purchase","cumulative_subscription_cancelled","cumulative_revenue","cumulative_refund","cumulative_refund_count","cumulative_revenue_net","formatCurrency","rounded","Math","round","Number","toLocaleString","formatNumber","getEstimatedRevenueTooltipData","originalValue","valueType","warn","dayMetrics","tooltip_data","hasTooltipData","result","metrics","label","category","categoryLabel","getValue","_filteredData$dailyMe","getCumulativeValue","_filteredData$cumulat","format","_filteredData$dailyMe2","_filteredData$dailyMe3","_filteredData$dailyMe4","_filteredData$cumulat2","_filteredData$dailyMe5","_filteredData$cumulat3","_filteredData$dailyMe6","_filteredData$cumulat4","_filteredData$dailyMe7","_filteredData$cumulat5","_filteredData$dailyMe8","_filteredData$dailyMe9","_filteredData$dailyMe0","_filteredData$cumulat6","_filteredData$dailyMe1","daily_users","_filteredData$dailyMe10","cumulative_users","_filteredData$dailyMe11","_filteredData$cumulat7","_filteredData$dailyMe12","_filteredData$cumulat8","_filteredData$dailyMe13","_filteredData$cumulat9","_filteredData$dailyMe14","_filteredData$cumulat0","isEstimatedRevenue","_filteredData$dailyMe15","_filteredData$dailyMe16","getTooltipData","_filteredData$dailyMe17","_filteredData$dailyMe18","groupedMetrics","reduce","acc","push","_ref4","categoryKey","colSpan","e","newTimeout","rect","target","getBoundingClientRect","tooltipWidth","tooltipHeight","spaceOnRight","window","innerWidth","right","spaceOnLeft","xPosition","yPosition","max","cellCenterY","height","min","innerHeight","hideTimeout"],"sources":["/Users/joshuakaufman/untitled folder 3/orchestrator/dashboard/client/src/cohort-pipeline/components/EventTimelineTable.js"],"sourcesContent":["import React, { useState, useMemo } from 'react';\n\n// Estimated Revenue Tooltip Component\nconst EstimatedRevenueTooltip = ({ data, position, onClose, selectedUserId, selectedProductId }) => {\n    const [isHovered, setIsHovered] = React.useState(false);\n    const closeTimeoutRef = React.useRef(null);\n    \n    if (!data) return null;\n    \n    // Add safety checks for data structure\n    const safeValue = data.value || 0;\n    const safeBreakdown = data.breakdown || {};\n    const safeComponents = safeBreakdown.components || {};\n    const safeFormula = safeBreakdown.formula || 'No formula available';\n    const safeCalculation = safeBreakdown.calculation || 'No calculation available';\n    \n    const handleMouseEnter = () => {\n        setIsHovered(true);\n        // Clear any pending close timeout\n        if (closeTimeoutRef.current) {\n            clearTimeout(closeTimeoutRef.current);\n            closeTimeoutRef.current = null;\n        }\n    };\n    \n    const handleMouseLeave = () => {\n        setIsHovered(false);\n        // Set a timeout to close the tooltip\n        closeTimeoutRef.current = setTimeout(() => {\n            onClose();\n        }, 300); // Longer delay to prevent accidental closing\n    };\n    \n    return (\n        <div \n            className=\"fixed z-50 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-600 rounded-lg shadow-lg p-4 max-w-md pointer-events-auto\"\n            style={{\n                // Use the position calculated in the mouse event handler directly\n                left: position.x,\n                top: position.y,\n                pointerEvents: 'auto'\n            }}\n            onMouseEnter={handleMouseEnter}\n            onMouseLeave={handleMouseLeave}\n        >\n            <div className=\"flex justify-between items-start mb-3\">\n                <h4 className=\"font-semibold text-gray-900 dark:text-white\">\n                    Estimated Revenue: ${safeValue.toFixed(2)}\n                </h4>\n                <button \n                    onClick={onClose}\n                    className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 ml-2\"\n                >\n                    ×\n                </button>\n            </div>\n            \n            <div className=\"space-y-3\">\n                {/* NEW: Refund Rate Ratios - Show prominently at the top */}\n                {(() => {\n                    const trialConverted = safeBreakdown.trial_converted || {};\n                    const initialPurchase = safeBreakdown.initial_purchase || {};\n                    \n                    const showTrialRatio = trialConverted.actual_revenue > 0;\n                    const showInitialRatio = initialPurchase.actual_revenue > 0;\n                    \n                    if (!showTrialRatio && !showInitialRatio) return null;\n                    \n                    return (\n                        <div className=\"bg-blue-50 dark:bg-blue-900 p-3 rounded-lg border border-blue-200 dark:border-blue-700\">\n                            <div className=\"text-sm font-medium text-blue-800 dark:text-blue-200 mb-2\">\n                                🎯 Refund Rate Analysis\n                            </div>\n                            \n                            {showTrialRatio && (\n                                <div className=\"mb-2\">\n                                    <div className=\"text-xs font-medium text-blue-700 dark:text-blue-300\">\n                                        Trial Conversion Refund Rate:\n                                    </div>\n                                    <div className=\"text-sm font-bold text-blue-900 dark:text-blue-100\">\n                                        {(() => {\n                                            const revenue = trialConverted.actual_revenue || 0;\n                                            const estimatedRefunds = trialConverted.estimated_refunds || 0;\n                                            const refundRate = revenue > 0 ? (estimatedRefunds / revenue) * 100 : 0;\n                                            return `${estimatedRefunds.toFixed(2)} / ${revenue.toFixed(2)} = ${refundRate.toFixed(1)}%`;\n                                        })()}\n                                    </div>\n                                    <div className=\"text-xs text-blue-600 dark:text-blue-400\">\n                                        ${(trialConverted.estimated_refunds || 0).toFixed(2)} estimated refunds on ${(trialConverted.actual_revenue || 0).toFixed(2)} revenue\n                                    </div>\n                                </div>\n                            )}\n                            \n                            {showInitialRatio && (\n                                <div>\n                                    <div className=\"text-xs font-medium text-blue-700 dark:text-blue-300\">\n                                        Initial Purchase Refund Rate:\n                                    </div>\n                                    <div className=\"text-sm font-bold text-blue-900 dark:text-blue-100\">\n                                        {(() => {\n                                            const revenue = initialPurchase.actual_revenue || 0;\n                                            const estimatedRefunds = initialPurchase.estimated_refunds || 0;\n                                            const refundRate = revenue > 0 ? (estimatedRefunds / revenue) * 100 : 0;\n                                            return `${estimatedRefunds.toFixed(2)} / ${revenue.toFixed(2)} = ${refundRate.toFixed(1)}%`;\n                                        })()}\n                                    </div>\n                                    <div className=\"text-xs text-blue-600 dark:text-blue-400\">\n                                        ${(initialPurchase.estimated_refunds || 0).toFixed(2)} estimated refunds on ${(initialPurchase.actual_revenue || 0).toFixed(2)} revenue\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                    );\n                })()}\n                \n                {/* Formula */}\n                <div>\n                    <div className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                        Formula:\n                    </div>\n                    <div className=\"text-xs text-gray-600 dark:text-gray-400 font-mono bg-gray-50 dark:bg-gray-700 p-2 rounded\">\n                        {safeFormula}\n                    </div>\n                </div>\n                \n                {/* Calculation */}\n                <div>\n                    <div className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                        Calculation:\n                    </div>\n                    <div className=\"text-xs text-gray-600 dark:text-gray-400 font-mono bg-gray-50 dark:bg-gray-700 p-2 rounded\">\n                        {safeCalculation}\n                    </div>\n                </div>\n                \n                {/* Components */}\n                <div>\n                    <div className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                        Components:\n                    </div>\n                    <div className=\"space-y-1\">\n                        {(() => {\n                            // Use explicit ordering from backend if available\n                            const componentsOrder = safeBreakdown.components_order;\n                            const components = safeComponents;\n                            \n                            if (componentsOrder && Array.isArray(componentsOrder)) {\n                                // Use backend's explicit ordering\n                                return componentsOrder.map((key) => {\n                                    const value = components[key];\n                                    if (value === undefined) return null;\n                                    \n                                    return (\n                                        <div key={key} className=\"flex justify-between text-xs\">\n                                            <span className=\"text-gray-600 dark:text-gray-400\">{key}:</span>\n                                            <span className=\"text-gray-900 dark:text-white font-medium\">\n                                                {typeof value === 'string' ? value : \n                                                 typeof value === 'number' ? (key.toLowerCase().includes('revenue') || key.toLowerCase().includes('arpu') ? \n                                                                              `$${value.toFixed(2)}` : value.toString()) : \n                                                 value || 'N/A'}\n                                            </span>\n                                        </div>\n                                    );\n                                }).filter(Boolean);\n                            } else {\n                                // Fallback to object iteration (original behavior)\n                                return Object.entries(components).map(([key, value]) => (\n                                    <div key={key} className=\"flex justify-between text-xs\">\n                                        <span className=\"text-gray-600 dark:text-gray-400\">{key}:</span>\n                                        <span className=\"text-gray-900 dark:text-white font-medium\">\n                                            {typeof value === 'string' ? value : \n                                             typeof value === 'number' ? (key.toLowerCase().includes('revenue') || key.toLowerCase().includes('arpu') ? \n                                                                          `$${value.toFixed(2)}` : value.toString()) : \n                                             value || 'N/A'}\n                                        </span>\n                                    </div>\n                                ));\n                            }\n                        })()}\n                        \n                        {(() => {\n                            const componentsOrder = safeBreakdown.components_order;\n                            const components = safeComponents;\n                            \n                            // Show fallback message if no components\n                            if ((!componentsOrder || !Array.isArray(componentsOrder) || componentsOrder.length === 0) && \n                                Object.keys(components).length === 0) {\n                                return (\n                                    <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n                                        No component data available\n                                    </div>\n                                );\n                            }\n                            return null;\n                        })()}\n                    </div>\n                </div>\n                \n                {/* Context for single user */}\n                {(selectedUserId || selectedProductId) && (\n                    <div className=\"mt-3 pt-3 border-t border-gray-200 dark:border-gray-600\">\n                        <div className=\"text-xs text-blue-600 dark:text-blue-400\">\n                            <strong>Note:</strong> This calculation is specific to the filtered view\n                            {selectedUserId && ` for user ${selectedUserId}`}\n                            {selectedProductId && ` for product ${selectedProductId}`}.\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nconst EventTimelineTable = ({ data, selectedUserId = '', selectedProductId = '' }) => {\n    const [showCumulative, setShowCumulative] = useState(false);\n    \n    // Add state for tooltip with debounce\n    const [tooltipData, setTooltipData] = useState(null);\n    const [tooltipPosition, setTooltipPosition] = useState({ x: 0, y: 0 });\n    const tooltipTimeoutRef = React.useRef(null);\n    \n    // FILTER VARIABLES: Now received as props from parent Stage3RevenueResults\n    // These are passed from the parent component that handles user selection\n    // selectedUserId and selectedProductId are now props instead of hardcoded empty strings\n\n    // Cleanup tooltip timeout on unmount\n    React.useEffect(() => {\n        return () => {\n            if (tooltipTimeoutRef.current) {\n                clearTimeout(tooltipTimeoutRef.current);\n            }\n        };\n    }, []);\n\n    // Debug logging\n    console.log('[DEBUG] EventTimelineTable received data:', data);\n    console.log('[DEBUG] Data structure check:', {\n        hasData: !!data,\n        hasDataData: !!data?.data,\n        hasDailyMetrics: !!data?.data?.daily_metrics,\n        hasTimelineData: !!data?.data?.timeline_data,\n        hasStructuredFormat: !!data?.data?.structured_format,\n        hasTimelineAnalysis: !!data?.data?.structured_format?.timeline_analysis,\n        dataKeys: data ? Object.keys(data) : [],\n        dataDataKeys: data?.data ? Object.keys(data.data) : []\n    });\n    \n    // NEW: Additional debugging for data.data structure\n    console.log('[DEBUG] Raw data.data structure:', data?.data);\n    console.log('[DEBUG] Available keys in data.data:', data?.data ? Object.keys(data.data) : []);\n    if (data?.data?.daily_metrics) {\n        console.log('[DEBUG] daily_metrics type:', typeof data.data.daily_metrics);\n        console.log('[DEBUG] daily_metrics sample:', data.data.daily_metrics);\n    }\n\n    // Handle multiple data formats: unified pipeline, legacy API, and direct timeline API\n    let timelineData;\n    let dates = [];\n    let dailyMetrics = {};\n    let cumulativeMetrics = {};\n    let userTimelines = {};\n    let userDailyMetrics = {};\n    \n    // Check if we have valid data first, but don't return early yet\n    const hasValidData = !!(data?.data?.daily_metrics || data?.data?.timeline_data || data?.data?.structured_format?.timeline_analysis || data?.data);\n    \n    if (hasValidData) {\n        if (data.data.structured_format?.timeline_analysis) {\n            // Unified pipeline format: timeline data is in structured_format.timeline_analysis\n            timelineData = data.data.structured_format.timeline_analysis;\n            dates = timelineData.dates || [];\n            dailyMetrics = timelineData.daily_metrics || {};\n            cumulativeMetrics = timelineData.cumulative_metrics || {};\n            userTimelines = timelineData.user_timelines || {};\n            userDailyMetrics = timelineData.user_daily_metrics || {};\n            console.log('[DEBUG] Using unified pipeline format. Timeline data:', timelineData);\n            console.log('[DEBUG] Dates:', dates);\n            console.log('[DEBUG] Daily metrics keys:', Object.keys(dailyMetrics));\n            console.log('[DEBUG] User timelines available:', Object.keys(userTimelines).length);\n            console.log('[DEBUG] User daily metrics available:', Object.keys(userDailyMetrics).length);\n        } else if (data.data.timeline_data && data.data.timeline_data.daily_metrics) {\n            // Direct timeline API format: timeline_data contains the TimelineData structure\n            timelineData = data.data.timeline_data;\n            dates = timelineData.dates || [];\n            dailyMetrics = timelineData.daily_metrics || {};\n            cumulativeMetrics = timelineData.cumulative_metrics || {};\n            userTimelines = timelineData.user_timelines || {};\n            userDailyMetrics = timelineData.user_daily_metrics || {};\n        } else if (data.data.daily_metrics && typeof data.data.daily_metrics === 'object' && data.data.daily_metrics.dates) {\n            // Legacy format: daily_metrics contains the entire legacy result\n            timelineData = data.data.daily_metrics;\n            dates = timelineData.dates || [];\n            // Convert legacy format to expected structure\n            if (timelineData.event_rows) {\n                // Transform legacy event_rows format to daily_metrics format\n                dates.forEach(date => {\n                    dailyMetrics[date] = {};\n                    Object.keys(timelineData.event_rows).forEach(metric => {\n                        dailyMetrics[date][metric] = timelineData.event_rows[metric][date] || 0;\n                    });\n                });\n            }\n            // Legacy format doesn't have user daily metrics\n            userDailyMetrics = {};\n        } else if (data.data.daily_metrics) {\n            // New format: daily_metrics is a direct mapping\n            timelineData = data.data;\n            dates = timelineData.dates || [];\n            dailyMetrics = timelineData.daily_metrics || {};\n            cumulativeMetrics = timelineData.cumulative_metrics || {};\n            userTimelines = timelineData.user_timelines || {};\n            userDailyMetrics = timelineData.user_daily_metrics || {};\n        }\n    }\n\n    // Extract available users and products for filtering\n    const { availableUsers, availableProducts } = useMemo(() => {\n        const users = new Set();\n        const products = new Set();\n        \n        // PRIORITY 1: Extract from user daily metrics (most accurate)\n        Object.keys(userDailyMetrics).forEach(userId => {\n            users.add(userId);\n        });\n        \n        // PRIORITY 2: Extract from user timelines if available\n        Object.keys(userTimelines).forEach(userId => {\n            users.add(userId);\n            const userTimeline = userTimelines[userId];\n            if (userTimeline.events) {\n                userTimeline.events.forEach(event => {\n                    if (event.product_id) {\n                        products.add(event.product_id);\n                    }\n                });\n            }\n            if (userTimeline.summary?.product_summaries) {\n                Object.keys(userTimeline.summary.product_summaries).forEach(productId => {\n                    products.add(productId);\n                });\n            }\n        });\n        \n        // PRIORITY 3: Extract from daily metrics breakdown if available\n        Object.values(dailyMetrics).forEach(dayData => {\n            if (dayData.estimated_revenue_breakdown?.user_breakdowns) {\n                Object.keys(dayData.estimated_revenue_breakdown.user_breakdowns).forEach(userId => {\n                    users.add(userId);\n                    const userBreakdown = dayData.estimated_revenue_breakdown.user_breakdowns[userId];\n                    if (userBreakdown.product_breakdowns) {\n                        Object.keys(userBreakdown.product_breakdowns).forEach(productId => {\n                            products.add(productId);\n                        });\n                    }\n                });\n            }\n        });\n        \n        return {\n            availableUsers: Array.from(users).sort(),\n            availableProducts: Array.from(products).sort()\n        };\n    }, [userDailyMetrics, userTimelines, dailyMetrics]);\n\n    // Filter data based on selected user/product\n    const filteredData = useMemo(() => {\n        if (!selectedUserId && !selectedProductId) {\n            return { dailyMetrics, cumulativeMetrics };\n        }\n\n        // CRITICAL: Use backend's pre-calculated user daily metrics directly\n        // No business logic recalculation in frontend - pure display layer\n        \n        const filteredDaily = {};\n        const filteredCumulative = {};\n\n        if (selectedUserId && !selectedProductId) {\n            // Filter by user only - use backend's user daily metrics directly\n            const userMetrics = userDailyMetrics[selectedUserId];\n            \n            if (userMetrics) {\n                // CRITICAL FIX: Calculate cumulative values for single user view\n                // Backend provides daily user metrics, but we need to calculate cumulative on frontend\n                let cumulativeValues = {\n                    trial_started: 0,\n                    trial_ended: 0,\n                    trial_converted: 0,\n                    trial_cancelled: 0,\n                    initial_purchase: 0,\n                    subscription_cancelled: 0,\n                    revenue: 0,\n                    refund: 0,\n                    refund_count: 0\n                };\n                \n                dates.forEach(date => {\n                    const userDayMetrics = userMetrics[date];\n                    if (userDayMetrics) {\n                        // Use backend's pre-calculated daily metrics directly\n                        filteredDaily[date] = { \n                            ...userDayMetrics,\n                            // CRITICAL FIX: Calculate revenue_net since backend doesn't provide it for individual users\n                            revenue_net: (userDayMetrics.revenue || 0) - (userDayMetrics.refund || 0)\n                        };\n                        \n                        // Calculate cumulative values by summing daily values\n                        cumulativeValues.trial_started += userDayMetrics.trial_started || 0;\n                        cumulativeValues.trial_ended += userDayMetrics.trial_ended || 0;\n                        cumulativeValues.trial_converted += userDayMetrics.trial_converted || 0;\n                        cumulativeValues.trial_cancelled += userDayMetrics.trial_cancelled || 0;\n                        cumulativeValues.initial_purchase += userDayMetrics.initial_purchase || 0;\n                        cumulativeValues.subscription_cancelled += userDayMetrics.subscription_cancelled || 0;\n                        cumulativeValues.revenue += userDayMetrics.revenue || 0;\n                        cumulativeValues.refund += userDayMetrics.refund || 0;\n                        cumulativeValues.refund_count += userDayMetrics.refund_count || 0;\n                        \n                        // Create cumulative metrics with proper field names\n                        filteredCumulative[date] = {\n                            // Copy daily values for state-based metrics (these don't accumulate)\n                            trial_pending: userDayMetrics.trial_pending || 0,\n                            subscription_active: userDayMetrics.subscription_active || 0,\n                            estimated_revenue: userDayMetrics.estimated_revenue || 0,\n                            \n                            // Add cumulative values with proper field names expected by getCumulativeValue functions\n                            cumulative_trial_started: cumulativeValues.trial_started,\n                            cumulative_trial_ended: cumulativeValues.trial_ended,\n                            cumulative_trial_converted: cumulativeValues.trial_converted,\n                            cumulative_trial_cancelled: cumulativeValues.trial_cancelled,\n                            cumulative_initial_purchase: cumulativeValues.initial_purchase,\n                            cumulative_subscription_cancelled: cumulativeValues.subscription_cancelled,\n                            cumulative_revenue: cumulativeValues.revenue,\n                            cumulative_refund: cumulativeValues.refund,\n                            cumulative_refund_count: cumulativeValues.refund_count,\n                            cumulative_revenue_net: cumulativeValues.revenue - cumulativeValues.refund\n                        };\n                    } else {\n                        // No data for this user on this date\n                        filteredDaily[date] = {\n                            trial_started: 0,\n                            trial_pending: 0,\n                            trial_ended: 0,\n                            trial_converted: 0,\n                            trial_cancelled: 0,\n                            initial_purchase: 0,\n                            subscription_active: 0,\n                            subscription_cancelled: 0,\n                            revenue: 0,\n                            refund: 0,\n                            refund_count: 0,\n                            estimated_revenue: 0,\n                            revenue_net: 0\n                        };\n                        \n                        // For cumulative, maintain previous cumulative values (no change on days with no activity)\n                        filteredCumulative[date] = {\n                            // State-based metrics remain 0\n                            trial_pending: 0,\n                            subscription_active: 0,\n                            estimated_revenue: 0,\n                            \n                            // Cumulative values remain at previous levels\n                            cumulative_trial_started: cumulativeValues.trial_started,\n                            cumulative_trial_ended: cumulativeValues.trial_ended,\n                            cumulative_trial_converted: cumulativeValues.trial_converted,\n                            cumulative_trial_cancelled: cumulativeValues.trial_cancelled,\n                            cumulative_initial_purchase: cumulativeValues.initial_purchase,\n                            cumulative_subscription_cancelled: cumulativeValues.subscription_cancelled,\n                            cumulative_revenue: cumulativeValues.revenue,\n                            cumulative_refund: cumulativeValues.refund,\n                            cumulative_refund_count: cumulativeValues.refund_count,\n                            cumulative_revenue_net: cumulativeValues.revenue - cumulativeValues.refund\n                        };\n                    }\n                });\n            } else {\n                // User not found in user daily metrics\n                dates.forEach(date => {\n                    filteredDaily[date] = {\n                        trial_started: 0,\n                        trial_pending: 0,\n                        trial_ended: 0,\n                        trial_converted: 0,\n                        trial_cancelled: 0,\n                        initial_purchase: 0,\n                        subscription_active: 0,\n                        subscription_cancelled: 0,\n                        revenue: 0,\n                        refund: 0,\n                        refund_count: 0,\n                        estimated_revenue: 0,\n                        revenue_net: 0\n                    };\n                    \n                    filteredCumulative[date] = {\n                        trial_pending: 0,\n                        subscription_active: 0,\n                        estimated_revenue: 0,\n                        cumulative_trial_started: 0,\n                        cumulative_trial_ended: 0,\n                        cumulative_trial_converted: 0,\n                        cumulative_trial_cancelled: 0,\n                        cumulative_initial_purchase: 0,\n                        cumulative_subscription_cancelled: 0,\n                        cumulative_revenue: 0,\n                        cumulative_refund: 0,\n                        cumulative_refund_count: 0,\n                        cumulative_revenue_net: 0\n                    };\n                });\n            }\n        } else if (selectedProductId && !selectedUserId) {\n            // Filter by product only - aggregate all users for this product\n            // TODO: Backend should provide product-specific aggregations directly\n            // For now, show original aggregate data with a note\n            dates.forEach(date => {\n                filteredDaily[date] = { ...dailyMetrics[date] };\n                filteredCumulative[date] = { ...cumulativeMetrics[date] };\n            });\n        } else if (selectedUserId && selectedProductId) {\n            // Filter by both user and product\n            // TODO: Backend should provide user-product specific metrics\n            // For now, use user metrics (which aggregate across all products for that user)\n            const userMetrics = userDailyMetrics[selectedUserId];\n            \n            if (userMetrics) {\n                // CRITICAL FIX: Calculate cumulative values for single user view (same logic as user-only)\n                let cumulativeValues = {\n                    trial_started: 0,\n                    trial_ended: 0,\n                    trial_converted: 0,\n                    trial_cancelled: 0,\n                    initial_purchase: 0,\n                    subscription_cancelled: 0,\n                    revenue: 0,\n                    refund: 0,\n                    refund_count: 0\n                };\n                \n                dates.forEach(date => {\n                    const userDayMetrics = userMetrics[date];\n                    if (userDayMetrics) {\n                        // Use backend's pre-calculated metrics directly\n                        // Note: This shows all products for the user, not just the selected product\n                        filteredDaily[date] = { \n                            ...userDayMetrics,\n                            // CRITICAL FIX: Calculate revenue_net since backend doesn't provide it for individual users\n                            revenue_net: (userDayMetrics.revenue || 0) - (userDayMetrics.refund || 0)\n                        };\n                        \n                        // Calculate cumulative values by summing daily values\n                        cumulativeValues.trial_started += userDayMetrics.trial_started || 0;\n                        cumulativeValues.trial_ended += userDayMetrics.trial_ended || 0;\n                        cumulativeValues.trial_converted += userDayMetrics.trial_converted || 0;\n                        cumulativeValues.trial_cancelled += userDayMetrics.trial_cancelled || 0;\n                        cumulativeValues.initial_purchase += userDayMetrics.initial_purchase || 0;\n                        cumulativeValues.subscription_cancelled += userDayMetrics.subscription_cancelled || 0;\n                        cumulativeValues.revenue += userDayMetrics.revenue || 0;\n                        cumulativeValues.refund += userDayMetrics.refund || 0;\n                        cumulativeValues.refund_count += userDayMetrics.refund_count || 0;\n                        \n                        // Create cumulative metrics with proper field names\n                        filteredCumulative[date] = {\n                            // Copy daily values for state-based metrics (these don't accumulate)\n                            trial_pending: userDayMetrics.trial_pending || 0,\n                            subscription_active: userDayMetrics.subscription_active || 0,\n                            estimated_revenue: userDayMetrics.estimated_revenue || 0,\n                            \n                            // Add cumulative values with proper field names expected by getCumulativeValue functions\n                            cumulative_trial_started: cumulativeValues.trial_started,\n                            cumulative_trial_ended: cumulativeValues.trial_ended,\n                            cumulative_trial_converted: cumulativeValues.trial_converted,\n                            cumulative_trial_cancelled: cumulativeValues.trial_cancelled,\n                            cumulative_initial_purchase: cumulativeValues.initial_purchase,\n                            cumulative_subscription_cancelled: cumulativeValues.subscription_cancelled,\n                            cumulative_revenue: cumulativeValues.revenue,\n                            cumulative_refund: cumulativeValues.refund,\n                            cumulative_refund_count: cumulativeValues.refund_count,\n                            cumulative_revenue_net: cumulativeValues.revenue - cumulativeValues.refund\n                        };\n                    } else {\n                        filteredDaily[date] = {\n                            trial_started: 0,\n                            trial_pending: 0,\n                            trial_ended: 0,\n                            trial_converted: 0,\n                            trial_cancelled: 0,\n                            initial_purchase: 0,\n                            subscription_active: 0,\n                            subscription_cancelled: 0,\n                            revenue: 0,\n                            refund: 0,\n                            refund_count: 0,\n                            estimated_revenue: 0,\n                            revenue_net: 0\n                        };\n                        \n                        // For cumulative, maintain previous cumulative values (no change on days with no activity)\n                        filteredCumulative[date] = {\n                            // State-based metrics remain 0\n                            trial_pending: 0,\n                            subscription_active: 0,\n                            estimated_revenue: 0,\n                            \n                            // Cumulative values remain at previous levels\n                            cumulative_trial_started: cumulativeValues.trial_started,\n                            cumulative_trial_ended: cumulativeValues.trial_ended,\n                            cumulative_trial_converted: cumulativeValues.trial_converted,\n                            cumulative_trial_cancelled: cumulativeValues.trial_cancelled,\n                            cumulative_initial_purchase: cumulativeValues.initial_purchase,\n                            cumulative_subscription_cancelled: cumulativeValues.subscription_cancelled,\n                            cumulative_revenue: cumulativeValues.revenue,\n                            cumulative_refund: cumulativeValues.refund,\n                            cumulative_refund_count: cumulativeValues.refund_count,\n                            cumulative_revenue_net: cumulativeValues.revenue - cumulativeValues.refund\n                        };\n                    }\n                });\n            } else {\n                dates.forEach(date => {\n                    filteredDaily[date] = {\n                        trial_started: 0,\n                        trial_pending: 0,\n                        trial_ended: 0,\n                        trial_converted: 0,\n                        trial_cancelled: 0,\n                        initial_purchase: 0,\n                        subscription_active: 0,\n                        subscription_cancelled: 0,\n                        revenue: 0,\n                        refund: 0,\n                        refund_count: 0,\n                        estimated_revenue: 0,\n                        revenue_net: 0\n                    };\n                    \n                    filteredCumulative[date] = {\n                        trial_pending: 0,\n                        subscription_active: 0,\n                        estimated_revenue: 0,\n                        cumulative_trial_started: 0,\n                        cumulative_trial_ended: 0,\n                        cumulative_trial_converted: 0,\n                        cumulative_trial_cancelled: 0,\n                        cumulative_initial_purchase: 0,\n                        cumulative_subscription_cancelled: 0,\n                        cumulative_revenue: 0,\n                        cumulative_refund: 0,\n                        cumulative_refund_count: 0,\n                        cumulative_revenue_net: 0\n                    };\n                });\n            }\n        }\n\n        return { dailyMetrics: filteredDaily, cumulativeMetrics: filteredCumulative };\n    }, [selectedUserId, selectedProductId, dailyMetrics, cumulativeMetrics, userDailyMetrics, dates]);\n\n    // NOW we can do early returns after all hooks are called\n    if (!hasValidData) {\n        return (\n            <div className=\"text-center py-8\">\n                <p className=\"text-gray-500 dark:text-gray-400\">\n                    No timeline data available. Run an analysis to see results.\n                </p>\n            </div>\n        );\n    }\n\n    const formatCurrency = (value) => {\n        if (value === null || value === undefined) return '$0';\n        const rounded = Math.round(Number(value));\n        return `$${rounded.toLocaleString()}`;\n    };\n\n    const formatNumber = (value) => {\n        if (value === null || value === undefined) return '0';\n        return Number(value).toLocaleString();\n    };\n\n    // Function to generate tooltip data for estimated revenue\n    const getEstimatedRevenueTooltipData = (date, value) => {\n        // CRITICAL: Only show tooltip for individual user view, NEVER for aggregate\n        if (!selectedUserId) {\n            return null;\n        }\n        \n        // Add safety check for value parameter\n        const safeValue = typeof value === 'number' ? value : 0;\n        \n        if (safeValue === 0) {\n            return null; // Don't show tooltip for $0 values\n        }\n        \n        console.log(`[DEBUG] getEstimatedRevenueTooltipData called with:`, {\n            date,\n            originalValue: value,\n            safeValue,\n            valueType: typeof value,\n            selectedUserId,\n            selectedProductId\n        });\n        \n        // SIMPLIFIED: Use pre-computed tooltip data from backend\n        // No more business logic calculations on frontend - just display what backend sends\n        \n        // Get the user's daily metrics for this date\n        const userMetrics = userDailyMetrics[selectedUserId];\n        if (!userMetrics || !userMetrics[date]) {\n            console.warn(`[WARN] No user metrics found for user ${selectedUserId} on date ${date}`);\n            return null;\n        }\n        \n        const dayMetrics = userMetrics[date];\n        const tooltipData = dayMetrics.tooltip_data;\n        \n        console.log(`[DEBUG] Backend tooltip data for ${selectedUserId} on ${date}:`, {\n            hasTooltipData: !!tooltipData,\n            tooltipData: tooltipData,\n            dayMetrics: dayMetrics\n        });\n        \n        if (!tooltipData) {\n            console.warn(`[WARN] No tooltip data found for user ${selectedUserId} on date ${date}`);\n            return null;\n        }\n        \n        // Return the pre-computed tooltip data from backend\n        return {\n            value: safeValue,\n            breakdown: tooltipData.breakdown,\n            result: `$${safeValue.toFixed(2)}`\n        };\n    };\n\n    // Define all metrics with their categories and data extraction logic\n    const metrics = [\n        // Daily Absolute Values\n        {\n            key: 'daily_trial_started',\n            label: 'Trial Started',\n            category: 'daily_absolute',\n            categoryLabel: 'Daily Absolute Values',\n            getValue: (date) => filteredData.dailyMetrics[date]?.trial_started || 0,\n            getCumulativeValue: (date) => filteredData.cumulativeMetrics[date]?.cumulative_trial_started || 0,\n            format: formatNumber\n        },\n        {\n            key: 'daily_trial_pending',\n            label: 'Trial Pending',\n            category: 'daily_absolute',\n            getValue: (date) => filteredData.dailyMetrics[date]?.trial_pending || 0,\n            // CRITICAL FIX: Trial pending is a state-based metric, cumulative should show same as daily\n            getCumulativeValue: (date) => filteredData.dailyMetrics[date]?.trial_pending || 0,\n            format: formatNumber\n        },\n        {\n            key: 'daily_trial_ended',\n            label: 'Trial Ended',\n            category: 'daily_absolute',\n            getValue: (date) => filteredData.dailyMetrics[date]?.trial_ended || 0,\n            getCumulativeValue: (date) => filteredData.cumulativeMetrics[date]?.cumulative_trial_ended || 0,\n            format: formatNumber\n        },\n        {\n            key: 'daily_trial_cancelled',\n            label: 'Trial Cancelled',\n            category: 'daily_absolute',\n            getValue: (date) => filteredData.dailyMetrics[date]?.trial_cancelled || 0,\n            getCumulativeValue: (date) => filteredData.cumulativeMetrics[date]?.cumulative_trial_cancelled || 0,\n            format: formatNumber\n        },\n        {\n            key: 'daily_trial_converted',\n            label: 'Trial Converted',\n            category: 'daily_absolute',\n            getValue: (date) => filteredData.dailyMetrics[date]?.trial_converted || 0,\n            getCumulativeValue: (date) => filteredData.cumulativeMetrics[date]?.cumulative_trial_converted || 0,\n            format: formatNumber\n        },\n        {\n            key: 'daily_initial_purchase',\n            label: 'Initial Purchase',\n            category: 'daily_absolute',\n            getValue: (date) => filteredData.dailyMetrics[date]?.initial_purchase || 0,\n            getCumulativeValue: (date) => filteredData.cumulativeMetrics[date]?.cumulative_initial_purchase || 0,\n            format: formatNumber\n        },\n        {\n            key: 'daily_subscription_active',\n            label: 'Subscription Active',\n            category: 'daily_absolute',\n            getValue: (date) => filteredData.dailyMetrics[date]?.subscription_active || 0,\n            // CRITICAL FIX: Subscription active is a state-based metric, cumulative should show same as daily\n            getCumulativeValue: (date) => filteredData.dailyMetrics[date]?.subscription_active || 0,\n            format: formatNumber\n        },\n        {\n            key: 'daily_subscription_cancelled',\n            label: 'Subscription Cancelled',\n            category: 'daily_absolute',\n            getValue: (date) => filteredData.dailyMetrics[date]?.subscription_cancelled || 0,\n            getCumulativeValue: (date) => filteredData.cumulativeMetrics[date]?.cumulative_subscription_cancelled || 0,\n            format: formatNumber\n        },\n        {\n            key: 'daily_users',\n            label: 'Daily Users',\n            category: 'daily_absolute',\n            getValue: (date) => filteredData.dailyMetrics[date]?.daily_users || 0,\n            getCumulativeValue: (date) => filteredData.dailyMetrics[date]?.cumulative_users || 0,\n            format: formatNumber\n        },\n        {\n            key: 'daily_refund_count',\n            label: 'Refunds',\n            category: 'daily_absolute',\n            getValue: (date) => filteredData.dailyMetrics[date]?.refund_count || 0,\n            getCumulativeValue: (date) => filteredData.cumulativeMetrics[date]?.cumulative_refund_count || 0,\n            format: formatNumber\n        },\n        // Revenue Values\n        {\n            key: 'daily_revenue',\n            label: 'Revenue',\n            category: 'revenue',\n            categoryLabel: 'Revenue Values',\n            getValue: (date) => filteredData.dailyMetrics[date]?.revenue || 0,\n            getCumulativeValue: (date) => filteredData.cumulativeMetrics[date]?.cumulative_revenue || 0,\n            format: formatCurrency\n        },\n        {\n            key: 'daily_refund',\n            label: 'Refunds',\n            category: 'revenue',\n            getValue: (date) => filteredData.dailyMetrics[date]?.refund || 0,\n            getCumulativeValue: (date) => filteredData.cumulativeMetrics[date]?.cumulative_refund || 0,\n            format: formatCurrency\n        },\n        {\n            key: 'daily_revenue_net',\n            label: 'Net Revenue',\n            category: 'revenue',\n            getValue: (date) => filteredData.dailyMetrics[date]?.revenue_net || 0,\n            getCumulativeValue: (date) => filteredData.cumulativeMetrics[date]?.cumulative_revenue_net || 0,\n            format: formatCurrency\n        },\n        {\n            key: 'daily_estimated_revenue',\n            label: 'Estimated Revenue',\n            category: 'revenue',\n            isEstimatedRevenue: true,\n            getValue: (date) => filteredData.dailyMetrics[date]?.estimated_revenue || 0,\n            // CRITICAL FIX: Estimated revenue is a state-based metric, cumulative should show same as daily\n            getCumulativeValue: (date) => filteredData.dailyMetrics[date]?.estimated_revenue || 0,\n            format: formatCurrency,\n            getTooltipData: (date) => {\n                const value = showCumulative \n                    ? (filteredData.dailyMetrics[date]?.estimated_revenue || 0)  // Same as daily for state-based\n                    : (filteredData.dailyMetrics[date]?.estimated_revenue || 0);\n                return getEstimatedRevenueTooltipData(date, value);\n            }\n        }\n    ];\n\n    // Group metrics by category\n    const groupedMetrics = metrics.reduce((acc, metric) => {\n        if (!acc[metric.category]) {\n            acc[metric.category] = {\n                label: metric.categoryLabel || metric.category,\n                metrics: []\n            };\n        }\n        acc[metric.category].metrics.push(metric);\n        return acc;\n    }, {});\n\n    return (\n        <>\n            <div className=\"mb-8 bg-white dark:bg-gray-700 p-6 rounded-lg shadow-md\">\n                <div className=\"flex justify-between items-center mb-4\">\n                    <h2 className=\"text-2xl font-bold text-gray-800 dark:text-white\">Daily Event & Revenue Timeline</h2>\n                    <div className=\"flex gap-2\">\n                        <button\n                            onClick={() => setShowCumulative(!showCumulative)}\n                            className={`px-3 py-1 text-sm rounded-full ${\n                                showCumulative \n                                    ? 'bg-blue-500 text-white' \n                                    : 'bg-gray-200 dark:bg-gray-600 text-gray-700 dark:text-white'\n                            }`}\n                        >\n                            {showCumulative ? 'Show Daily' : 'Show Cumulative'}\n                        </button>\n                    </div>\n                </div>\n                \n                {/* Table Container */}\n                <div className=\"overflow-x-auto\">\n                    <table className=\"min-w-full text-sm border dark:border-gray-600\">\n                        <thead className=\"bg-gray-50 dark:bg-gray-700\">\n                            <tr>\n                                <th className=\"p-2 border-b dark:border-gray-600 text-left text-gray-700 dark:text-white sticky left-0 bg-gray-50 dark:bg-gray-700 z-10 min-w-[200px]\">\n                                    Metric\n                                </th>\n                                {dates.map(date => (\n                                    <th key={date} className=\"p-2 border-b dark:border-gray-600 text-center text-gray-700 dark:text-white whitespace-nowrap min-w-[80px]\">\n                                        {date}\n                                    </th>\n                                ))}\n                            </tr>\n                        </thead>\n                        <tbody className=\"bg-white dark:bg-gray-800\">\n                            {Object.entries(groupedMetrics).map(([categoryKey, category]) => (\n                                <React.Fragment key={categoryKey}>\n                                    {/* Category Header */}\n                                    <tr className=\"bg-gray-100 dark:bg-gray-600\">\n                                        <td colSpan={dates.length + 1} className=\"p-2 font-semibold text-gray-800 dark:text-white border-b dark:border-gray-600\">\n                                            {category.label}\n                                        </td>\n                                    </tr>\n                                    {/* Metrics in this category */}\n                                    {category.metrics.map((metric) => (\n                                        <tr key={metric.key} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\n                                            <td className=\"p-2 border-b dark:border-gray-600 font-medium text-gray-700 dark:text-white sticky left-0 bg-white dark:bg-gray-800 z-10\">\n                                                {metric.label}\n                                            </td>\n                                            {dates.map(date => {\n                                                const value = showCumulative \n                                                    ? metric.getCumulativeValue(date)\n                                                    : metric.getValue(date);\n                                                return (\n                                                    <td \n                                                        key={date} \n                                                        className={`p-2 border-b dark:border-gray-600 text-center text-gray-700 dark:text-white ${\n                                                            metric.isEstimatedRevenue && selectedUserId ? 'cursor-help hover:bg-yellow-50 dark:hover:bg-yellow-900/20 relative' : ''\n                                                        }`}\n                                                        onMouseEnter={metric.isEstimatedRevenue && selectedUserId ? (e) => {\n                                                            // Only show tooltip for single user views\n                                                            if (!selectedUserId) return;\n                                                            \n                                                            // Clear any existing timeout\n                                                            if (tooltipTimeoutRef.current) {\n                                                                clearTimeout(tooltipTimeoutRef.current);\n                                                                tooltipTimeoutRef.current = null;\n                                                            }\n                                                            \n                                                            // Small delay to prevent tooltip from appearing on quick mouse movements\n                                                            const newTimeout = setTimeout(() => {\n                                                                const rect = e.target.getBoundingClientRect();\n                                                                const tooltipData = getEstimatedRevenueTooltipData(date, value);\n                                                                \n                                                                if (tooltipData) {\n                                                                    setTooltipData(tooltipData);\n                                                                    \n                                                                    // Smart positioning: check available space\n                                                                    const tooltipWidth = 480; // Estimated tooltip width\n                                                                    const tooltipHeight = 480; // Estimated tooltip height\n                                                                    const spaceOnRight = window.innerWidth - rect.right;\n                                                                    const spaceOnLeft = rect.left;\n                                                                    \n                                                                    let xPosition, yPosition;\n                                                                    \n                                                                    // Choose horizontal position based on available space\n                                                                    if (spaceOnRight >= tooltipWidth + 20) {\n                                                                        // Enough space on the right\n                                                                        xPosition = rect.right + 10;\n                                                                    } else if (spaceOnLeft >= tooltipWidth + 20) {\n                                                                        // Not enough space on right, but enough on left\n                                                                        xPosition = rect.left - tooltipWidth - 10;\n                                                                    } else {\n                                                                        // Not enough space on either side, center it\n                                                                        xPosition = Math.max(10, (window.innerWidth - tooltipWidth) / 2);\n                                                                    }\n                                                                    \n                                                                    // Vertical position: position so BOTTOM of tooltip aligns with cell center\n                                                                    const cellCenterY = rect.top + (rect.height / 2);\n                                                                    yPosition = Math.max(10, cellCenterY - tooltipHeight); // Subtract tooltip height\n                                                                    \n                                                                    // Ensure tooltip doesn't go below screen\n                                                                    yPosition = Math.min(yPosition, window.innerHeight - tooltipHeight - 10);\n                                                                    \n                                                                    setTooltipPosition({ \n                                                                        x: xPosition,\n                                                                        y: yPosition\n                                                                    });\n                                                                }\n                                                            }, 150); // Shorter delay for better responsiveness\n                                                            \n                                                            tooltipTimeoutRef.current = newTimeout;\n                                                        } : undefined}\n                                                        onMouseLeave={metric.isEstimatedRevenue && selectedUserId ? () => {\n                                                            // Only handle mouse leave for single user views\n                                                            if (!selectedUserId) return;\n                                                            \n                                                            // Clear the show timeout if mouse leaves before tooltip appears\n                                                            if (tooltipTimeoutRef.current) {\n                                                                clearTimeout(tooltipTimeoutRef.current);\n                                                                tooltipTimeoutRef.current = null;\n                                                            }\n                                                            \n                                                            // Set a timeout to hide the tooltip, allowing time to move to tooltip\n                                                            const hideTimeout = setTimeout(() => {\n                                                                setTooltipData(null);\n                                                            }, 100); // Shorter delay for quicker hiding\n                                                            \n                                                            tooltipTimeoutRef.current = hideTimeout;\n                                                        } : undefined}\n                                                    >\n                                                        {metric.format(value)}\n                                                    </td>\n                                                );\n                                            })}\n                                        </tr>\n                                    ))}\n                                </React.Fragment>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n\n                {dates.length === 0 && (\n                    <div className=\"text-center py-8\">\n                        <p className=\"text-gray-500 dark:text-gray-400\">\n                            No timeline data available. Run an analysis to see results.\n                        </p>\n                    </div>\n                )}\n            </div>\n            \n            {/* Estimated Revenue Tooltip */}\n            <EstimatedRevenueTooltip\n                data={tooltipData}\n                position={tooltipPosition}\n                onClose={() => setTooltipData(null)}\n                selectedUserId={selectedUserId}\n                selectedProductId={selectedProductId}\n            />\n        </>\n    );\n};\n\nexport default EventTimelineTable; "],"mappings":"yJAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,OAAO,KAAQ,OAAO,CAEhD;AAAA,OAAAC,IAAA,IAAAC,KAAA,CAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,yBACA,KAAM,CAAAC,uBAAuB,CAAGC,IAAA,EAAoE,IAAnE,CAAEC,IAAI,CAAEC,QAAQ,CAAEC,OAAO,CAAEC,cAAc,CAAEC,iBAAkB,CAAC,CAAAL,IAAA,CAC3F,KAAM,CAACM,SAAS,CAAEC,YAAY,CAAC,CAAGjB,KAAK,CAACC,QAAQ,CAAC,KAAK,CAAC,CACvD,KAAM,CAAAiB,eAAe,CAAGlB,KAAK,CAACmB,MAAM,CAAC,IAAI,CAAC,CAE1C,GAAI,CAACR,IAAI,CAAE,MAAO,KAAI,CAEtB;AACA,KAAM,CAAAS,SAAS,CAAGT,IAAI,CAACU,KAAK,EAAI,CAAC,CACjC,KAAM,CAAAC,aAAa,CAAGX,IAAI,CAACY,SAAS,EAAI,CAAC,CAAC,CAC1C,KAAM,CAAAC,cAAc,CAAGF,aAAa,CAACG,UAAU,EAAI,CAAC,CAAC,CACrD,KAAM,CAAAC,WAAW,CAAGJ,aAAa,CAACK,OAAO,EAAI,sBAAsB,CACnE,KAAM,CAAAC,eAAe,CAAGN,aAAa,CAACO,WAAW,EAAI,0BAA0B,CAE/E,KAAM,CAAAC,gBAAgB,CAAGA,CAAA,GAAM,CAC3Bb,YAAY,CAAC,IAAI,CAAC,CAClB;AACA,GAAIC,eAAe,CAACa,OAAO,CAAE,CACzBC,YAAY,CAACd,eAAe,CAACa,OAAO,CAAC,CACrCb,eAAe,CAACa,OAAO,CAAG,IAAI,CAClC,CACJ,CAAC,CAED,KAAM,CAAAE,gBAAgB,CAAGA,CAAA,GAAM,CAC3BhB,YAAY,CAAC,KAAK,CAAC,CACnB;AACAC,eAAe,CAACa,OAAO,CAAGG,UAAU,CAAC,IAAM,CACvCrB,OAAO,CAAC,CAAC,CACb,CAAC,CAAE,GAAG,CAAC,CAAE;AACb,CAAC,CAED,mBACIT,KAAA,QACI+B,SAAS,CAAC,wIAAwI,CAClJC,KAAK,CAAE,CACH;AACAC,IAAI,CAAEzB,QAAQ,CAAC0B,CAAC,CAChBC,GAAG,CAAE3B,QAAQ,CAAC4B,CAAC,CACfC,aAAa,CAAE,MACnB,CAAE,CACFC,YAAY,CAAEZ,gBAAiB,CAC/Ba,YAAY,CAAEV,gBAAiB,CAAAW,QAAA,eAE/BxC,KAAA,QAAK+B,SAAS,CAAC,uCAAuC,CAAAS,QAAA,eAClDxC,KAAA,OAAI+B,SAAS,CAAC,6CAA6C,CAAAS,QAAA,EAAC,sBACpC,CAACxB,SAAS,CAACyB,OAAO,CAAC,CAAC,CAAC,EACzC,CAAC,cACLvC,IAAA,WACIwC,OAAO,CAAEjC,OAAQ,CACjBsB,SAAS,CAAC,iEAAiE,CAAAS,QAAA,CAC9E,MAED,CAAQ,CAAC,EACR,CAAC,cAENxC,KAAA,QAAK+B,SAAS,CAAC,WAAW,CAAAS,QAAA,EAErB,CAAC,IAAM,CACJ,KAAM,CAAAG,cAAc,CAAGzB,aAAa,CAAC0B,eAAe,EAAI,CAAC,CAAC,CAC1D,KAAM,CAAAC,eAAe,CAAG3B,aAAa,CAAC4B,gBAAgB,EAAI,CAAC,CAAC,CAE5D,KAAM,CAAAC,cAAc,CAAGJ,cAAc,CAACK,cAAc,CAAG,CAAC,CACxD,KAAM,CAAAC,gBAAgB,CAAGJ,eAAe,CAACG,cAAc,CAAG,CAAC,CAE3D,GAAI,CAACD,cAAc,EAAI,CAACE,gBAAgB,CAAE,MAAO,KAAI,CAErD,mBACIjD,KAAA,QAAK+B,SAAS,CAAC,wFAAwF,CAAAS,QAAA,eACnGtC,IAAA,QAAK6B,SAAS,CAAC,2DAA2D,CAAAS,QAAA,CAAC,mCAE3E,CAAK,CAAC,CAELO,cAAc,eACX/C,KAAA,QAAK+B,SAAS,CAAC,MAAM,CAAAS,QAAA,eACjBtC,IAAA,QAAK6B,SAAS,CAAC,sDAAsD,CAAAS,QAAA,CAAC,+BAEtE,CAAK,CAAC,cACNtC,IAAA,QAAK6B,SAAS,CAAC,oDAAoD,CAAAS,QAAA,CAC9D,CAAC,IAAM,CACJ,KAAM,CAAAU,OAAO,CAAGP,cAAc,CAACK,cAAc,EAAI,CAAC,CAClD,KAAM,CAAAG,gBAAgB,CAAGR,cAAc,CAACS,iBAAiB,EAAI,CAAC,CAC9D,KAAM,CAAAC,UAAU,CAAGH,OAAO,CAAG,CAAC,CAAIC,gBAAgB,CAAGD,OAAO,CAAI,GAAG,CAAG,CAAC,CACvE,SAAAI,MAAA,CAAUH,gBAAgB,CAACV,OAAO,CAAC,CAAC,CAAC,QAAAa,MAAA,CAAMJ,OAAO,CAACT,OAAO,CAAC,CAAC,CAAC,QAAAa,MAAA,CAAMD,UAAU,CAACZ,OAAO,CAAC,CAAC,CAAC,MAC5F,CAAC,EAAE,CAAC,CACH,CAAC,cACNzC,KAAA,QAAK+B,SAAS,CAAC,0CAA0C,CAAAS,QAAA,EAAC,GACrD,CAAC,CAACG,cAAc,CAACS,iBAAiB,EAAI,CAAC,EAAEX,OAAO,CAAC,CAAC,CAAC,CAAC,yBAAuB,CAAC,CAACE,cAAc,CAACK,cAAc,EAAI,CAAC,EAAEP,OAAO,CAAC,CAAC,CAAC,CAAC,UACjI,EAAK,CAAC,EACL,CACR,CAEAQ,gBAAgB,eACbjD,KAAA,QAAAwC,QAAA,eACItC,IAAA,QAAK6B,SAAS,CAAC,sDAAsD,CAAAS,QAAA,CAAC,+BAEtE,CAAK,CAAC,cACNtC,IAAA,QAAK6B,SAAS,CAAC,oDAAoD,CAAAS,QAAA,CAC9D,CAAC,IAAM,CACJ,KAAM,CAAAU,OAAO,CAAGL,eAAe,CAACG,cAAc,EAAI,CAAC,CACnD,KAAM,CAAAG,gBAAgB,CAAGN,eAAe,CAACO,iBAAiB,EAAI,CAAC,CAC/D,KAAM,CAAAC,UAAU,CAAGH,OAAO,CAAG,CAAC,CAAIC,gBAAgB,CAAGD,OAAO,CAAI,GAAG,CAAG,CAAC,CACvE,SAAAI,MAAA,CAAUH,gBAAgB,CAACV,OAAO,CAAC,CAAC,CAAC,QAAAa,MAAA,CAAMJ,OAAO,CAACT,OAAO,CAAC,CAAC,CAAC,QAAAa,MAAA,CAAMD,UAAU,CAACZ,OAAO,CAAC,CAAC,CAAC,MAC5F,CAAC,EAAE,CAAC,CACH,CAAC,cACNzC,KAAA,QAAK+B,SAAS,CAAC,0CAA0C,CAAAS,QAAA,EAAC,GACrD,CAAC,CAACK,eAAe,CAACO,iBAAiB,EAAI,CAAC,EAAEX,OAAO,CAAC,CAAC,CAAC,CAAC,yBAAuB,CAAC,CAACI,eAAe,CAACG,cAAc,EAAI,CAAC,EAAEP,OAAO,CAAC,CAAC,CAAC,CAAC,UACnI,EAAK,CAAC,EACL,CACR,EACA,CAAC,CAEd,CAAC,EAAE,CAAC,cAGJzC,KAAA,QAAAwC,QAAA,eACItC,IAAA,QAAK6B,SAAS,CAAC,2DAA2D,CAAAS,QAAA,CAAC,UAE3E,CAAK,CAAC,cACNtC,IAAA,QAAK6B,SAAS,CAAC,4FAA4F,CAAAS,QAAA,CACtGlB,WAAW,CACX,CAAC,EACL,CAAC,cAGNtB,KAAA,QAAAwC,QAAA,eACItC,IAAA,QAAK6B,SAAS,CAAC,2DAA2D,CAAAS,QAAA,CAAC,cAE3E,CAAK,CAAC,cACNtC,IAAA,QAAK6B,SAAS,CAAC,4FAA4F,CAAAS,QAAA,CACtGhB,eAAe,CACf,CAAC,EACL,CAAC,cAGNxB,KAAA,QAAAwC,QAAA,eACItC,IAAA,QAAK6B,SAAS,CAAC,2DAA2D,CAAAS,QAAA,CAAC,aAE3E,CAAK,CAAC,cACNxC,KAAA,QAAK+B,SAAS,CAAC,WAAW,CAAAS,QAAA,EACrB,CAAC,IAAM,CACJ;AACA,KAAM,CAAAe,eAAe,CAAGrC,aAAa,CAACsC,gBAAgB,CACtD,KAAM,CAAAnC,UAAU,CAAGD,cAAc,CAEjC,GAAImC,eAAe,EAAIE,KAAK,CAACC,OAAO,CAACH,eAAe,CAAC,CAAE,CACnD;AACA,MAAO,CAAAA,eAAe,CAACI,GAAG,CAAEC,GAAG,EAAK,CAChC,KAAM,CAAA3C,KAAK,CAAGI,UAAU,CAACuC,GAAG,CAAC,CAC7B,GAAI3C,KAAK,GAAK4C,SAAS,CAAE,MAAO,KAAI,CAEpC,mBACI7D,KAAA,QAAe+B,SAAS,CAAC,8BAA8B,CAAAS,QAAA,eACnDxC,KAAA,SAAM+B,SAAS,CAAC,kCAAkC,CAAAS,QAAA,EAAEoB,GAAG,CAAC,GAAC,EAAM,CAAC,cAChE1D,IAAA,SAAM6B,SAAS,CAAC,2CAA2C,CAAAS,QAAA,CACtD,MAAO,CAAAvB,KAAK,GAAK,QAAQ,CAAGA,KAAK,CACjC,MAAO,CAAAA,KAAK,GAAK,QAAQ,CAAI2C,GAAG,CAACE,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,SAAS,CAAC,EAAIH,GAAG,CAACE,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,MAAM,CAAC,KAAAT,MAAA,CACvErC,KAAK,CAACwB,OAAO,CAAC,CAAC,CAAC,EAAKxB,KAAK,CAAC+C,QAAQ,CAAC,CAAC,CACtE/C,KAAK,EAAI,KAAK,CACb,CAAC,GAPD2C,GAQL,CAAC,CAEd,CAAC,CAAC,CAACK,MAAM,CAACC,OAAO,CAAC,CACtB,CAAC,IAAM,CACH;AACA,MAAO,CAAAC,MAAM,CAACC,OAAO,CAAC/C,UAAU,CAAC,CAACsC,GAAG,CAACU,KAAA,MAAC,CAACT,GAAG,CAAE3C,KAAK,CAAC,CAAAoD,KAAA,oBAC/CrE,KAAA,QAAe+B,SAAS,CAAC,8BAA8B,CAAAS,QAAA,eACnDxC,KAAA,SAAM+B,SAAS,CAAC,kCAAkC,CAAAS,QAAA,EAAEoB,GAAG,CAAC,GAAC,EAAM,CAAC,cAChE1D,IAAA,SAAM6B,SAAS,CAAC,2CAA2C,CAAAS,QAAA,CACtD,MAAO,CAAAvB,KAAK,GAAK,QAAQ,CAAGA,KAAK,CACjC,MAAO,CAAAA,KAAK,GAAK,QAAQ,CAAI2C,GAAG,CAACE,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,SAAS,CAAC,EAAIH,GAAG,CAACE,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,MAAM,CAAC,KAAAT,MAAA,CACvErC,KAAK,CAACwB,OAAO,CAAC,CAAC,CAAC,EAAKxB,KAAK,CAAC+C,QAAQ,CAAC,CAAC,CACtE/C,KAAK,EAAI,KAAK,CACb,CAAC,GAPD2C,GAQL,CAAC,EACT,CAAC,CACN,CACJ,CAAC,EAAE,CAAC,CAEH,CAAC,IAAM,CACJ,KAAM,CAAAL,eAAe,CAAGrC,aAAa,CAACsC,gBAAgB,CACtD,KAAM,CAAAnC,UAAU,CAAGD,cAAc,CAEjC;AACA,GAAI,CAAC,CAACmC,eAAe,EAAI,CAACE,KAAK,CAACC,OAAO,CAACH,eAAe,CAAC,EAAIA,eAAe,CAACe,MAAM,GAAK,CAAC,GACpFH,MAAM,CAACI,IAAI,CAAClD,UAAU,CAAC,CAACiD,MAAM,GAAK,CAAC,CAAE,CACtC,mBACIpE,IAAA,QAAK6B,SAAS,CAAC,0CAA0C,CAAAS,QAAA,CAAC,6BAE1D,CAAK,CAAC,CAEd,CACA,MAAO,KAAI,CACf,CAAC,EAAE,CAAC,EACH,CAAC,EACL,CAAC,CAGL,CAAC9B,cAAc,EAAIC,iBAAiB,gBACjCT,IAAA,QAAK6B,SAAS,CAAC,yDAAyD,CAAAS,QAAA,cACpExC,KAAA,QAAK+B,SAAS,CAAC,0CAA0C,CAAAS,QAAA,eACrDtC,IAAA,WAAAsC,QAAA,CAAQ,OAAK,CAAQ,CAAC,qDACtB,CAAC9B,cAAc,eAAA4C,MAAA,CAAiB5C,cAAc,CAAE,CAC/CC,iBAAiB,kBAAA2C,MAAA,CAAoB3C,iBAAiB,CAAE,CAAC,GAC9D,EAAK,CAAC,CACL,CACR,EACA,CAAC,EACL,CAAC,CAEd,CAAC,CAED,KAAM,CAAA6D,kBAAkB,CAAGC,KAAA,EAA2D,KAAAC,UAAA,CAAAC,WAAA,CAAAC,WAAA,CAAAC,WAAA,CAAAC,qBAAA,CAAAC,WAAA,CAAAC,WAAA,CAAAC,WAAA,CAAAC,WAAA,CAAAC,qBAAA,IAA1D,CAAE5E,IAAI,CAAEG,cAAc,CAAG,EAAE,CAAEC,iBAAiB,CAAG,EAAG,CAAC,CAAA8D,KAAA,CAC7E,KAAM,CAACW,cAAc,CAAEC,iBAAiB,CAAC,CAAGxF,QAAQ,CAAC,KAAK,CAAC,CAE3D;AACA,KAAM,CAACyF,WAAW,CAAEC,cAAc,CAAC,CAAG1F,QAAQ,CAAC,IAAI,CAAC,CACpD,KAAM,CAAC2F,eAAe,CAAEC,kBAAkB,CAAC,CAAG5F,QAAQ,CAAC,CAAEqC,CAAC,CAAE,CAAC,CAAEE,CAAC,CAAE,CAAE,CAAC,CAAC,CACtE,KAAM,CAAAsD,iBAAiB,CAAG9F,KAAK,CAACmB,MAAM,CAAC,IAAI,CAAC,CAE5C;AACA;AACA;AAEA;AACAnB,KAAK,CAAC+F,SAAS,CAAC,IAAM,CAClB,MAAO,IAAM,CACT,GAAID,iBAAiB,CAAC/D,OAAO,CAAE,CAC3BC,YAAY,CAAC8D,iBAAiB,CAAC/D,OAAO,CAAC,CAC3C,CACJ,CAAC,CACL,CAAC,CAAE,EAAE,CAAC,CAEN;AACAiE,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAEtF,IAAI,CAAC,CAC9DqF,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAE,CACzCC,OAAO,CAAE,CAAC,CAACvF,IAAI,CACfwF,WAAW,CAAE,CAAC,EAACxF,IAAI,SAAJA,IAAI,WAAJA,IAAI,CAAEA,IAAI,EACzByF,eAAe,CAAE,CAAC,EAACzF,IAAI,SAAJA,IAAI,YAAAmE,UAAA,CAAJnE,IAAI,CAAEA,IAAI,UAAAmE,UAAA,WAAVA,UAAA,CAAYuB,aAAa,EAC5CC,eAAe,CAAE,CAAC,EAAC3F,IAAI,SAAJA,IAAI,YAAAoE,WAAA,CAAJpE,IAAI,CAAEA,IAAI,UAAAoE,WAAA,WAAVA,WAAA,CAAYwB,aAAa,EAC5CC,mBAAmB,CAAE,CAAC,EAAC7F,IAAI,SAAJA,IAAI,YAAAqE,WAAA,CAAJrE,IAAI,CAAEA,IAAI,UAAAqE,WAAA,WAAVA,WAAA,CAAYyB,iBAAiB,EACpDC,mBAAmB,CAAE,CAAC,EAAC/F,IAAI,SAAJA,IAAI,YAAAsE,WAAA,CAAJtE,IAAI,CAAEA,IAAI,UAAAsE,WAAA,YAAAC,qBAAA,CAAVD,WAAA,CAAYwB,iBAAiB,UAAAvB,qBAAA,WAA7BA,qBAAA,CAA+ByB,iBAAiB,EACvEC,QAAQ,CAAEjG,IAAI,CAAG4D,MAAM,CAACI,IAAI,CAAChE,IAAI,CAAC,CAAG,EAAE,CACvCkG,YAAY,CAAElG,IAAI,SAAJA,IAAI,WAAJA,IAAI,CAAEA,IAAI,CAAG4D,MAAM,CAACI,IAAI,CAAChE,IAAI,CAACA,IAAI,CAAC,CAAG,EACxD,CAAC,CAAC,CAEF;AACAqF,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAEtF,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEA,IAAI,CAAC,CAC3DqF,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAEtF,IAAI,SAAJA,IAAI,WAAJA,IAAI,CAAEA,IAAI,CAAG4D,MAAM,CAACI,IAAI,CAAChE,IAAI,CAACA,IAAI,CAAC,CAAG,EAAE,CAAC,CAC7F,GAAIA,IAAI,SAAJA,IAAI,YAAAwE,WAAA,CAAJxE,IAAI,CAAEA,IAAI,UAAAwE,WAAA,WAAVA,WAAA,CAAYkB,aAAa,CAAE,CAC3BL,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAE,MAAO,CAAAtF,IAAI,CAACA,IAAI,CAAC0F,aAAa,CAAC,CAC1EL,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAEtF,IAAI,CAACA,IAAI,CAAC0F,aAAa,CAAC,CACzE,CAEA;AACA,GAAI,CAAAS,YAAY,CAChB,GAAI,CAAAC,KAAK,CAAG,EAAE,CACd,GAAI,CAAAC,YAAY,CAAG,CAAC,CAAC,CACrB,GAAI,CAAAC,iBAAiB,CAAG,CAAC,CAAC,CAC1B,GAAI,CAAAC,aAAa,CAAG,CAAC,CAAC,CACtB,GAAI,CAAAC,gBAAgB,CAAG,CAAC,CAAC,CAEzB;AACA,KAAM,CAAAC,YAAY,CAAG,CAAC,EAAEzG,IAAI,SAAJA,IAAI,YAAAyE,WAAA,CAAJzE,IAAI,CAAEA,IAAI,UAAAyE,WAAA,WAAVA,WAAA,CAAYiB,aAAa,EAAI1F,IAAI,SAAJA,IAAI,YAAA0E,WAAA,CAAJ1E,IAAI,CAAEA,IAAI,UAAA0E,WAAA,WAAVA,WAAA,CAAYkB,aAAa,EAAI5F,IAAI,SAAJA,IAAI,YAAA2E,WAAA,CAAJ3E,IAAI,CAAEA,IAAI,UAAA2E,WAAA,YAAAC,qBAAA,CAAVD,WAAA,CAAYmB,iBAAiB,UAAAlB,qBAAA,WAA7BA,qBAAA,CAA+BoB,iBAAiB,EAAIhG,IAAI,SAAJA,IAAI,WAAJA,IAAI,CAAEA,IAAI,CAAC,CAEjJ,GAAIyG,YAAY,CAAE,KAAAC,qBAAA,CACd,IAAAA,qBAAA,CAAI1G,IAAI,CAACA,IAAI,CAAC8F,iBAAiB,UAAAY,qBAAA,WAA3BA,qBAAA,CAA6BV,iBAAiB,CAAE,CAChD;AACAG,YAAY,CAAGnG,IAAI,CAACA,IAAI,CAAC8F,iBAAiB,CAACE,iBAAiB,CAC5DI,KAAK,CAAGD,YAAY,CAACC,KAAK,EAAI,EAAE,CAChCC,YAAY,CAAGF,YAAY,CAACT,aAAa,EAAI,CAAC,CAAC,CAC/CY,iBAAiB,CAAGH,YAAY,CAACQ,kBAAkB,EAAI,CAAC,CAAC,CACzDJ,aAAa,CAAGJ,YAAY,CAACS,cAAc,EAAI,CAAC,CAAC,CACjDJ,gBAAgB,CAAGL,YAAY,CAACU,kBAAkB,EAAI,CAAC,CAAC,CACxDxB,OAAO,CAACC,GAAG,CAAC,uDAAuD,CAAEa,YAAY,CAAC,CAClFd,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAEc,KAAK,CAAC,CACpCf,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAE1B,MAAM,CAACI,IAAI,CAACqC,YAAY,CAAC,CAAC,CACrEhB,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAE1B,MAAM,CAACI,IAAI,CAACuC,aAAa,CAAC,CAACxC,MAAM,CAAC,CACnFsB,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAE1B,MAAM,CAACI,IAAI,CAACwC,gBAAgB,CAAC,CAACzC,MAAM,CAAC,CAC9F,CAAC,IAAM,IAAI/D,IAAI,CAACA,IAAI,CAAC4F,aAAa,EAAI5F,IAAI,CAACA,IAAI,CAAC4F,aAAa,CAACF,aAAa,CAAE,CACzE;AACAS,YAAY,CAAGnG,IAAI,CAACA,IAAI,CAAC4F,aAAa,CACtCQ,KAAK,CAAGD,YAAY,CAACC,KAAK,EAAI,EAAE,CAChCC,YAAY,CAAGF,YAAY,CAACT,aAAa,EAAI,CAAC,CAAC,CAC/CY,iBAAiB,CAAGH,YAAY,CAACQ,kBAAkB,EAAI,CAAC,CAAC,CACzDJ,aAAa,CAAGJ,YAAY,CAACS,cAAc,EAAI,CAAC,CAAC,CACjDJ,gBAAgB,CAAGL,YAAY,CAACU,kBAAkB,EAAI,CAAC,CAAC,CAC5D,CAAC,IAAM,IAAI7G,IAAI,CAACA,IAAI,CAAC0F,aAAa,EAAI,MAAO,CAAA1F,IAAI,CAACA,IAAI,CAAC0F,aAAa,GAAK,QAAQ,EAAI1F,IAAI,CAACA,IAAI,CAAC0F,aAAa,CAACU,KAAK,CAAE,CAChH;AACAD,YAAY,CAAGnG,IAAI,CAACA,IAAI,CAAC0F,aAAa,CACtCU,KAAK,CAAGD,YAAY,CAACC,KAAK,EAAI,EAAE,CAChC;AACA,GAAID,YAAY,CAACW,UAAU,CAAE,CACzB;AACAV,KAAK,CAACW,OAAO,CAACC,IAAI,EAAI,CAClBX,YAAY,CAACW,IAAI,CAAC,CAAG,CAAC,CAAC,CACvBpD,MAAM,CAACI,IAAI,CAACmC,YAAY,CAACW,UAAU,CAAC,CAACC,OAAO,CAACE,MAAM,EAAI,CACnDZ,YAAY,CAACW,IAAI,CAAC,CAACC,MAAM,CAAC,CAAGd,YAAY,CAACW,UAAU,CAACG,MAAM,CAAC,CAACD,IAAI,CAAC,EAAI,CAAC,CAC3E,CAAC,CAAC,CACN,CAAC,CAAC,CACN,CACA;AACAR,gBAAgB,CAAG,CAAC,CAAC,CACzB,CAAC,IAAM,IAAIxG,IAAI,CAACA,IAAI,CAAC0F,aAAa,CAAE,CAChC;AACAS,YAAY,CAAGnG,IAAI,CAACA,IAAI,CACxBoG,KAAK,CAAGD,YAAY,CAACC,KAAK,EAAI,EAAE,CAChCC,YAAY,CAAGF,YAAY,CAACT,aAAa,EAAI,CAAC,CAAC,CAC/CY,iBAAiB,CAAGH,YAAY,CAACQ,kBAAkB,EAAI,CAAC,CAAC,CACzDJ,aAAa,CAAGJ,YAAY,CAACS,cAAc,EAAI,CAAC,CAAC,CACjDJ,gBAAgB,CAAGL,YAAY,CAACU,kBAAkB,EAAI,CAAC,CAAC,CAC5D,CACJ,CAEA;AACA,KAAM,CAAEK,cAAc,CAAEC,iBAAkB,CAAC,CAAG5H,OAAO,CAAC,IAAM,CACxD,KAAM,CAAA6H,KAAK,CAAG,GAAI,CAAAC,GAAG,CAAC,CAAC,CACvB,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAD,GAAG,CAAC,CAAC,CAE1B;AACAzD,MAAM,CAACI,IAAI,CAACwC,gBAAgB,CAAC,CAACO,OAAO,CAACQ,MAAM,EAAI,CAC5CH,KAAK,CAACI,GAAG,CAACD,MAAM,CAAC,CACrB,CAAC,CAAC,CAEF;AACA3D,MAAM,CAACI,IAAI,CAACuC,aAAa,CAAC,CAACQ,OAAO,CAACQ,MAAM,EAAI,KAAAE,qBAAA,CACzCL,KAAK,CAACI,GAAG,CAACD,MAAM,CAAC,CACjB,KAAM,CAAAG,YAAY,CAAGnB,aAAa,CAACgB,MAAM,CAAC,CAC1C,GAAIG,YAAY,CAACC,MAAM,CAAE,CACrBD,YAAY,CAACC,MAAM,CAACZ,OAAO,CAACa,KAAK,EAAI,CACjC,GAAIA,KAAK,CAACC,UAAU,CAAE,CAClBP,QAAQ,CAACE,GAAG,CAACI,KAAK,CAACC,UAAU,CAAC,CAClC,CACJ,CAAC,CAAC,CACN,CACA,IAAAJ,qBAAA,CAAIC,YAAY,CAACI,OAAO,UAAAL,qBAAA,WAApBA,qBAAA,CAAsBM,iBAAiB,CAAE,CACzCnE,MAAM,CAACI,IAAI,CAAC0D,YAAY,CAACI,OAAO,CAACC,iBAAiB,CAAC,CAAChB,OAAO,CAACiB,SAAS,EAAI,CACrEV,QAAQ,CAACE,GAAG,CAACQ,SAAS,CAAC,CAC3B,CAAC,CAAC,CACN,CACJ,CAAC,CAAC,CAEF;AACApE,MAAM,CAACqE,MAAM,CAAC5B,YAAY,CAAC,CAACU,OAAO,CAACmB,OAAO,EAAI,KAAAC,qBAAA,CAC3C,IAAAA,qBAAA,CAAID,OAAO,CAACE,2BAA2B,UAAAD,qBAAA,WAAnCA,qBAAA,CAAqCE,eAAe,CAAE,CACtDzE,MAAM,CAACI,IAAI,CAACkE,OAAO,CAACE,2BAA2B,CAACC,eAAe,CAAC,CAACtB,OAAO,CAACQ,MAAM,EAAI,CAC/EH,KAAK,CAACI,GAAG,CAACD,MAAM,CAAC,CACjB,KAAM,CAAAe,aAAa,CAAGJ,OAAO,CAACE,2BAA2B,CAACC,eAAe,CAACd,MAAM,CAAC,CACjF,GAAIe,aAAa,CAACC,kBAAkB,CAAE,CAClC3E,MAAM,CAACI,IAAI,CAACsE,aAAa,CAACC,kBAAkB,CAAC,CAACxB,OAAO,CAACiB,SAAS,EAAI,CAC/DV,QAAQ,CAACE,GAAG,CAACQ,SAAS,CAAC,CAC3B,CAAC,CAAC,CACN,CACJ,CAAC,CAAC,CACN,CACJ,CAAC,CAAC,CAEF,MAAO,CACHd,cAAc,CAAEhE,KAAK,CAACsF,IAAI,CAACpB,KAAK,CAAC,CAACqB,IAAI,CAAC,CAAC,CACxCtB,iBAAiB,CAAEjE,KAAK,CAACsF,IAAI,CAAClB,QAAQ,CAAC,CAACmB,IAAI,CAAC,CACjD,CAAC,CACL,CAAC,CAAE,CAACjC,gBAAgB,CAAED,aAAa,CAAEF,YAAY,CAAC,CAAC,CAEnD;AACA,KAAM,CAAAqC,YAAY,CAAGnJ,OAAO,CAAC,IAAM,CAC/B,GAAI,CAACY,cAAc,EAAI,CAACC,iBAAiB,CAAE,CACvC,MAAO,CAAEiG,YAAY,CAAEC,iBAAkB,CAAC,CAC9C,CAEA;AACA;AAEA,KAAM,CAAAqC,aAAa,CAAG,CAAC,CAAC,CACxB,KAAM,CAAAC,kBAAkB,CAAG,CAAC,CAAC,CAE7B,GAAIzI,cAAc,EAAI,CAACC,iBAAiB,CAAE,CACtC;AACA,KAAM,CAAAyI,WAAW,CAAGrC,gBAAgB,CAACrG,cAAc,CAAC,CAEpD,GAAI0I,WAAW,CAAE,CACb;AACA;AACA,GAAI,CAAAC,gBAAgB,CAAG,CACnBC,aAAa,CAAE,CAAC,CAChBC,WAAW,CAAE,CAAC,CACd3G,eAAe,CAAE,CAAC,CAClB4G,eAAe,CAAE,CAAC,CAClB1G,gBAAgB,CAAE,CAAC,CACnB2G,sBAAsB,CAAE,CAAC,CACzBvG,OAAO,CAAE,CAAC,CACVwG,MAAM,CAAE,CAAC,CACTC,YAAY,CAAE,CAClB,CAAC,CAEDhD,KAAK,CAACW,OAAO,CAACC,IAAI,EAAI,CAClB,KAAM,CAAAqC,cAAc,CAAGR,WAAW,CAAC7B,IAAI,CAAC,CACxC,GAAIqC,cAAc,CAAE,CAChB;AACAV,aAAa,CAAC3B,IAAI,CAAC,CAAAsC,aAAA,CAAAA,aAAA,IACZD,cAAc,MACjB;AACAE,WAAW,CAAE,CAACF,cAAc,CAAC1G,OAAO,EAAI,CAAC,GAAK0G,cAAc,CAACF,MAAM,EAAI,CAAC,CAAC,EAC5E,CAED;AACAL,gBAAgB,CAACC,aAAa,EAAIM,cAAc,CAACN,aAAa,EAAI,CAAC,CACnED,gBAAgB,CAACE,WAAW,EAAIK,cAAc,CAACL,WAAW,EAAI,CAAC,CAC/DF,gBAAgB,CAACzG,eAAe,EAAIgH,cAAc,CAAChH,eAAe,EAAI,CAAC,CACvEyG,gBAAgB,CAACG,eAAe,EAAII,cAAc,CAACJ,eAAe,EAAI,CAAC,CACvEH,gBAAgB,CAACvG,gBAAgB,EAAI8G,cAAc,CAAC9G,gBAAgB,EAAI,CAAC,CACzEuG,gBAAgB,CAACI,sBAAsB,EAAIG,cAAc,CAACH,sBAAsB,EAAI,CAAC,CACrFJ,gBAAgB,CAACnG,OAAO,EAAI0G,cAAc,CAAC1G,OAAO,EAAI,CAAC,CACvDmG,gBAAgB,CAACK,MAAM,EAAIE,cAAc,CAACF,MAAM,EAAI,CAAC,CACrDL,gBAAgB,CAACM,YAAY,EAAIC,cAAc,CAACD,YAAY,EAAI,CAAC,CAEjE;AACAR,kBAAkB,CAAC5B,IAAI,CAAC,CAAG,CACvB;AACAwC,aAAa,CAAEH,cAAc,CAACG,aAAa,EAAI,CAAC,CAChDC,mBAAmB,CAAEJ,cAAc,CAACI,mBAAmB,EAAI,CAAC,CAC5DC,iBAAiB,CAAEL,cAAc,CAACK,iBAAiB,EAAI,CAAC,CAExD;AACAC,wBAAwB,CAAEb,gBAAgB,CAACC,aAAa,CACxDa,sBAAsB,CAAEd,gBAAgB,CAACE,WAAW,CACpDa,0BAA0B,CAAEf,gBAAgB,CAACzG,eAAe,CAC5DyH,0BAA0B,CAAEhB,gBAAgB,CAACG,eAAe,CAC5Dc,2BAA2B,CAAEjB,gBAAgB,CAACvG,gBAAgB,CAC9DyH,iCAAiC,CAAElB,gBAAgB,CAACI,sBAAsB,CAC1Ee,kBAAkB,CAAEnB,gBAAgB,CAACnG,OAAO,CAC5CuH,iBAAiB,CAAEpB,gBAAgB,CAACK,MAAM,CAC1CgB,uBAAuB,CAAErB,gBAAgB,CAACM,YAAY,CACtDgB,sBAAsB,CAAEtB,gBAAgB,CAACnG,OAAO,CAAGmG,gBAAgB,CAACK,MACxE,CAAC,CACL,CAAC,IAAM,CACH;AACAR,aAAa,CAAC3B,IAAI,CAAC,CAAG,CAClB+B,aAAa,CAAE,CAAC,CAChBS,aAAa,CAAE,CAAC,CAChBR,WAAW,CAAE,CAAC,CACd3G,eAAe,CAAE,CAAC,CAClB4G,eAAe,CAAE,CAAC,CAClB1G,gBAAgB,CAAE,CAAC,CACnBkH,mBAAmB,CAAE,CAAC,CACtBP,sBAAsB,CAAE,CAAC,CACzBvG,OAAO,CAAE,CAAC,CACVwG,MAAM,CAAE,CAAC,CACTC,YAAY,CAAE,CAAC,CACfM,iBAAiB,CAAE,CAAC,CACpBH,WAAW,CAAE,CACjB,CAAC,CAED;AACAX,kBAAkB,CAAC5B,IAAI,CAAC,CAAG,CACvB;AACAwC,aAAa,CAAE,CAAC,CAChBC,mBAAmB,CAAE,CAAC,CACtBC,iBAAiB,CAAE,CAAC,CAEpB;AACAC,wBAAwB,CAAEb,gBAAgB,CAACC,aAAa,CACxDa,sBAAsB,CAAEd,gBAAgB,CAACE,WAAW,CACpDa,0BAA0B,CAAEf,gBAAgB,CAACzG,eAAe,CAC5DyH,0BAA0B,CAAEhB,gBAAgB,CAACG,eAAe,CAC5Dc,2BAA2B,CAAEjB,gBAAgB,CAACvG,gBAAgB,CAC9DyH,iCAAiC,CAAElB,gBAAgB,CAACI,sBAAsB,CAC1Ee,kBAAkB,CAAEnB,gBAAgB,CAACnG,OAAO,CAC5CuH,iBAAiB,CAAEpB,gBAAgB,CAACK,MAAM,CAC1CgB,uBAAuB,CAAErB,gBAAgB,CAACM,YAAY,CACtDgB,sBAAsB,CAAEtB,gBAAgB,CAACnG,OAAO,CAAGmG,gBAAgB,CAACK,MACxE,CAAC,CACL,CACJ,CAAC,CAAC,CACN,CAAC,IAAM,CACH;AACA/C,KAAK,CAACW,OAAO,CAACC,IAAI,EAAI,CAClB2B,aAAa,CAAC3B,IAAI,CAAC,CAAG,CAClB+B,aAAa,CAAE,CAAC,CAChBS,aAAa,CAAE,CAAC,CAChBR,WAAW,CAAE,CAAC,CACd3G,eAAe,CAAE,CAAC,CAClB4G,eAAe,CAAE,CAAC,CAClB1G,gBAAgB,CAAE,CAAC,CACnBkH,mBAAmB,CAAE,CAAC,CACtBP,sBAAsB,CAAE,CAAC,CACzBvG,OAAO,CAAE,CAAC,CACVwG,MAAM,CAAE,CAAC,CACTC,YAAY,CAAE,CAAC,CACfM,iBAAiB,CAAE,CAAC,CACpBH,WAAW,CAAE,CACjB,CAAC,CAEDX,kBAAkB,CAAC5B,IAAI,CAAC,CAAG,CACvBwC,aAAa,CAAE,CAAC,CAChBC,mBAAmB,CAAE,CAAC,CACtBC,iBAAiB,CAAE,CAAC,CACpBC,wBAAwB,CAAE,CAAC,CAC3BC,sBAAsB,CAAE,CAAC,CACzBC,0BAA0B,CAAE,CAAC,CAC7BC,0BAA0B,CAAE,CAAC,CAC7BC,2BAA2B,CAAE,CAAC,CAC9BC,iCAAiC,CAAE,CAAC,CACpCC,kBAAkB,CAAE,CAAC,CACrBC,iBAAiB,CAAE,CAAC,CACpBC,uBAAuB,CAAE,CAAC,CAC1BC,sBAAsB,CAAE,CAC5B,CAAC,CACL,CAAC,CAAC,CACN,CACJ,CAAC,IAAM,IAAIhK,iBAAiB,EAAI,CAACD,cAAc,CAAE,CAC7C;AACA;AACA;AACAiG,KAAK,CAACW,OAAO,CAACC,IAAI,EAAI,CAClB2B,aAAa,CAAC3B,IAAI,CAAC,CAAAsC,aAAA,IAAQjD,YAAY,CAACW,IAAI,CAAC,CAAE,CAC/C4B,kBAAkB,CAAC5B,IAAI,CAAC,CAAAsC,aAAA,IAAQhD,iBAAiB,CAACU,IAAI,CAAC,CAAE,CAC7D,CAAC,CAAC,CACN,CAAC,IAAM,IAAI7G,cAAc,EAAIC,iBAAiB,CAAE,CAC5C;AACA;AACA;AACA,KAAM,CAAAyI,WAAW,CAAGrC,gBAAgB,CAACrG,cAAc,CAAC,CAEpD,GAAI0I,WAAW,CAAE,CACb;AACA,GAAI,CAAAC,gBAAgB,CAAG,CACnBC,aAAa,CAAE,CAAC,CAChBC,WAAW,CAAE,CAAC,CACd3G,eAAe,CAAE,CAAC,CAClB4G,eAAe,CAAE,CAAC,CAClB1G,gBAAgB,CAAE,CAAC,CACnB2G,sBAAsB,CAAE,CAAC,CACzBvG,OAAO,CAAE,CAAC,CACVwG,MAAM,CAAE,CAAC,CACTC,YAAY,CAAE,CAClB,CAAC,CAEDhD,KAAK,CAACW,OAAO,CAACC,IAAI,EAAI,CAClB,KAAM,CAAAqC,cAAc,CAAGR,WAAW,CAAC7B,IAAI,CAAC,CACxC,GAAIqC,cAAc,CAAE,CAChB;AACA;AACAV,aAAa,CAAC3B,IAAI,CAAC,CAAAsC,aAAA,CAAAA,aAAA,IACZD,cAAc,MACjB;AACAE,WAAW,CAAE,CAACF,cAAc,CAAC1G,OAAO,EAAI,CAAC,GAAK0G,cAAc,CAACF,MAAM,EAAI,CAAC,CAAC,EAC5E,CAED;AACAL,gBAAgB,CAACC,aAAa,EAAIM,cAAc,CAACN,aAAa,EAAI,CAAC,CACnED,gBAAgB,CAACE,WAAW,EAAIK,cAAc,CAACL,WAAW,EAAI,CAAC,CAC/DF,gBAAgB,CAACzG,eAAe,EAAIgH,cAAc,CAAChH,eAAe,EAAI,CAAC,CACvEyG,gBAAgB,CAACG,eAAe,EAAII,cAAc,CAACJ,eAAe,EAAI,CAAC,CACvEH,gBAAgB,CAACvG,gBAAgB,EAAI8G,cAAc,CAAC9G,gBAAgB,EAAI,CAAC,CACzEuG,gBAAgB,CAACI,sBAAsB,EAAIG,cAAc,CAACH,sBAAsB,EAAI,CAAC,CACrFJ,gBAAgB,CAACnG,OAAO,EAAI0G,cAAc,CAAC1G,OAAO,EAAI,CAAC,CACvDmG,gBAAgB,CAACK,MAAM,EAAIE,cAAc,CAACF,MAAM,EAAI,CAAC,CACrDL,gBAAgB,CAACM,YAAY,EAAIC,cAAc,CAACD,YAAY,EAAI,CAAC,CAEjE;AACAR,kBAAkB,CAAC5B,IAAI,CAAC,CAAG,CACvB;AACAwC,aAAa,CAAEH,cAAc,CAACG,aAAa,EAAI,CAAC,CAChDC,mBAAmB,CAAEJ,cAAc,CAACI,mBAAmB,EAAI,CAAC,CAC5DC,iBAAiB,CAAEL,cAAc,CAACK,iBAAiB,EAAI,CAAC,CAExD;AACAC,wBAAwB,CAAEb,gBAAgB,CAACC,aAAa,CACxDa,sBAAsB,CAAEd,gBAAgB,CAACE,WAAW,CACpDa,0BAA0B,CAAEf,gBAAgB,CAACzG,eAAe,CAC5DyH,0BAA0B,CAAEhB,gBAAgB,CAACG,eAAe,CAC5Dc,2BAA2B,CAAEjB,gBAAgB,CAACvG,gBAAgB,CAC9DyH,iCAAiC,CAAElB,gBAAgB,CAACI,sBAAsB,CAC1Ee,kBAAkB,CAAEnB,gBAAgB,CAACnG,OAAO,CAC5CuH,iBAAiB,CAAEpB,gBAAgB,CAACK,MAAM,CAC1CgB,uBAAuB,CAAErB,gBAAgB,CAACM,YAAY,CACtDgB,sBAAsB,CAAEtB,gBAAgB,CAACnG,OAAO,CAAGmG,gBAAgB,CAACK,MACxE,CAAC,CACL,CAAC,IAAM,CACHR,aAAa,CAAC3B,IAAI,CAAC,CAAG,CAClB+B,aAAa,CAAE,CAAC,CAChBS,aAAa,CAAE,CAAC,CAChBR,WAAW,CAAE,CAAC,CACd3G,eAAe,CAAE,CAAC,CAClB4G,eAAe,CAAE,CAAC,CAClB1G,gBAAgB,CAAE,CAAC,CACnBkH,mBAAmB,CAAE,CAAC,CACtBP,sBAAsB,CAAE,CAAC,CACzBvG,OAAO,CAAE,CAAC,CACVwG,MAAM,CAAE,CAAC,CACTC,YAAY,CAAE,CAAC,CACfM,iBAAiB,CAAE,CAAC,CACpBH,WAAW,CAAE,CACjB,CAAC,CAED;AACAX,kBAAkB,CAAC5B,IAAI,CAAC,CAAG,CACvB;AACAwC,aAAa,CAAE,CAAC,CAChBC,mBAAmB,CAAE,CAAC,CACtBC,iBAAiB,CAAE,CAAC,CAEpB;AACAC,wBAAwB,CAAEb,gBAAgB,CAACC,aAAa,CACxDa,sBAAsB,CAAEd,gBAAgB,CAACE,WAAW,CACpDa,0BAA0B,CAAEf,gBAAgB,CAACzG,eAAe,CAC5DyH,0BAA0B,CAAEhB,gBAAgB,CAACG,eAAe,CAC5Dc,2BAA2B,CAAEjB,gBAAgB,CAACvG,gBAAgB,CAC9DyH,iCAAiC,CAAElB,gBAAgB,CAACI,sBAAsB,CAC1Ee,kBAAkB,CAAEnB,gBAAgB,CAACnG,OAAO,CAC5CuH,iBAAiB,CAAEpB,gBAAgB,CAACK,MAAM,CAC1CgB,uBAAuB,CAAErB,gBAAgB,CAACM,YAAY,CACtDgB,sBAAsB,CAAEtB,gBAAgB,CAACnG,OAAO,CAAGmG,gBAAgB,CAACK,MACxE,CAAC,CACL,CACJ,CAAC,CAAC,CACN,CAAC,IAAM,CACH/C,KAAK,CAACW,OAAO,CAACC,IAAI,EAAI,CAClB2B,aAAa,CAAC3B,IAAI,CAAC,CAAG,CAClB+B,aAAa,CAAE,CAAC,CAChBS,aAAa,CAAE,CAAC,CAChBR,WAAW,CAAE,CAAC,CACd3G,eAAe,CAAE,CAAC,CAClB4G,eAAe,CAAE,CAAC,CAClB1G,gBAAgB,CAAE,CAAC,CACnBkH,mBAAmB,CAAE,CAAC,CACtBP,sBAAsB,CAAE,CAAC,CACzBvG,OAAO,CAAE,CAAC,CACVwG,MAAM,CAAE,CAAC,CACTC,YAAY,CAAE,CAAC,CACfM,iBAAiB,CAAE,CAAC,CACpBH,WAAW,CAAE,CACjB,CAAC,CAEDX,kBAAkB,CAAC5B,IAAI,CAAC,CAAG,CACvBwC,aAAa,CAAE,CAAC,CAChBC,mBAAmB,CAAE,CAAC,CACtBC,iBAAiB,CAAE,CAAC,CACpBC,wBAAwB,CAAE,CAAC,CAC3BC,sBAAsB,CAAE,CAAC,CACzBC,0BAA0B,CAAE,CAAC,CAC7BC,0BAA0B,CAAE,CAAC,CAC7BC,2BAA2B,CAAE,CAAC,CAC9BC,iCAAiC,CAAE,CAAC,CACpCC,kBAAkB,CAAE,CAAC,CACrBC,iBAAiB,CAAE,CAAC,CACpBC,uBAAuB,CAAE,CAAC,CAC1BC,sBAAsB,CAAE,CAC5B,CAAC,CACL,CAAC,CAAC,CACN,CACJ,CAEA,MAAO,CAAE/D,YAAY,CAAEsC,aAAa,CAAErC,iBAAiB,CAAEsC,kBAAmB,CAAC,CACjF,CAAC,CAAE,CAACzI,cAAc,CAAEC,iBAAiB,CAAEiG,YAAY,CAAEC,iBAAiB,CAAEE,gBAAgB,CAAEJ,KAAK,CAAC,CAAC,CAEjG;AACA,GAAI,CAACK,YAAY,CAAE,CACf,mBACI9G,IAAA,QAAK6B,SAAS,CAAC,kBAAkB,CAAAS,QAAA,cAC7BtC,IAAA,MAAG6B,SAAS,CAAC,kCAAkC,CAAAS,QAAA,CAAC,6DAEhD,CAAG,CAAC,CACH,CAAC,CAEd,CAEA,KAAM,CAAAoI,cAAc,CAAI3J,KAAK,EAAK,CAC9B,GAAIA,KAAK,GAAK,IAAI,EAAIA,KAAK,GAAK4C,SAAS,CAAE,MAAO,IAAI,CACtD,KAAM,CAAAgH,OAAO,CAAGC,IAAI,CAACC,KAAK,CAACC,MAAM,CAAC/J,KAAK,CAAC,CAAC,CACzC,UAAAqC,MAAA,CAAWuH,OAAO,CAACI,cAAc,CAAC,CAAC,EACvC,CAAC,CAED,KAAM,CAAAC,YAAY,CAAIjK,KAAK,EAAK,CAC5B,GAAIA,KAAK,GAAK,IAAI,EAAIA,KAAK,GAAK4C,SAAS,CAAE,MAAO,GAAG,CACrD,MAAO,CAAAmH,MAAM,CAAC/J,KAAK,CAAC,CAACgK,cAAc,CAAC,CAAC,CACzC,CAAC,CAED;AACA,KAAM,CAAAE,8BAA8B,CAAGA,CAAC5D,IAAI,CAAEtG,KAAK,GAAK,CACpD;AACA,GAAI,CAACP,cAAc,CAAE,CACjB,MAAO,KAAI,CACf,CAEA;AACA,KAAM,CAAAM,SAAS,CAAG,MAAO,CAAAC,KAAK,GAAK,QAAQ,CAAGA,KAAK,CAAG,CAAC,CAEvD,GAAID,SAAS,GAAK,CAAC,CAAE,CACjB,MAAO,KAAI,CAAE;AACjB,CAEA4E,OAAO,CAACC,GAAG,uDAAwD,CAC/D0B,IAAI,CACJ6D,aAAa,CAAEnK,KAAK,CACpBD,SAAS,CACTqK,SAAS,CAAE,MAAO,CAAApK,KAAK,CACvBP,cAAc,CACdC,iBACJ,CAAC,CAAC,CAEF;AACA;AAEA;AACA,KAAM,CAAAyI,WAAW,CAAGrC,gBAAgB,CAACrG,cAAc,CAAC,CACpD,GAAI,CAAC0I,WAAW,EAAI,CAACA,WAAW,CAAC7B,IAAI,CAAC,CAAE,CACpC3B,OAAO,CAAC0F,IAAI,0CAAAhI,MAAA,CAA0C5C,cAAc,cAAA4C,MAAA,CAAYiE,IAAI,CAAE,CAAC,CACvF,MAAO,KAAI,CACf,CAEA,KAAM,CAAAgE,UAAU,CAAGnC,WAAW,CAAC7B,IAAI,CAAC,CACpC,KAAM,CAAAjC,WAAW,CAAGiG,UAAU,CAACC,YAAY,CAE3C5F,OAAO,CAACC,GAAG,qCAAAvC,MAAA,CAAqC5C,cAAc,SAAA4C,MAAA,CAAOiE,IAAI,MAAK,CAC1EkE,cAAc,CAAE,CAAC,CAACnG,WAAW,CAC7BA,WAAW,CAAEA,WAAW,CACxBiG,UAAU,CAAEA,UAChB,CAAC,CAAC,CAEF,GAAI,CAACjG,WAAW,CAAE,CACdM,OAAO,CAAC0F,IAAI,0CAAAhI,MAAA,CAA0C5C,cAAc,cAAA4C,MAAA,CAAYiE,IAAI,CAAE,CAAC,CACvF,MAAO,KAAI,CACf,CAEA;AACA,MAAO,CACHtG,KAAK,CAAED,SAAS,CAChBG,SAAS,CAAEmE,WAAW,CAACnE,SAAS,CAChCuK,MAAM,KAAApI,MAAA,CAAMtC,SAAS,CAACyB,OAAO,CAAC,CAAC,CAAC,CACpC,CAAC,CACL,CAAC,CAED;AACA,KAAM,CAAAkJ,OAAO,CAAG,CACZ;AACA,CACI/H,GAAG,CAAE,qBAAqB,CAC1BgI,KAAK,CAAE,eAAe,CACtBC,QAAQ,CAAE,gBAAgB,CAC1BC,aAAa,CAAE,uBAAuB,CACtCC,QAAQ,CAAGxE,IAAI,OAAAyE,qBAAA,OAAK,EAAAA,qBAAA,CAAA/C,YAAY,CAACrC,YAAY,CAACW,IAAI,CAAC,UAAAyE,qBAAA,iBAA/BA,qBAAA,CAAiC1C,aAAa,GAAI,CAAC,GACvE2C,kBAAkB,CAAG1E,IAAI,OAAA2E,qBAAA,OAAK,EAAAA,qBAAA,CAAAjD,YAAY,CAACpC,iBAAiB,CAACU,IAAI,CAAC,UAAA2E,qBAAA,iBAApCA,qBAAA,CAAsChC,wBAAwB,GAAI,CAAC,GACjGiC,MAAM,CAAEjB,YACZ,CAAC,CACD,CACItH,GAAG,CAAE,qBAAqB,CAC1BgI,KAAK,CAAE,eAAe,CACtBC,QAAQ,CAAE,gBAAgB,CAC1BE,QAAQ,CAAGxE,IAAI,OAAA6E,sBAAA,OAAK,EAAAA,sBAAA,CAAAnD,YAAY,CAACrC,YAAY,CAACW,IAAI,CAAC,UAAA6E,sBAAA,iBAA/BA,sBAAA,CAAiCrC,aAAa,GAAI,CAAC,GACvE;AACAkC,kBAAkB,CAAG1E,IAAI,OAAA8E,sBAAA,OAAK,EAAAA,sBAAA,CAAApD,YAAY,CAACrC,YAAY,CAACW,IAAI,CAAC,UAAA8E,sBAAA,iBAA/BA,sBAAA,CAAiCtC,aAAa,GAAI,CAAC,GACjFoC,MAAM,CAAEjB,YACZ,CAAC,CACD,CACItH,GAAG,CAAE,mBAAmB,CACxBgI,KAAK,CAAE,aAAa,CACpBC,QAAQ,CAAE,gBAAgB,CAC1BE,QAAQ,CAAGxE,IAAI,OAAA+E,sBAAA,OAAK,EAAAA,sBAAA,CAAArD,YAAY,CAACrC,YAAY,CAACW,IAAI,CAAC,UAAA+E,sBAAA,iBAA/BA,sBAAA,CAAiC/C,WAAW,GAAI,CAAC,GACrE0C,kBAAkB,CAAG1E,IAAI,OAAAgF,sBAAA,OAAK,EAAAA,sBAAA,CAAAtD,YAAY,CAACpC,iBAAiB,CAACU,IAAI,CAAC,UAAAgF,sBAAA,iBAApCA,sBAAA,CAAsCpC,sBAAsB,GAAI,CAAC,GAC/FgC,MAAM,CAAEjB,YACZ,CAAC,CACD,CACItH,GAAG,CAAE,uBAAuB,CAC5BgI,KAAK,CAAE,iBAAiB,CACxBC,QAAQ,CAAE,gBAAgB,CAC1BE,QAAQ,CAAGxE,IAAI,OAAAiF,sBAAA,OAAK,EAAAA,sBAAA,CAAAvD,YAAY,CAACrC,YAAY,CAACW,IAAI,CAAC,UAAAiF,sBAAA,iBAA/BA,sBAAA,CAAiChD,eAAe,GAAI,CAAC,GACzEyC,kBAAkB,CAAG1E,IAAI,OAAAkF,sBAAA,OAAK,EAAAA,sBAAA,CAAAxD,YAAY,CAACpC,iBAAiB,CAACU,IAAI,CAAC,UAAAkF,sBAAA,iBAApCA,sBAAA,CAAsCpC,0BAA0B,GAAI,CAAC,GACnG8B,MAAM,CAAEjB,YACZ,CAAC,CACD,CACItH,GAAG,CAAE,uBAAuB,CAC5BgI,KAAK,CAAE,iBAAiB,CACxBC,QAAQ,CAAE,gBAAgB,CAC1BE,QAAQ,CAAGxE,IAAI,OAAAmF,sBAAA,OAAK,EAAAA,sBAAA,CAAAzD,YAAY,CAACrC,YAAY,CAACW,IAAI,CAAC,UAAAmF,sBAAA,iBAA/BA,sBAAA,CAAiC9J,eAAe,GAAI,CAAC,GACzEqJ,kBAAkB,CAAG1E,IAAI,OAAAoF,sBAAA,OAAK,EAAAA,sBAAA,CAAA1D,YAAY,CAACpC,iBAAiB,CAACU,IAAI,CAAC,UAAAoF,sBAAA,iBAApCA,sBAAA,CAAsCvC,0BAA0B,GAAI,CAAC,GACnG+B,MAAM,CAAEjB,YACZ,CAAC,CACD,CACItH,GAAG,CAAE,wBAAwB,CAC7BgI,KAAK,CAAE,kBAAkB,CACzBC,QAAQ,CAAE,gBAAgB,CAC1BE,QAAQ,CAAGxE,IAAI,OAAAqF,sBAAA,OAAK,EAAAA,sBAAA,CAAA3D,YAAY,CAACrC,YAAY,CAACW,IAAI,CAAC,UAAAqF,sBAAA,iBAA/BA,sBAAA,CAAiC9J,gBAAgB,GAAI,CAAC,GAC1EmJ,kBAAkB,CAAG1E,IAAI,OAAAsF,sBAAA,OAAK,EAAAA,sBAAA,CAAA5D,YAAY,CAACpC,iBAAiB,CAACU,IAAI,CAAC,UAAAsF,sBAAA,iBAApCA,sBAAA,CAAsCvC,2BAA2B,GAAI,CAAC,GACpG6B,MAAM,CAAEjB,YACZ,CAAC,CACD,CACItH,GAAG,CAAE,2BAA2B,CAChCgI,KAAK,CAAE,qBAAqB,CAC5BC,QAAQ,CAAE,gBAAgB,CAC1BE,QAAQ,CAAGxE,IAAI,OAAAuF,sBAAA,OAAK,EAAAA,sBAAA,CAAA7D,YAAY,CAACrC,YAAY,CAACW,IAAI,CAAC,UAAAuF,sBAAA,iBAA/BA,sBAAA,CAAiC9C,mBAAmB,GAAI,CAAC,GAC7E;AACAiC,kBAAkB,CAAG1E,IAAI,OAAAwF,sBAAA,OAAK,EAAAA,sBAAA,CAAA9D,YAAY,CAACrC,YAAY,CAACW,IAAI,CAAC,UAAAwF,sBAAA,iBAA/BA,sBAAA,CAAiC/C,mBAAmB,GAAI,CAAC,GACvFmC,MAAM,CAAEjB,YACZ,CAAC,CACD,CACItH,GAAG,CAAE,8BAA8B,CACnCgI,KAAK,CAAE,wBAAwB,CAC/BC,QAAQ,CAAE,gBAAgB,CAC1BE,QAAQ,CAAGxE,IAAI,OAAAyF,sBAAA,OAAK,EAAAA,sBAAA,CAAA/D,YAAY,CAACrC,YAAY,CAACW,IAAI,CAAC,UAAAyF,sBAAA,iBAA/BA,sBAAA,CAAiCvD,sBAAsB,GAAI,CAAC,GAChFwC,kBAAkB,CAAG1E,IAAI,OAAA0F,sBAAA,OAAK,EAAAA,sBAAA,CAAAhE,YAAY,CAACpC,iBAAiB,CAACU,IAAI,CAAC,UAAA0F,sBAAA,iBAApCA,sBAAA,CAAsC1C,iCAAiC,GAAI,CAAC,GAC1G4B,MAAM,CAAEjB,YACZ,CAAC,CACD,CACItH,GAAG,CAAE,aAAa,CAClBgI,KAAK,CAAE,aAAa,CACpBC,QAAQ,CAAE,gBAAgB,CAC1BE,QAAQ,CAAGxE,IAAI,OAAA2F,sBAAA,OAAK,EAAAA,sBAAA,CAAAjE,YAAY,CAACrC,YAAY,CAACW,IAAI,CAAC,UAAA2F,sBAAA,iBAA/BA,sBAAA,CAAiCC,WAAW,GAAI,CAAC,GACrElB,kBAAkB,CAAG1E,IAAI,OAAA6F,uBAAA,OAAK,EAAAA,uBAAA,CAAAnE,YAAY,CAACrC,YAAY,CAACW,IAAI,CAAC,UAAA6F,uBAAA,iBAA/BA,uBAAA,CAAiCC,gBAAgB,GAAI,CAAC,GACpFlB,MAAM,CAAEjB,YACZ,CAAC,CACD,CACItH,GAAG,CAAE,oBAAoB,CACzBgI,KAAK,CAAE,SAAS,CAChBC,QAAQ,CAAE,gBAAgB,CAC1BE,QAAQ,CAAGxE,IAAI,OAAA+F,uBAAA,OAAK,EAAAA,uBAAA,CAAArE,YAAY,CAACrC,YAAY,CAACW,IAAI,CAAC,UAAA+F,uBAAA,iBAA/BA,uBAAA,CAAiC3D,YAAY,GAAI,CAAC,GACtEsC,kBAAkB,CAAG1E,IAAI,OAAAgG,sBAAA,OAAK,EAAAA,sBAAA,CAAAtE,YAAY,CAACpC,iBAAiB,CAACU,IAAI,CAAC,UAAAgG,sBAAA,iBAApCA,sBAAA,CAAsC7C,uBAAuB,GAAI,CAAC,GAChGyB,MAAM,CAAEjB,YACZ,CAAC,CACD;AACA,CACItH,GAAG,CAAE,eAAe,CACpBgI,KAAK,CAAE,SAAS,CAChBC,QAAQ,CAAE,SAAS,CACnBC,aAAa,CAAE,gBAAgB,CAC/BC,QAAQ,CAAGxE,IAAI,OAAAiG,uBAAA,OAAK,EAAAA,uBAAA,CAAAvE,YAAY,CAACrC,YAAY,CAACW,IAAI,CAAC,UAAAiG,uBAAA,iBAA/BA,uBAAA,CAAiCtK,OAAO,GAAI,CAAC,GACjE+I,kBAAkB,CAAG1E,IAAI,OAAAkG,sBAAA,OAAK,EAAAA,sBAAA,CAAAxE,YAAY,CAACpC,iBAAiB,CAACU,IAAI,CAAC,UAAAkG,sBAAA,iBAApCA,sBAAA,CAAsCjD,kBAAkB,GAAI,CAAC,GAC3F2B,MAAM,CAAEvB,cACZ,CAAC,CACD,CACIhH,GAAG,CAAE,cAAc,CACnBgI,KAAK,CAAE,SAAS,CAChBC,QAAQ,CAAE,SAAS,CACnBE,QAAQ,CAAGxE,IAAI,OAAAmG,uBAAA,OAAK,EAAAA,uBAAA,CAAAzE,YAAY,CAACrC,YAAY,CAACW,IAAI,CAAC,UAAAmG,uBAAA,iBAA/BA,uBAAA,CAAiChE,MAAM,GAAI,CAAC,GAChEuC,kBAAkB,CAAG1E,IAAI,OAAAoG,sBAAA,OAAK,EAAAA,sBAAA,CAAA1E,YAAY,CAACpC,iBAAiB,CAACU,IAAI,CAAC,UAAAoG,sBAAA,iBAApCA,sBAAA,CAAsClD,iBAAiB,GAAI,CAAC,GAC1F0B,MAAM,CAAEvB,cACZ,CAAC,CACD,CACIhH,GAAG,CAAE,mBAAmB,CACxBgI,KAAK,CAAE,aAAa,CACpBC,QAAQ,CAAE,SAAS,CACnBE,QAAQ,CAAGxE,IAAI,OAAAqG,uBAAA,OAAK,EAAAA,uBAAA,CAAA3E,YAAY,CAACrC,YAAY,CAACW,IAAI,CAAC,UAAAqG,uBAAA,iBAA/BA,uBAAA,CAAiC9D,WAAW,GAAI,CAAC,GACrEmC,kBAAkB,CAAG1E,IAAI,OAAAsG,sBAAA,OAAK,EAAAA,sBAAA,CAAA5E,YAAY,CAACpC,iBAAiB,CAACU,IAAI,CAAC,UAAAsG,sBAAA,iBAApCA,sBAAA,CAAsClD,sBAAsB,GAAI,CAAC,GAC/FwB,MAAM,CAAEvB,cACZ,CAAC,CACD,CACIhH,GAAG,CAAE,yBAAyB,CAC9BgI,KAAK,CAAE,mBAAmB,CAC1BC,QAAQ,CAAE,SAAS,CACnBiC,kBAAkB,CAAE,IAAI,CACxB/B,QAAQ,CAAGxE,IAAI,OAAAwG,uBAAA,OAAK,EAAAA,uBAAA,CAAA9E,YAAY,CAACrC,YAAY,CAACW,IAAI,CAAC,UAAAwG,uBAAA,iBAA/BA,uBAAA,CAAiC9D,iBAAiB,GAAI,CAAC,GAC3E;AACAgC,kBAAkB,CAAG1E,IAAI,OAAAyG,uBAAA,OAAK,EAAAA,uBAAA,CAAA/E,YAAY,CAACrC,YAAY,CAACW,IAAI,CAAC,UAAAyG,uBAAA,iBAA/BA,uBAAA,CAAiC/D,iBAAiB,GAAI,CAAC,GACrFkC,MAAM,CAAEvB,cAAc,CACtBqD,cAAc,CAAG1G,IAAI,EAAK,KAAA2G,uBAAA,CAAAC,uBAAA,CACtB,KAAM,CAAAlN,KAAK,CAAGmE,cAAc,CACrB,EAAA8I,uBAAA,CAAAjF,YAAY,CAACrC,YAAY,CAACW,IAAI,CAAC,UAAA2G,uBAAA,iBAA/BA,uBAAA,CAAiCjE,iBAAiB,GAAI,CAAI;AAAA,CAC1D,EAAAkE,uBAAA,CAAAlF,YAAY,CAACrC,YAAY,CAACW,IAAI,CAAC,UAAA4G,uBAAA,iBAA/BA,uBAAA,CAAiClE,iBAAiB,GAAI,CAAE,CAC/D,MAAO,CAAAkB,8BAA8B,CAAC5D,IAAI,CAAEtG,KAAK,CAAC,CACtD,CACJ,CAAC,CACJ,CAED;AACA,KAAM,CAAAmN,cAAc,CAAGzC,OAAO,CAAC0C,MAAM,CAAC,CAACC,GAAG,CAAE9G,MAAM,GAAK,CACnD,GAAI,CAAC8G,GAAG,CAAC9G,MAAM,CAACqE,QAAQ,CAAC,CAAE,CACvByC,GAAG,CAAC9G,MAAM,CAACqE,QAAQ,CAAC,CAAG,CACnBD,KAAK,CAAEpE,MAAM,CAACsE,aAAa,EAAItE,MAAM,CAACqE,QAAQ,CAC9CF,OAAO,CAAE,EACb,CAAC,CACL,CACA2C,GAAG,CAAC9G,MAAM,CAACqE,QAAQ,CAAC,CAACF,OAAO,CAAC4C,IAAI,CAAC/G,MAAM,CAAC,CACzC,MAAO,CAAA8G,GAAG,CACd,CAAC,CAAE,CAAC,CAAC,CAAC,CAEN,mBACItO,KAAA,CAAAI,SAAA,EAAAoC,QAAA,eACIxC,KAAA,QAAK+B,SAAS,CAAC,yDAAyD,CAAAS,QAAA,eACpExC,KAAA,QAAK+B,SAAS,CAAC,wCAAwC,CAAAS,QAAA,eACnDtC,IAAA,OAAI6B,SAAS,CAAC,kDAAkD,CAAAS,QAAA,CAAC,gCAA8B,CAAI,CAAC,cACpGtC,IAAA,QAAK6B,SAAS,CAAC,YAAY,CAAAS,QAAA,cACvBtC,IAAA,WACIwC,OAAO,CAAEA,CAAA,GAAM2C,iBAAiB,CAAC,CAACD,cAAc,CAAE,CAClDrD,SAAS,mCAAAuB,MAAA,CACL8B,cAAc,CACR,wBAAwB,CACxB,4DAA4D,CACnE,CAAA5C,QAAA,CAEF4C,cAAc,CAAG,YAAY,CAAG,iBAAiB,CAC9C,CAAC,CACR,CAAC,EACL,CAAC,cAGNlF,IAAA,QAAK6B,SAAS,CAAC,iBAAiB,CAAAS,QAAA,cAC5BxC,KAAA,UAAO+B,SAAS,CAAC,gDAAgD,CAAAS,QAAA,eAC7DtC,IAAA,UAAO6B,SAAS,CAAC,6BAA6B,CAAAS,QAAA,cAC1CxC,KAAA,OAAAwC,QAAA,eACItC,IAAA,OAAI6B,SAAS,CAAC,wIAAwI,CAAAS,QAAA,CAAC,QAEvJ,CAAI,CAAC,CACJmE,KAAK,CAAChD,GAAG,CAAC4D,IAAI,eACXrH,IAAA,OAAe6B,SAAS,CAAC,4GAA4G,CAAAS,QAAA,CAChI+E,IAAI,EADAA,IAEL,CACP,CAAC,EACF,CAAC,CACF,CAAC,cACRrH,IAAA,UAAO6B,SAAS,CAAC,2BAA2B,CAAAS,QAAA,CACvC2B,MAAM,CAACC,OAAO,CAACgK,cAAc,CAAC,CAACzK,GAAG,CAAC6K,KAAA,MAAC,CAACC,WAAW,CAAE5C,QAAQ,CAAC,CAAA2C,KAAA,oBACxDxO,KAAA,CAACJ,KAAK,CAACO,QAAQ,EAAAqC,QAAA,eAEXtC,IAAA,OAAI6B,SAAS,CAAC,8BAA8B,CAAAS,QAAA,cACxCtC,IAAA,OAAIwO,OAAO,CAAE/H,KAAK,CAACrC,MAAM,CAAG,CAAE,CAACvC,SAAS,CAAC,+EAA+E,CAAAS,QAAA,CACnHqJ,QAAQ,CAACD,KAAK,CACf,CAAC,CACL,CAAC,CAEJC,QAAQ,CAACF,OAAO,CAAChI,GAAG,CAAE6D,MAAM,eACzBxH,KAAA,OAAqB+B,SAAS,CAAC,yCAAyC,CAAAS,QAAA,eACpEtC,IAAA,OAAI6B,SAAS,CAAC,0HAA0H,CAAAS,QAAA,CACnIgF,MAAM,CAACoE,KAAK,CACb,CAAC,CACJjF,KAAK,CAAChD,GAAG,CAAC4D,IAAI,EAAI,CACf,KAAM,CAAAtG,KAAK,CAAGmE,cAAc,CACtBoC,MAAM,CAACyE,kBAAkB,CAAC1E,IAAI,CAAC,CAC/BC,MAAM,CAACuE,QAAQ,CAACxE,IAAI,CAAC,CAC3B,mBACIrH,IAAA,OAEI6B,SAAS,gFAAAuB,MAAA,CACLkE,MAAM,CAACsG,kBAAkB,EAAIpN,cAAc,CAAG,qEAAqE,CAAG,EAAE,CACzH,CACH4B,YAAY,CAAEkF,MAAM,CAACsG,kBAAkB,EAAIpN,cAAc,CAAIiO,CAAC,EAAK,CAC/D;AACA,GAAI,CAACjO,cAAc,CAAE,OAErB;AACA,GAAIgF,iBAAiB,CAAC/D,OAAO,CAAE,CAC3BC,YAAY,CAAC8D,iBAAiB,CAAC/D,OAAO,CAAC,CACvC+D,iBAAiB,CAAC/D,OAAO,CAAG,IAAI,CACpC,CAEA;AACA,KAAM,CAAAiN,UAAU,CAAG9M,UAAU,CAAC,IAAM,CAChC,KAAM,CAAA+M,IAAI,CAAGF,CAAC,CAACG,MAAM,CAACC,qBAAqB,CAAC,CAAC,CAC7C,KAAM,CAAAzJ,WAAW,CAAG6F,8BAA8B,CAAC5D,IAAI,CAAEtG,KAAK,CAAC,CAE/D,GAAIqE,WAAW,CAAE,CACbC,cAAc,CAACD,WAAW,CAAC,CAE3B;AACA,KAAM,CAAA0J,YAAY,CAAG,GAAG,CAAE;AAC1B,KAAM,CAAAC,aAAa,CAAG,GAAG,CAAE;AAC3B,KAAM,CAAAC,YAAY,CAAGC,MAAM,CAACC,UAAU,CAAGP,IAAI,CAACQ,KAAK,CACnD,KAAM,CAAAC,WAAW,CAAGT,IAAI,CAAC5M,IAAI,CAE7B,GAAI,CAAAsN,SAAS,CAAEC,SAAS,CAExB;AACA,GAAIN,YAAY,EAAIF,YAAY,CAAG,EAAE,CAAE,CACnC;AACAO,SAAS,CAAGV,IAAI,CAACQ,KAAK,CAAG,EAAE,CAC/B,CAAC,IAAM,IAAIC,WAAW,EAAIN,YAAY,CAAG,EAAE,CAAE,CACzC;AACAO,SAAS,CAAGV,IAAI,CAAC5M,IAAI,CAAG+M,YAAY,CAAG,EAAE,CAC7C,CAAC,IAAM,CACH;AACAO,SAAS,CAAGzE,IAAI,CAAC2E,GAAG,CAAC,EAAE,CAAE,CAACN,MAAM,CAACC,UAAU,CAAGJ,YAAY,EAAI,CAAC,CAAC,CACpE,CAEA;AACA,KAAM,CAAAU,WAAW,CAAGb,IAAI,CAAC1M,GAAG,CAAI0M,IAAI,CAACc,MAAM,CAAG,CAAE,CAChDH,SAAS,CAAG1E,IAAI,CAAC2E,GAAG,CAAC,EAAE,CAAEC,WAAW,CAAGT,aAAa,CAAC,CAAE;AAEvD;AACAO,SAAS,CAAG1E,IAAI,CAAC8E,GAAG,CAACJ,SAAS,CAAEL,MAAM,CAACU,WAAW,CAAGZ,aAAa,CAAG,EAAE,CAAC,CAExExJ,kBAAkB,CAAC,CACfvD,CAAC,CAAEqN,SAAS,CACZnN,CAAC,CAAEoN,SACP,CAAC,CAAC,CACN,CACJ,CAAC,CAAE,GAAG,CAAC,CAAE;AAET9J,iBAAiB,CAAC/D,OAAO,CAAGiN,UAAU,CAC1C,CAAC,CAAG/K,SAAU,CACdtB,YAAY,CAAEiF,MAAM,CAACsG,kBAAkB,EAAIpN,cAAc,CAAG,IAAM,CAC9D;AACA,GAAI,CAACA,cAAc,CAAE,OAErB;AACA,GAAIgF,iBAAiB,CAAC/D,OAAO,CAAE,CAC3BC,YAAY,CAAC8D,iBAAiB,CAAC/D,OAAO,CAAC,CACvC+D,iBAAiB,CAAC/D,OAAO,CAAG,IAAI,CACpC,CAEA;AACA,KAAM,CAAAmO,WAAW,CAAGhO,UAAU,CAAC,IAAM,CACjCyD,cAAc,CAAC,IAAI,CAAC,CACxB,CAAC,CAAE,GAAG,CAAC,CAAE;AAETG,iBAAiB,CAAC/D,OAAO,CAAGmO,WAAW,CAC3C,CAAC,CAAGjM,SAAU,CAAArB,QAAA,CAEbgF,MAAM,CAAC2E,MAAM,CAAClL,KAAK,CAAC,EA5EhBsG,IA6EL,CAAC,CAEb,CAAC,CAAC,GAzFGC,MAAM,CAAC5D,GA0FZ,CACP,CAAC,GApGe6K,WAqGL,CAAC,EACpB,CAAC,CACC,CAAC,EACL,CAAC,CACP,CAAC,CAEL9H,KAAK,CAACrC,MAAM,GAAK,CAAC,eACfpE,IAAA,QAAK6B,SAAS,CAAC,kBAAkB,CAAAS,QAAA,cAC7BtC,IAAA,MAAG6B,SAAS,CAAC,kCAAkC,CAAAS,QAAA,CAAC,6DAEhD,CAAG,CAAC,CACH,CACR,EACA,CAAC,cAGNtC,IAAA,CAACG,uBAAuB,EACpBE,IAAI,CAAE+E,WAAY,CAClB9E,QAAQ,CAAEgF,eAAgB,CAC1B/E,OAAO,CAAEA,CAAA,GAAM8E,cAAc,CAAC,IAAI,CAAE,CACpC7E,cAAc,CAAEA,cAAe,CAC/BC,iBAAiB,CAAEA,iBAAkB,CACxC,CAAC,EACJ,CAAC,CAEX,CAAC,CAED,cAAe,CAAA6D,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}