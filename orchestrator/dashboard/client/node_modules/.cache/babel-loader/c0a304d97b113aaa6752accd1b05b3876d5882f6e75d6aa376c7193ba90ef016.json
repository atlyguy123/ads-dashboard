{"ast":null,"code":"import React,{useState,useEffect}from'react';import LiveApiTester from'./LiveApiTester';import HistoricalDataManager from'./HistoricalDataManager';import ActionMapper from'./ActionMapper';import{DEFAULT_FIELDS}from'./utils/metaConstants';import{compactObject}from'./utils/metaApiUtils';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const MetaDebugger=()=>{// Mode state\nconst[activeTab,setActiveTab]=useState('live');// 'live', 'historical', 'mapping'\n// Form input state\nconst[startDateInput,setStartDateInput]=useState('');const[endDateInput,setEndDateInput]=useState('');const[incrementInput,setIncrementInput]=useState('1');// Fields selection state\nconst[selectedFields,setSelectedFields]=useState({});const[selectedBreakdowns,setSelectedBreakdowns]=useState({});// Shared error state\nconst[error,setError]=useState(null);// Initialize fields with defaults\nuseEffect(()=>{// Try to load from localStorage first\nconst savedFields=localStorage.getItem('metaDebugger_selectedFields');const savedBreakdowns=localStorage.getItem('metaDebugger_selectedBreakdowns');if(savedFields){setSelectedFields(JSON.parse(savedFields));}else{// Otherwise use defaults\nconst defaults={};DEFAULT_FIELDS.split(',').forEach(field=>{defaults[field]=true;});setSelectedFields(defaults);}if(savedBreakdowns){setSelectedBreakdowns(JSON.parse(savedBreakdowns));}},[]);// Load other saved values from localStorage on initial render\nuseEffect(()=>{const savedStartDate=localStorage.getItem('metaDebugger_startDate');const savedEndDate=localStorage.getItem('metaDebugger_endDate');const savedIncrement=localStorage.getItem('metaDebugger_increment');if(savedStartDate)setStartDateInput(savedStartDate);if(savedEndDate)setEndDateInput(savedEndDate);if(savedIncrement)setIncrementInput(savedIncrement);},[]);// Save values to localStorage whenever they change\nuseEffect(()=>{localStorage.setItem('metaDebugger_startDate',startDateInput);localStorage.setItem('metaDebugger_endDate',endDateInput);localStorage.setItem('metaDebugger_increment',incrementInput);localStorage.setItem('metaDebugger_selectedFields',JSON.stringify(compactObject(selectedFields)));localStorage.setItem('metaDebugger_selectedBreakdowns',JSON.stringify(compactObject(selectedBreakdowns)));},[startDateInput,endDateInput,incrementInput,selectedFields,selectedBreakdowns]);return/*#__PURE__*/_jsx(\"div\",{className:\"flex\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 p-6 max-w-5xl\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold mb-6\",children:\"Meta API Debugger\"}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-100 dark:bg-gray-800 rounded-lg p-4 mb-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-4\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setActiveTab('live'),className:\"px-4 py-2 rounded \".concat(activeTab==='live'?'bg-blue-600 text-white':'bg-gray-200 text-gray-700'),children:\"Live API Testing\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setActiveTab('historical'),className:\"px-4 py-2 rounded \".concat(activeTab==='historical'?'bg-green-600 text-white':'bg-gray-200 text-gray-700'),children:\"Historical Data Collection\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setActiveTab('mapping'),className:\"px-4 py-2 rounded \".concat(activeTab==='mapping'?'bg-purple-600 text-white':'bg-gray-200 text-gray-700'),children:\"Action Mapping\"})]})}),activeTab==='live'&&/*#__PURE__*/_jsx(LiveApiTester,{startDateInput:startDateInput,setStartDateInput:setStartDateInput,endDateInput:endDateInput,setEndDateInput:setEndDateInput,incrementInput:incrementInput,setIncrementInput:setIncrementInput,selectedFields:selectedFields,setSelectedFields:setSelectedFields,selectedBreakdowns:selectedBreakdowns,setSelectedBreakdowns:setSelectedBreakdowns,error:error,setError:setError}),activeTab==='historical'&&/*#__PURE__*/_jsx(HistoricalDataManager,{startDateInput:startDateInput,setStartDateInput:setStartDateInput,endDateInput:endDateInput,setEndDateInput:setEndDateInput,selectedFields:selectedFields,setSelectedFields:setSelectedFields,selectedBreakdowns:selectedBreakdowns,setSelectedBreakdowns:setSelectedBreakdowns,error:error,setError:setError}),activeTab==='mapping'&&/*#__PURE__*/_jsx(ActionMapper,{selectedFields:selectedFields,setSelectedFields:setSelectedFields,selectedBreakdowns:selectedBreakdowns,setSelectedBreakdowns:setSelectedBreakdowns,error:error,setError:setError}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 p-3 bg-red-100 dark:bg-red-800 text-red-800 dark:text-red-100 rounded\",children:[\"Error: \",error]})]})});};","map":{"version":3,"names":["React","useState","useEffect","LiveApiTester","HistoricalDataManager","ActionMapper","DEFAULT_FIELDS","compactObject","jsx","_jsx","jsxs","_jsxs","MetaDebugger","activeTab","setActiveTab","startDateInput","setStartDateInput","endDateInput","setEndDateInput","incrementInput","setIncrementInput","selectedFields","setSelectedFields","selectedBreakdowns","setSelectedBreakdowns","error","setError","savedFields","localStorage","getItem","savedBreakdowns","JSON","parse","defaults","split","forEach","field","savedStartDate","savedEndDate","savedIncrement","setItem","stringify","className","children","onClick","concat"],"sources":["/Users/joshuakaufman/untitled folder 3/orchestrator/dashboard/client/src/components/meta/MetaDebugger.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport LiveApiTester from './LiveApiTester';\nimport HistoricalDataManager from './HistoricalDataManager';\nimport ActionMapper from './ActionMapper';\nimport { DEFAULT_FIELDS } from './utils/metaConstants';\nimport { compactObject } from './utils/metaApiUtils';\n\nexport const MetaDebugger = () => {\n  // Mode state\n  const [activeTab, setActiveTab] = useState('live'); // 'live', 'historical', 'mapping'\n  \n  // Form input state\n  const [startDateInput, setStartDateInput] = useState('');\n  const [endDateInput, setEndDateInput] = useState('');\n  const [incrementInput, setIncrementInput] = useState('1');\n  \n  // Fields selection state\n  const [selectedFields, setSelectedFields] = useState({});\n  const [selectedBreakdowns, setSelectedBreakdowns] = useState({});\n  \n  // Shared error state\n  const [error, setError] = useState(null);\n  \n  // Initialize fields with defaults\n  useEffect(() => {\n    // Try to load from localStorage first\n    const savedFields = localStorage.getItem('metaDebugger_selectedFields');\n    const savedBreakdowns = localStorage.getItem('metaDebugger_selectedBreakdowns');\n    \n    if (savedFields) {\n      setSelectedFields(JSON.parse(savedFields));\n    } else {\n      // Otherwise use defaults\n      const defaults = {};\n      DEFAULT_FIELDS.split(',').forEach(field => {\n        defaults[field] = true;\n      });\n      setSelectedFields(defaults);\n    }\n    \n    if (savedBreakdowns) {\n      setSelectedBreakdowns(JSON.parse(savedBreakdowns));\n    }\n  }, []);\n  \n  // Load other saved values from localStorage on initial render\n  useEffect(() => {\n    const savedStartDate = localStorage.getItem('metaDebugger_startDate');\n    const savedEndDate = localStorage.getItem('metaDebugger_endDate');\n    const savedIncrement = localStorage.getItem('metaDebugger_increment');\n    \n    if (savedStartDate) setStartDateInput(savedStartDate);\n    if (savedEndDate) setEndDateInput(savedEndDate);\n    if (savedIncrement) setIncrementInput(savedIncrement);\n  }, []);\n  \n  // Save values to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem('metaDebugger_startDate', startDateInput);\n    localStorage.setItem('metaDebugger_endDate', endDateInput);\n    localStorage.setItem('metaDebugger_increment', incrementInput);\n    localStorage.setItem('metaDebugger_selectedFields', JSON.stringify(compactObject(selectedFields)));\n    localStorage.setItem('metaDebugger_selectedBreakdowns', JSON.stringify(compactObject(selectedBreakdowns)));\n  }, [startDateInput, endDateInput, incrementInput, selectedFields, selectedBreakdowns]);\n\n  return (\n    <div className=\"flex\">\n      <div className=\"flex-1 p-6 max-w-5xl\">\n        <h1 className=\"text-2xl font-bold mb-6\">Meta API Debugger</h1>\n        \n        {/* Mode Toggle */}\n        <div className=\"bg-gray-100 dark:bg-gray-800 rounded-lg p-4 mb-6\">\n          <div className=\"flex space-x-4\">\n            <button\n              onClick={() => setActiveTab('live')}\n              className={`px-4 py-2 rounded ${activeTab === 'live' \n                ? 'bg-blue-600 text-white' \n                : 'bg-gray-200 text-gray-700'}`}\n            >\n              Live API Testing\n            </button>\n            <button\n              onClick={() => setActiveTab('historical')}\n              className={`px-4 py-2 rounded ${activeTab === 'historical' \n                ? 'bg-green-600 text-white' \n                : 'bg-gray-200 text-gray-700'}`}\n            >\n              Historical Data Collection\n            </button>\n            <button\n              onClick={() => setActiveTab('mapping')}\n              className={`px-4 py-2 rounded ${activeTab === 'mapping' \n                ? 'bg-purple-600 text-white' \n                : 'bg-gray-200 text-gray-700'}`}\n            >\n              Action Mapping\n            </button>\n          </div>\n        </div>\n\n        {/* Render appropriate mode component */}\n        {activeTab === 'live' && (\n          <LiveApiTester\n            startDateInput={startDateInput}\n            setStartDateInput={setStartDateInput}\n            endDateInput={endDateInput}\n            setEndDateInput={setEndDateInput}\n            incrementInput={incrementInput}\n            setIncrementInput={setIncrementInput}\n            selectedFields={selectedFields}\n            setSelectedFields={setSelectedFields}\n            selectedBreakdowns={selectedBreakdowns}\n            setSelectedBreakdowns={setSelectedBreakdowns}\n            error={error}\n            setError={setError}\n          />\n        )}\n        {activeTab === 'historical' && (\n          <HistoricalDataManager\n            startDateInput={startDateInput}\n            setStartDateInput={setStartDateInput}\n            endDateInput={endDateInput}\n            setEndDateInput={setEndDateInput}\n            selectedFields={selectedFields}\n            setSelectedFields={setSelectedFields}\n            selectedBreakdowns={selectedBreakdowns}\n            setSelectedBreakdowns={setSelectedBreakdowns}\n            error={error}\n            setError={setError}\n          />\n        )}\n        {activeTab === 'mapping' && (\n          <ActionMapper\n            selectedFields={selectedFields}\n            setSelectedFields={setSelectedFields}\n            selectedBreakdowns={selectedBreakdowns}\n            setSelectedBreakdowns={setSelectedBreakdowns}\n            error={error}\n            setError={setError}\n          />\n        )}\n\n        {/* Error display (shared between modes) */}\n        {error && (\n          <div className=\"mt-4 p-3 bg-red-100 dark:bg-red-800 text-red-800 dark:text-red-100 rounded\">\n            Error: {error}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}