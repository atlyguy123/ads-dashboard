{"ast":null,"code":"import _objectSpread from\"/Users/joshuakaufman/untitled folder 3/orchestrator/dashboard/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React from'react';import{BarChart3,Package,Store,DollarSign,TrendingUp,Globe,MapPin,CheckCircle,AlertTriangle}from'lucide-react';import{formatPercentage,formatAppStore}from'./utils/conversionUtils';import{jsxs as _jsxs,jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const AnalysisResultsHierarchy=_ref=>{let{analysisResults,expandedSections,onToggleSection}=_ref;// Generate consistent colors for segment IDs based on hash\nconst getSegmentIdColor=segmentId=>{if(!segmentId)return'#6B7280';let hash=0;for(let i=0;i<segmentId.length;i++){hash=segmentId.charCodeAt(i)+((hash<<5)-hash);}const hue=Math.abs(hash)%360;return\"hsl(\".concat(hue,\", 65%, 50%)\");};// Format segment ID to show first 4 and last 4 characters\nconst formatSegmentIdShort=segmentId=>{if(!segmentId||segmentId.length<=8)return segmentId;return\"\".concat(segmentId.substring(0,4),\"...\").concat(segmentId.substring(segmentId.length-4));};// Render segment ID badge with consistent color\nconst renderSegmentIdBadge=segmentId=>{if(!segmentId)return null;const color=getSegmentIdColor(segmentId);const shortId=formatSegmentIdShort(segmentId);return/*#__PURE__*/_jsxs(\"span\",{className:\"inline-flex items-center px-2 py-1 rounded text-xs font-mono mx-1\",style:{backgroundColor:\"\".concat(color,\"20\"),color:color,border:\"1px solid \".concat(color,\"40\")},children:[\"ID: \",shortId]});};if(!analysisResults){return/*#__PURE__*/_jsx(\"div\",{className:\"text-center text-gray-500 dark:text-gray-400 py-8\",children:\"No analysis results available\"});}// Build hierarchy data with accurate statistics\nconst hierarchyData={};let totalSegmentsWithMetrics=0;let totalRollupSegments=0;if(analysisResults.conversion_probabilities){Object.entries(analysisResults.conversion_probabilities).forEach(_ref2=>{let[segmentId,segmentData]=_ref2;const cohort=segmentData.cohort||{};const metrics=segmentData.metrics||{};const productId=cohort.product_id;const appStore=cohort.app_store||'Unknown';const priceRange=cohort.price_bucket;const economicTier=cohort.economic_tier||'';const country=cohort.country||'';const region=cohort.region||'';if(!productId||!priceRange)return;// Determine if this segment has actual metrics vs is rolled up\nconst isRollup=cohort.properties_dropped&&cohort.properties_dropped.length>0;const hasMetrics=!isRollup;if(hasMetrics)totalSegmentsWithMetrics++;if(isRollup)totalRollupSegments++;// Determine hierarchy level based on what properties are specified\nlet hierarchyLevel='region';if(!region)hierarchyLevel='country';if(!country)hierarchyLevel='tier';if(!economicTier)hierarchyLevel='price';// Store segment at its appropriate level - but ALL segments get stored somewhere\nconst segmentKey=\"\".concat(productId,\"|\").concat(appStore,\"|\").concat(priceRange,\"|\").concat(economicTier,\"|\").concat(country,\"|\").concat(region);const segmentInfo=_objectSpread(_objectSpread(_objectSpread({},cohort),metrics),{},{segment_id:cohort.segment_id||segmentId,is_viable:hasMetrics,trial_conversion_rate:metrics.trial_conversion_rate||0,trial_converted_count:metrics.trial_converted_count||0,trial_started_count:metrics.trial_started_count||0,rollup_target_segment_id:cohort.rollup_target_segment_id,rollup_reason:cohort.rollup_reason,hierarchy_level:hierarchyLevel});// Build nested hierarchy with aggregated statistics\nif(!hierarchyData[productId]){hierarchyData[productId]={stores:{},totalUsers:0,viableSegments:0,rollupSegments:0};}if(!hierarchyData[productId].stores[appStore]){hierarchyData[productId].stores[appStore]={prices:{},totalUsers:0,viableSegments:0,rollupSegments:0};}if(!hierarchyData[productId].stores[appStore].prices[priceRange]){hierarchyData[productId].stores[appStore].prices[priceRange]={tiers:{},totalUsers:0,viableSegments:0,rollupSegments:0,segment:hierarchyLevel==='price'?segmentInfo:null};}if(!hierarchyData[productId].stores[appStore].prices[priceRange].tiers[economicTier||'Unknown']){hierarchyData[productId].stores[appStore].prices[priceRange].tiers[economicTier||'Unknown']={countries:{},totalUsers:0,viableSegments:0,rollupSegments:0,segment:hierarchyLevel==='tier'?segmentInfo:null};}if(!hierarchyData[productId].stores[appStore].prices[priceRange].tiers[economicTier||'Unknown'].countries[country||'Unknown']){hierarchyData[productId].stores[appStore].prices[priceRange].tiers[economicTier||'Unknown'].countries[country||'Unknown']={regions:{},totalUsers:0,viableSegments:0,rollupSegments:0,segment:hierarchyLevel==='country'?segmentInfo:null};}// ALL region-level segments get stored, whether viable or not\nif(hierarchyLevel==='region'){hierarchyData[productId].stores[appStore].prices[priceRange].tiers[economicTier||'Unknown'].countries[country||'Unknown'].regions[region||'Unknown']=segmentInfo;}// Aggregate user counts and statistics upward\nconst userCount=cohort.cohort_size||0;// Update counts at each level\nhierarchyData[productId].totalUsers+=userCount;hierarchyData[productId].stores[appStore].totalUsers+=userCount;hierarchyData[productId].stores[appStore].prices[priceRange].totalUsers+=userCount;hierarchyData[productId].stores[appStore].prices[priceRange].tiers[economicTier||'Unknown'].totalUsers+=userCount;hierarchyData[productId].stores[appStore].prices[priceRange].tiers[economicTier||'Unknown'].countries[country||'Unknown'].totalUsers+=userCount;// Update statistics at each level\nif(hasMetrics){hierarchyData[productId].viableSegments++;hierarchyData[productId].stores[appStore].viableSegments++;hierarchyData[productId].stores[appStore].prices[priceRange].viableSegments++;hierarchyData[productId].stores[appStore].prices[priceRange].tiers[economicTier||'Unknown'].viableSegments++;hierarchyData[productId].stores[appStore].prices[priceRange].tiers[economicTier||'Unknown'].countries[country||'Unknown'].viableSegments++;}if(isRollup){hierarchyData[productId].rollupSegments++;hierarchyData[productId].stores[appStore].rollupSegments++;hierarchyData[productId].stores[appStore].prices[priceRange].rollupSegments++;hierarchyData[productId].stores[appStore].prices[priceRange].tiers[economicTier||'Unknown'].rollupSegments++;hierarchyData[productId].stores[appStore].prices[priceRange].tiers[economicTier||'Unknown'].countries[country||'Unknown'].rollupSegments++;}});}// Render a single hierarchy line with proper indentation\nconst renderHierarchyLine=function(icon,label,userCount,viableCount,rollupCount){let indentLevel=arguments.length>5&&arguments[5]!==undefined?arguments[5]:0;let segmentData=arguments.length>6&&arguments[6]!==undefined?arguments[6]:null;const indentStyle={marginLeft:\"\".concat(indentLevel*24,\"px\")};return/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between py-1 px-3 hover:bg-gray-50 dark:hover:bg-gray-700/30 \".concat(indentLevel%2===0?'bg-gray-25 dark:bg-gray-800/20':'bg-white dark:bg-gray-800'),style:indentStyle,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 min-w-0 flex-1\",children:[icon,/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-gray-900 dark:text-gray-100 truncate\",children:label}),segmentData&&segmentData.segment_id&&renderSegmentIdBadge(segmentData.segment_id),segmentData&&/*#__PURE__*/_jsx(_Fragment,{children:segmentData.is_viable?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"span\",{className:\"text-green-600 dark:text-green-400 text-sm font-medium\",children:[\"\\uD83C\\uDFAF \",formatPercentage(segmentData.trial_conversion_rate)]}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-blue-600 dark:text-blue-400 text-sm\",children:[\"\\u2192 \",segmentData.trial_converted_count||0,\"/\",segmentData.trial_started_count||0]})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[segmentData.rollup_target_segment_id&&/*#__PURE__*/_jsxs(\"span\",{className:\"text-red-600 dark:text-red-400 text-sm\",children:[\"\\u2192 \",renderSegmentIdBadge(segmentData.rollup_target_segment_id)]}),segmentData.rollup_reason&&/*#__PURE__*/_jsxs(\"span\",{className:\"text-red-500 dark:text-red-400 text-xs italic\",children:[\"(\",segmentData.rollup_reason,\")\"]}),segmentData.properties_dropped&&segmentData.properties_dropped.length>0&&/*#__PURE__*/_jsxs(\"span\",{className:\"text-orange-500 dark:text-orange-400 text-xs\",children:[\"Dropped: [\",segmentData.properties_dropped.join(', '),\"]\"]}),segmentData.rollup_description&&/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-500 dark:text-gray-400 text-xs\",children:segmentData.rollup_description})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-4 text-sm font-medium\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"text-gray-600 dark:text-gray-400\",children:[userCount.toLocaleString(),\" users\"]}),viableCount!==undefined&&rollupCount!==undefined&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[viableCount>0&&/*#__PURE__*/_jsxs(\"span\",{className:\"text-green-600 dark:text-green-400\",children:[viableCount,\" viable\"]}),rollupCount>0&&/*#__PURE__*/_jsxs(\"span\",{className:\"text-orange-600 dark:text-orange-400\",children:[rollupCount,\" rollup\"]})]}),segmentData&&/*#__PURE__*/_jsx(\"div\",{children:segmentData.is_viable?/*#__PURE__*/_jsx(\"span\",{className:\"bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-200 px-2 py-1 rounded-full text-xs font-medium\",children:\"\\u2705 VIABLE\"}):/*#__PURE__*/_jsx(\"span\",{className:\"bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-200 px-2 py-1 rounded-full text-xs font-medium\",children:\"\\u274C ROLLUP\"})})]})]});};return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-lg shadow-lg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-6 border-b border-gray-200 dark:border-gray-700 bg-gradient-to-r from-blue-600 to-purple-600 text-white\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsx(BarChart3,{className:\"h-6 w-6\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold\",children:\"Hierarchical Analysis Results\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-blue-100 text-sm mt-1\",children:\"Tree-based segment hierarchy with conversion metrics and rollup information\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-6 text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl font-bold\",children:totalSegmentsWithMetrics}),/*#__PURE__*/_jsx(\"div\",{className:\"text-blue-100\",children:\"Viable Segments\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl font-bold\",children:totalRollupSegments}),/*#__PURE__*/_jsx(\"div\",{className:\"text-blue-100\",children:\"Rollup Segments\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-2xl font-bold\",children:[totalSegmentsWithMetrics+totalRollupSegments>0?Math.round(totalSegmentsWithMetrics/(totalSegmentsWithMetrics+totalRollupSegments)*100):0,\"%\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-blue-100\",children:\"Coverage\"})]})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"divide-y divide-gray-100 dark:divide-gray-700\",children:Object.entries(hierarchyData).map(_ref3=>{let[productId,productData]=_ref3;return/*#__PURE__*/_jsxs(\"div\",{children:[renderHierarchyLine(/*#__PURE__*/_jsx(Package,{className:\"h-5 w-5 text-purple-600\"}),\"\\uD83C\\uDFE2 \".concat(productId),productData.totalUsers,productData.viableSegments,productData.rollupSegments,0),Object.entries(productData.stores).map(_ref4=>{let[appStore,storeData]=_ref4;return/*#__PURE__*/_jsxs(\"div\",{children:[renderHierarchyLine(/*#__PURE__*/_jsx(Store,{className:\"h-4 w-4 text-blue-600\"}),\"\\uD83D\\uDCF1 \".concat(formatAppStore(appStore)),storeData.totalUsers,storeData.viableSegments,storeData.rollupSegments,1),Object.entries(storeData.prices).map(_ref5=>{let[priceRange,priceData]=_ref5;return/*#__PURE__*/_jsxs(\"div\",{children:[renderHierarchyLine(/*#__PURE__*/_jsx(DollarSign,{className:\"h-4 w-4 text-green-600\"}),\"\\uD83D\\uDCB0 \".concat(priceRange),priceData.totalUsers,priceData.viableSegments,priceData.rollupSegments,2,priceData.segment),Object.entries(priceData.tiers).map(_ref6=>{let[economicTier,tierData]=_ref6;return/*#__PURE__*/_jsxs(\"div\",{children:[renderHierarchyLine(/*#__PURE__*/_jsx(TrendingUp,{className:\"h-4 w-4 text-yellow-600\"}),\"\\uD83C\\uDF0D \".concat(economicTier),tierData.totalUsers,tierData.viableSegments,tierData.rollupSegments,3,tierData.segment),Object.entries(tierData.countries).map(_ref7=>{let[country,countryData]=_ref7;return/*#__PURE__*/_jsxs(\"div\",{children:[renderHierarchyLine(/*#__PURE__*/_jsx(Globe,{className:\"h-4 w-4 text-orange-600\"}),\"\\uD83C\\uDFC1 \".concat(country),countryData.totalUsers,countryData.viableSegments,countryData.rollupSegments,4,countryData.segment),Object.entries(countryData.regions).map(_ref8=>{let[region,segment]=_ref8;// ALWAYS show the segment if it exists\nif(!segment)return null;return renderHierarchyLine(segment.is_viable?/*#__PURE__*/_jsx(CheckCircle,{className:\"h-4 w-4 text-green-500\"}):/*#__PURE__*/_jsx(AlertTriangle,{className:\"h-4 w-4 text-red-500\"}),\"\\uD83D\\uDCCD \".concat(region),segment.cohort_size||0,undefined,undefined,5,segment);})]},country);})]},economicTier);})]},priceRange);})]},appStore);})]},productId);})})]});};export default AnalysisResultsHierarchy;","map":{"version":3,"names":["React","BarChart3","Package","Store","DollarSign","TrendingUp","Globe","MapPin","CheckCircle","AlertTriangle","formatPercentage","formatAppStore","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","AnalysisResultsHierarchy","_ref","analysisResults","expandedSections","onToggleSection","getSegmentIdColor","segmentId","hash","i","length","charCodeAt","hue","Math","abs","concat","formatSegmentIdShort","substring","renderSegmentIdBadge","color","shortId","className","style","backgroundColor","border","children","hierarchyData","totalSegmentsWithMetrics","totalRollupSegments","conversion_probabilities","Object","entries","forEach","_ref2","segmentData","cohort","metrics","productId","product_id","appStore","app_store","priceRange","price_bucket","economicTier","economic_tier","country","region","isRollup","properties_dropped","hasMetrics","hierarchyLevel","segmentKey","segmentInfo","_objectSpread","segment_id","is_viable","trial_conversion_rate","trial_converted_count","trial_started_count","rollup_target_segment_id","rollup_reason","hierarchy_level","stores","totalUsers","viableSegments","rollupSegments","prices","tiers","segment","countries","regions","userCount","cohort_size","renderHierarchyLine","icon","label","viableCount","rollupCount","indentLevel","arguments","undefined","indentStyle","marginLeft","join","rollup_description","toLocaleString","round","map","_ref3","productData","_ref4","storeData","_ref5","priceData","_ref6","tierData","_ref7","countryData","_ref8"],"sources":["/Users/joshuakaufman/untitled folder 3/orchestrator/dashboard/client/src/components/conversion_probability/AnalysisResultsHierarchy.jsx"],"sourcesContent":["import React from 'react';\nimport { BarChart3, Package, Store, DollarSign, TrendingUp, Globe, MapPin, CheckCircle, AlertTriangle } from 'lucide-react';\nimport { formatPercentage, formatAppStore } from './utils/conversionUtils';\n\nconst AnalysisResultsHierarchy = ({ analysisResults, expandedSections, onToggleSection }) => {\n\n  // Generate consistent colors for segment IDs based on hash\n  const getSegmentIdColor = (segmentId) => {\n    if (!segmentId) return '#6B7280';\n    \n    let hash = 0;\n    for (let i = 0; i < segmentId.length; i++) {\n      hash = segmentId.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    \n    const hue = Math.abs(hash) % 360;\n    return `hsl(${hue}, 65%, 50%)`;\n  };\n\n  // Format segment ID to show first 4 and last 4 characters\n  const formatSegmentIdShort = (segmentId) => {\n    if (!segmentId || segmentId.length <= 8) return segmentId;\n    return `${segmentId.substring(0, 4)}...${segmentId.substring(segmentId.length - 4)}`;\n  };\n\n  // Render segment ID badge with consistent color\n  const renderSegmentIdBadge = (segmentId) => {\n    if (!segmentId) return null;\n    \n    const color = getSegmentIdColor(segmentId);\n    const shortId = formatSegmentIdShort(segmentId);\n    \n    return (\n      <span \n        className=\"inline-flex items-center px-2 py-1 rounded text-xs font-mono mx-1\"\n        style={{ \n          backgroundColor: `${color}20`, \n          color: color,\n          border: `1px solid ${color}40`\n        }}\n      >\n        ID: {shortId}\n      </span>\n    );\n  };\n\n  if (!analysisResults) {\n    return (\n      <div className=\"text-center text-gray-500 dark:text-gray-400 py-8\">\n        No analysis results available\n      </div>\n    );\n  }\n\n  // Build hierarchy data with accurate statistics\n  const hierarchyData = {};\n  let totalSegmentsWithMetrics = 0;\n  let totalRollupSegments = 0;\n  \n  if (analysisResults.conversion_probabilities) {\n    Object.entries(analysisResults.conversion_probabilities).forEach(([segmentId, segmentData]) => {\n      const cohort = segmentData.cohort || {};\n      const metrics = segmentData.metrics || {};\n      \n      const productId = cohort.product_id;\n      const appStore = cohort.app_store || 'Unknown';\n      const priceRange = cohort.price_bucket;\n      const economicTier = cohort.economic_tier || '';\n      const country = cohort.country || '';\n      const region = cohort.region || '';\n      \n      if (!productId || !priceRange) return;\n\n      // Determine if this segment has actual metrics vs is rolled up\n      const isRollup = cohort.properties_dropped && cohort.properties_dropped.length > 0;\n      const hasMetrics = !isRollup;\n      \n      if (hasMetrics) totalSegmentsWithMetrics++;\n      if (isRollup) totalRollupSegments++;\n\n      // Determine hierarchy level based on what properties are specified\n      let hierarchyLevel = 'region';\n      if (!region) hierarchyLevel = 'country';\n      if (!country) hierarchyLevel = 'tier';\n      if (!economicTier) hierarchyLevel = 'price';\n      \n      // Store segment at its appropriate level - but ALL segments get stored somewhere\n      const segmentKey = `${productId}|${appStore}|${priceRange}|${economicTier}|${country}|${region}`;\n      const segmentInfo = {\n        ...cohort,\n        ...metrics,\n        segment_id: cohort.segment_id || segmentId,\n        is_viable: hasMetrics,\n        trial_conversion_rate: metrics.trial_conversion_rate || 0,\n        trial_converted_count: metrics.trial_converted_count || 0,\n        trial_started_count: metrics.trial_started_count || 0,\n        rollup_target_segment_id: cohort.rollup_target_segment_id,\n        rollup_reason: cohort.rollup_reason,\n        hierarchy_level: hierarchyLevel\n      };\n\n      // Build nested hierarchy with aggregated statistics\n      if (!hierarchyData[productId]) {\n        hierarchyData[productId] = { \n          stores: {}, \n          totalUsers: 0, \n          viableSegments: 0, \n          rollupSegments: 0 \n        };\n      }\n\n      if (!hierarchyData[productId].stores[appStore]) {\n        hierarchyData[productId].stores[appStore] = { \n          prices: {}, \n          totalUsers: 0, \n          viableSegments: 0, \n          rollupSegments: 0 \n        };\n      }\n      \n      if (!hierarchyData[productId].stores[appStore].prices[priceRange]) {\n        hierarchyData[productId].stores[appStore].prices[priceRange] = { \n          tiers: {}, \n          totalUsers: 0, \n          viableSegments: 0, \n          rollupSegments: 0,\n          segment: hierarchyLevel === 'price' ? segmentInfo : null\n        };\n      }\n\n      if (!hierarchyData[productId].stores[appStore].prices[priceRange].tiers[economicTier || 'Unknown']) {\n        hierarchyData[productId].stores[appStore].prices[priceRange].tiers[economicTier || 'Unknown'] = { \n          countries: {}, \n          totalUsers: 0, \n          viableSegments: 0, \n          rollupSegments: 0,\n          segment: hierarchyLevel === 'tier' ? segmentInfo : null\n        };\n      }\n\n      if (!hierarchyData[productId].stores[appStore].prices[priceRange].tiers[economicTier || 'Unknown'].countries[country || 'Unknown']) {\n        hierarchyData[productId].stores[appStore].prices[priceRange].tiers[economicTier || 'Unknown'].countries[country || 'Unknown'] = { \n          regions: {}, \n          totalUsers: 0, \n          viableSegments: 0, \n          rollupSegments: 0,\n          segment: hierarchyLevel === 'country' ? segmentInfo : null\n        };\n      }\n\n      // ALL region-level segments get stored, whether viable or not\n      if (hierarchyLevel === 'region') {\n        hierarchyData[productId].stores[appStore].prices[priceRange].tiers[economicTier || 'Unknown'].countries[country || 'Unknown'].regions[region || 'Unknown'] = segmentInfo;\n      }\n\n      // Aggregate user counts and statistics upward\n      const userCount = cohort.cohort_size || 0;\n      \n      // Update counts at each level\n      hierarchyData[productId].totalUsers += userCount;\n      hierarchyData[productId].stores[appStore].totalUsers += userCount;\n      hierarchyData[productId].stores[appStore].prices[priceRange].totalUsers += userCount;\n      hierarchyData[productId].stores[appStore].prices[priceRange].tiers[economicTier || 'Unknown'].totalUsers += userCount;\n      hierarchyData[productId].stores[appStore].prices[priceRange].tiers[economicTier || 'Unknown'].countries[country || 'Unknown'].totalUsers += userCount;\n\n      // Update statistics at each level\n      if (hasMetrics) {\n        hierarchyData[productId].viableSegments++;\n        hierarchyData[productId].stores[appStore].viableSegments++;\n        hierarchyData[productId].stores[appStore].prices[priceRange].viableSegments++;\n        hierarchyData[productId].stores[appStore].prices[priceRange].tiers[economicTier || 'Unknown'].viableSegments++;\n        hierarchyData[productId].stores[appStore].prices[priceRange].tiers[economicTier || 'Unknown'].countries[country || 'Unknown'].viableSegments++;\n      }\n      \n      if (isRollup) {\n        hierarchyData[productId].rollupSegments++;\n        hierarchyData[productId].stores[appStore].rollupSegments++;\n        hierarchyData[productId].stores[appStore].prices[priceRange].rollupSegments++;\n        hierarchyData[productId].stores[appStore].prices[priceRange].tiers[economicTier || 'Unknown'].rollupSegments++;\n        hierarchyData[productId].stores[appStore].prices[priceRange].tiers[economicTier || 'Unknown'].countries[country || 'Unknown'].rollupSegments++;\n      }\n    });\n  }\n\n  // Render a single hierarchy line with proper indentation\n  const renderHierarchyLine = (icon, label, userCount, viableCount, rollupCount, indentLevel = 0, segmentData = null) => {\n    const indentStyle = { marginLeft: `${indentLevel * 24}px` };\n    \n    return (\n      <div \n        className={`flex items-center justify-between py-1 px-3 hover:bg-gray-50 dark:hover:bg-gray-700/30 ${\n          indentLevel % 2 === 0 ? 'bg-gray-25 dark:bg-gray-800/20' : 'bg-white dark:bg-gray-800'\n        }`}\n        style={indentStyle}\n      >\n        {/* Left side: Icon + Label + Segment Info */}\n        <div className=\"flex items-center gap-2 min-w-0 flex-1\">\n          {icon}\n          <span className=\"font-medium text-gray-900 dark:text-gray-100 truncate\">\n            {label}\n          </span>\n          \n          {/* ALWAYS show segment ID FIRST if we have segment data */}\n          {segmentData && segmentData.segment_id && (\n            renderSegmentIdBadge(segmentData.segment_id)\n          )}\n          \n          {/* Segment-specific information - metrics or rollup info */}\n          {segmentData && (\n            <>\n              {segmentData.is_viable ? (\n                <>\n                  <span className=\"text-green-600 dark:text-green-400 text-sm font-medium\">\n                    🎯 {formatPercentage(segmentData.trial_conversion_rate)}\n                  </span>\n                  <span className=\"text-blue-600 dark:text-blue-400 text-sm\">\n                    → {segmentData.trial_converted_count || 0}/{segmentData.trial_started_count || 0}\n                  </span>\n                </>\n              ) : (\n                <>\n                  {segmentData.rollup_target_segment_id && (\n                    <span className=\"text-red-600 dark:text-red-400 text-sm\">\n                      → {renderSegmentIdBadge(segmentData.rollup_target_segment_id)}\n                    </span>\n                  )}\n                  {segmentData.rollup_reason && (\n                    <span className=\"text-red-500 dark:text-red-400 text-xs italic\">\n                      ({segmentData.rollup_reason})\n                    </span>\n                  )}\n                  {segmentData.properties_dropped && segmentData.properties_dropped.length > 0 && (\n                    <span className=\"text-orange-500 dark:text-orange-400 text-xs\">\n                      Dropped: [{segmentData.properties_dropped.join(', ')}]\n                    </span>\n                  )}\n                  {segmentData.rollup_description && (\n                    <span className=\"text-gray-500 dark:text-gray-400 text-xs\">\n                      {segmentData.rollup_description}\n                    </span>\n                  )}\n                </>\n              )}\n            </>\n          )}\n        </div>\n\n        {/* Right side: Statistics */}\n        <div className=\"flex items-center gap-4 text-sm font-medium\">\n          <span className=\"text-gray-600 dark:text-gray-400\">\n            {userCount.toLocaleString()} users\n          </span>\n          \n          {/* Hierarchy level statistics */}\n          {viableCount !== undefined && rollupCount !== undefined && (\n            <div className=\"flex items-center gap-2\">\n              {viableCount > 0 && (\n                <span className=\"text-green-600 dark:text-green-400\">\n                  {viableCount} viable\n                </span>\n              )}\n              {rollupCount > 0 && (\n                <span className=\"text-orange-600 dark:text-orange-400\">\n                  {rollupCount} rollup\n                </span>\n              )}\n            </div>\n          )}\n          \n          {/* Final segment status */}\n          {segmentData && (\n            <div>\n              {segmentData.is_viable ? (\n                <span className=\"bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-200 px-2 py-1 rounded-full text-xs font-medium\">\n                  ✅ VIABLE\n                </span>\n              ) : (\n                <span className=\"bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-200 px-2 py-1 rounded-full text-xs font-medium\">\n                  ❌ ROLLUP\n                </span>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg\">\n      \n      {/* Clean Header */}\n      <div className=\"p-6 border-b border-gray-200 dark:border-gray-700 bg-gradient-to-r from-blue-600 to-purple-600 text-white\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <BarChart3 className=\"h-6 w-6\" />\n            <div>\n              <h2 className=\"text-xl font-bold\">Hierarchical Analysis Results</h2>\n              <p className=\"text-blue-100 text-sm mt-1\">\n                Tree-based segment hierarchy with conversion metrics and rollup information\n              </p>\n            </div>\n          </div>\n          \n          {/* Summary Statistics */}\n          <div className=\"flex items-center gap-6 text-sm\">\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold\">{totalSegmentsWithMetrics}</div>\n              <div className=\"text-blue-100\">Viable Segments</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold\">{totalRollupSegments}</div>\n              <div className=\"text-blue-100\">Rollup Segments</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold\">\n                {totalSegmentsWithMetrics + totalRollupSegments > 0 ? \n                  Math.round((totalSegmentsWithMetrics / (totalSegmentsWithMetrics + totalRollupSegments)) * 100) : 0}%\n              </div>\n              <div className=\"text-blue-100\">Coverage</div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Clean Tree Structure */}\n      <div className=\"divide-y divide-gray-100 dark:divide-gray-700\">\n        {Object.entries(hierarchyData).map(([productId, productData]) => (\n          <div key={productId}>\n            \n            {/* Product Level */}\n            {renderHierarchyLine(\n              <Package className=\"h-5 w-5 text-purple-600\" />,\n              `🏢 ${productId}`,\n              productData.totalUsers,\n              productData.viableSegments,\n              productData.rollupSegments,\n              0\n            )}\n\n            {/* Store Level */}\n            {Object.entries(productData.stores).map(([appStore, storeData]) => (\n              <div key={appStore}>\n                {renderHierarchyLine(\n                  <Store className=\"h-4 w-4 text-blue-600\" />,\n                  `📱 ${formatAppStore(appStore)}`,\n                  storeData.totalUsers,\n                  storeData.viableSegments,\n                  storeData.rollupSegments,\n                  1\n                )}\n\n                {/* Price Level */}\n                {Object.entries(storeData.prices).map(([priceRange, priceData]) => (\n                  <div key={priceRange}>\n                    {renderHierarchyLine(\n                      <DollarSign className=\"h-4 w-4 text-green-600\" />,\n                      `💰 ${priceRange}`,\n                      priceData.totalUsers,\n                      priceData.viableSegments,\n                      priceData.rollupSegments,\n                      2,\n                      priceData.segment\n                    )}\n\n                    {/* Economic Tier Level */}\n                    {Object.entries(priceData.tiers).map(([economicTier, tierData]) => (\n                      <div key={economicTier}>\n                        {renderHierarchyLine(\n                          <TrendingUp className=\"h-4 w-4 text-yellow-600\" />,\n                          `🌍 ${economicTier}`,\n                          tierData.totalUsers,\n                          tierData.viableSegments,\n                          tierData.rollupSegments,\n                          3,\n                          tierData.segment\n                        )}\n\n                        {/* Country Level */}\n                        {Object.entries(tierData.countries).map(([country, countryData]) => (\n                          <div key={country}>\n                            {renderHierarchyLine(\n                              <Globe className=\"h-4 w-4 text-orange-600\" />,\n                              `🏁 ${country}`,\n                              countryData.totalUsers,\n                              countryData.viableSegments,\n                              countryData.rollupSegments,\n                              4,\n                              countryData.segment\n                            )}\n\n                            {/* Region Level - ALL Segments */}\n                            {Object.entries(countryData.regions).map(([region, segment]) => {\n                              // ALWAYS show the segment if it exists\n                              if (!segment) return null;\n                              \n                              return renderHierarchyLine(\n                                segment.is_viable ? \n                                  <CheckCircle className=\"h-4 w-4 text-green-500\" /> : \n                                  <AlertTriangle className=\"h-4 w-4 text-red-500\" />,\n                                `📍 ${region}`,\n                                segment.cohort_size || 0,\n                                undefined,\n                                undefined,\n                                5,\n                                segment\n                              );\n                            })}\n                          </div>\n                        ))}\n                      </div>\n                    ))}\n                  </div>\n                ))}\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default AnalysisResultsHierarchy;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}