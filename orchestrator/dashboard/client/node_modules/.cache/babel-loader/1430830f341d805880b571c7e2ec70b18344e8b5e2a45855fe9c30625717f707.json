{"ast":null,"code":"var _jsxFileName = \"/Users/joshuakaufman/untitled folder 3/orchestrator/dashboard/client/src/cohort-pipeline/components/EventTimelineTable.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\n\n// Estimated Revenue Tooltip Component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EstimatedRevenueTooltip = ({\n  data,\n  position,\n  onClose,\n  selectedUserId,\n  selectedProductId\n}) => {\n  _s();\n  const [isHovered, setIsHovered] = React.useState(false);\n  const closeTimeoutRef = React.useRef(null);\n  if (!data) return null;\n\n  // Add safety checks for data structure\n  const safeValue = data.value || 0;\n  const safeBreakdown = data.breakdown || {};\n  const safeComponents = safeBreakdown.components || {};\n  const safeFormula = safeBreakdown.formula || 'No formula available';\n  const safeCalculation = safeBreakdown.calculation || 'No calculation available';\n  const handleMouseEnter = () => {\n    setIsHovered(true);\n    // Clear any pending close timeout\n    if (closeTimeoutRef.current) {\n      clearTimeout(closeTimeoutRef.current);\n      closeTimeoutRef.current = null;\n    }\n  };\n  const handleMouseLeave = () => {\n    setIsHovered(false);\n    // Set a timeout to close the tooltip\n    closeTimeoutRef.current = setTimeout(() => {\n      onClose();\n    }, 300); // Longer delay to prevent accidental closing\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed z-50 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-600 rounded-lg shadow-lg p-4 max-w-md pointer-events-auto\",\n    style: {\n      // Use the position calculated in the mouse event handler directly\n      left: position.x,\n      top: position.y,\n      pointerEvents: 'auto'\n    },\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-start mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"font-semibold text-gray-900 dark:text-white\",\n        children: [\"Estimated Revenue: $\", safeValue.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        className: \"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 ml-2\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-3\",\n      children: [(() => {\n        const trialConverted = safeBreakdown.trial_converted || {};\n        const initialPurchase = safeBreakdown.initial_purchase || {};\n        const showTrialRatio = trialConverted.actual_revenue > 0;\n        const showInitialRatio = initialPurchase.actual_revenue > 0;\n        if (!showTrialRatio && !showInitialRatio) return null;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-blue-50 dark:bg-blue-900 p-3 rounded-lg border border-blue-200 dark:border-blue-700\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm font-medium text-blue-800 dark:text-blue-200 mb-2\",\n            children: \"\\uD83C\\uDFAF Refund Rate Analysis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this), showTrialRatio && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs font-medium text-blue-700 dark:text-blue-300\",\n              children: \"Trial Conversion Refund Rate:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm font-bold text-blue-900 dark:text-blue-100\",\n              children: (() => {\n                const revenue = trialConverted.actual_revenue || 0;\n                const estimatedRefunds = trialConverted.estimated_refunds || 0;\n                const refundRate = revenue > 0 ? estimatedRefunds / revenue * 100 : 0;\n                return `${estimatedRefunds.toFixed(2)} / ${revenue.toFixed(2)} = ${refundRate.toFixed(1)}%`;\n              })()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-blue-600 dark:text-blue-400\",\n              children: [\"$\", (trialConverted.estimated_refunds || 0).toFixed(2), \" estimated refunds on $\", (trialConverted.actual_revenue || 0).toFixed(2), \" revenue\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 33\n          }, this), showInitialRatio && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs font-medium text-blue-700 dark:text-blue-300\",\n              children: \"Initial Purchase Refund Rate:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm font-bold text-blue-900 dark:text-blue-100\",\n              children: (() => {\n                const revenue = initialPurchase.actual_revenue || 0;\n                const estimatedRefunds = initialPurchase.estimated_refunds || 0;\n                const refundRate = revenue > 0 ? estimatedRefunds / revenue * 100 : 0;\n                return `${estimatedRefunds.toFixed(2)} / ${revenue.toFixed(2)} = ${refundRate.toFixed(1)}%`;\n              })()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-blue-600 dark:text-blue-400\",\n              children: [\"$\", (initialPurchase.estimated_refunds || 0).toFixed(2), \" estimated refunds on $\", (initialPurchase.actual_revenue || 0).toFixed(2), \" revenue\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this);\n      })(), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\",\n          children: \"Formula:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-600 dark:text-gray-400 font-mono bg-gray-50 dark:bg-gray-700 p-2 rounded\",\n          children: safeFormula\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\",\n          children: \"Calculation:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-600 dark:text-gray-400 font-mono bg-gray-50 dark:bg-gray-700 p-2 rounded\",\n          children: safeCalculation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\",\n          children: \"Components:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-1\",\n          children: [(() => {\n            // Use explicit ordering from backend if available\n            const componentsOrder = safeBreakdown.components_order;\n            const components = safeComponents;\n            if (componentsOrder && Array.isArray(componentsOrder)) {\n              // Use backend's explicit ordering\n              return componentsOrder.map(key => {\n                const value = components[key];\n                if (value === undefined) return null;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-between text-xs\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-gray-600 dark:text-gray-400\",\n                    children: [key, \":\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-gray-900 dark:text-white font-medium\",\n                    children: typeof value === 'string' ? value : typeof value === 'number' ? key.toLowerCase().includes('revenue') || key.toLowerCase().includes('arpu') ? `$${value.toFixed(2)}` : value.toString() : value || 'N/A'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 45\n                  }, this)]\n                }, key, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 41\n                }, this);\n              }).filter(Boolean);\n            } else {\n              // Fallback to object iteration (original behavior)\n              return Object.entries(components).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between text-xs\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-600 dark:text-gray-400\",\n                  children: [key, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-900 dark:text-white font-medium\",\n                  children: typeof value === 'string' ? value : typeof value === 'number' ? key.toLowerCase().includes('revenue') || key.toLowerCase().includes('arpu') ? `$${value.toFixed(2)}` : value.toString() : value || 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 41\n                }, this)]\n              }, key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 37\n              }, this));\n            }\n          })(), (() => {\n            const componentsOrder = safeBreakdown.components_order;\n            const components = safeComponents;\n\n            // Show fallback message if no components\n            if ((!componentsOrder || !Array.isArray(componentsOrder) || componentsOrder.length === 0) && Object.keys(components).length === 0) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs text-gray-500 dark:text-gray-400\",\n                children: \"No component data available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 37\n              }, this);\n            }\n            return null;\n          })()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), (selectedUserId || selectedProductId) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3 pt-3 border-t border-gray-200 dark:border-gray-600\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-blue-600 dark:text-blue-400\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Note:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 29\n          }, this), \" This calculation is specific to the filtered view\", selectedUserId && ` for user ${selectedUserId}`, selectedProductId && ` for product ${selectedProductId}`, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(EstimatedRevenueTooltip, \"4G0tZSYSB3BMDSWTCsbdjfRjx2M=\");\n_c = EstimatedRevenueTooltip;\nconst EventTimelineTable = ({\n  data,\n  selectedUserId = '',\n  selectedProductId = ''\n}) => {\n  _s2();\n  var _data$data, _data$data2, _data$data3, _data$data4, _data$data4$structure, _data$data5, _data$data6, _data$data7, _data$data8, _data$data8$structure;\n  const [showCumulative, setShowCumulative] = useState(false);\n\n  // Add state for tooltip with debounce\n  const [tooltipData, setTooltipData] = useState(null);\n  const [tooltipPosition, setTooltipPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const tooltipTimeoutRef = React.useRef(null);\n\n  // FILTER VARIABLES: Now received as props from parent Stage3RevenueResults\n  // These are passed from the parent component that handles user selection\n  // selectedUserId and selectedProductId are now props instead of hardcoded empty strings\n\n  // Cleanup tooltip timeout on unmount\n  React.useEffect(() => {\n    return () => {\n      if (tooltipTimeoutRef.current) {\n        clearTimeout(tooltipTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  // Debug logging\n  console.log('[DEBUG] EventTimelineTable received data:', data);\n  console.log('[DEBUG] Data structure check:', {\n    hasData: !!data,\n    hasDataData: !!(data !== null && data !== void 0 && data.data),\n    hasDailyMetrics: !!(data !== null && data !== void 0 && (_data$data = data.data) !== null && _data$data !== void 0 && _data$data.daily_metrics),\n    hasTimelineData: !!(data !== null && data !== void 0 && (_data$data2 = data.data) !== null && _data$data2 !== void 0 && _data$data2.timeline_data),\n    hasStructuredFormat: !!(data !== null && data !== void 0 && (_data$data3 = data.data) !== null && _data$data3 !== void 0 && _data$data3.structured_format),\n    hasTimelineAnalysis: !!(data !== null && data !== void 0 && (_data$data4 = data.data) !== null && _data$data4 !== void 0 && (_data$data4$structure = _data$data4.structured_format) !== null && _data$data4$structure !== void 0 && _data$data4$structure.timeline_analysis),\n    dataKeys: data ? Object.keys(data) : [],\n    dataDataKeys: data !== null && data !== void 0 && data.data ? Object.keys(data.data) : []\n  });\n\n  // NEW: Additional debugging for data.data structure\n  console.log('[DEBUG] Raw data.data structure:', data === null || data === void 0 ? void 0 : data.data);\n  console.log('[DEBUG] Available keys in data.data:', data !== null && data !== void 0 && data.data ? Object.keys(data.data) : []);\n  if (data !== null && data !== void 0 && (_data$data5 = data.data) !== null && _data$data5 !== void 0 && _data$data5.daily_metrics) {\n    console.log('[DEBUG] daily_metrics type:', typeof data.data.daily_metrics);\n    console.log('[DEBUG] daily_metrics sample:', data.data.daily_metrics);\n  }\n\n  // Handle multiple data formats: unified pipeline, legacy API, and direct timeline API\n  let timelineData;\n  let dates = [];\n  let dailyMetrics = {};\n  let cumulativeMetrics = {};\n  let userTimelines = {};\n  let userDailyMetrics = {};\n\n  // Check if we have valid data first, but don't return early yet\n  const hasValidData = !!(data !== null && data !== void 0 && (_data$data6 = data.data) !== null && _data$data6 !== void 0 && _data$data6.daily_metrics || data !== null && data !== void 0 && (_data$data7 = data.data) !== null && _data$data7 !== void 0 && _data$data7.timeline_data || data !== null && data !== void 0 && (_data$data8 = data.data) !== null && _data$data8 !== void 0 && (_data$data8$structure = _data$data8.structured_format) !== null && _data$data8$structure !== void 0 && _data$data8$structure.timeline_analysis || data !== null && data !== void 0 && data.data);\n  if (hasValidData) {\n    var _data$data$structured;\n    if ((_data$data$structured = data.data.structured_format) !== null && _data$data$structured !== void 0 && _data$data$structured.timeline_analysis) {\n      // Unified pipeline format: timeline data is in structured_format.timeline_analysis\n      timelineData = data.data.structured_format.timeline_analysis;\n      dates = timelineData.dates || [];\n      dailyMetrics = timelineData.daily_metrics || {};\n      cumulativeMetrics = timelineData.cumulative_metrics || {};\n      userTimelines = timelineData.user_timelines || {};\n      userDailyMetrics = timelineData.user_daily_metrics || {};\n      console.log('[DEBUG] Using unified pipeline format. Timeline data:', timelineData);\n      console.log('[DEBUG] Dates:', dates);\n      console.log('[DEBUG] Daily metrics keys:', Object.keys(dailyMetrics));\n      console.log('[DEBUG] User timelines available:', Object.keys(userTimelines).length);\n      console.log('[DEBUG] User daily metrics available:', Object.keys(userDailyMetrics).length);\n    } else if (data.data.timeline_data && data.data.timeline_data.daily_metrics) {\n      // Direct timeline API format: timeline_data contains the TimelineData structure\n      timelineData = data.data.timeline_data;\n      dates = timelineData.dates || [];\n      dailyMetrics = timelineData.daily_metrics || {};\n      cumulativeMetrics = timelineData.cumulative_metrics || {};\n      userTimelines = timelineData.user_timelines || {};\n      userDailyMetrics = timelineData.user_daily_metrics || {};\n    } else if (data.data.daily_metrics && typeof data.data.daily_metrics === 'object' && data.data.daily_metrics.dates) {\n      // Legacy format: daily_metrics contains the entire legacy result\n      timelineData = data.data.daily_metrics;\n      dates = timelineData.dates || [];\n      // Convert legacy format to expected structure\n      if (timelineData.event_rows) {\n        // Transform legacy event_rows format to daily_metrics format\n        dates.forEach(date => {\n          dailyMetrics[date] = {};\n          Object.keys(timelineData.event_rows).forEach(metric => {\n            dailyMetrics[date][metric] = timelineData.event_rows[metric][date] || 0;\n          });\n        });\n      }\n      // Legacy format doesn't have user daily metrics\n      userDailyMetrics = {};\n    } else if (data.data.daily_metrics) {\n      // New format: daily_metrics is a direct mapping\n      timelineData = data.data;\n      dates = timelineData.dates || [];\n      dailyMetrics = timelineData.daily_metrics || {};\n      cumulativeMetrics = timelineData.cumulative_metrics || {};\n      userTimelines = timelineData.user_timelines || {};\n      userDailyMetrics = timelineData.user_daily_metrics || {};\n    }\n  }\n\n  // Extract available users and products for filtering\n  const {\n    availableUsers,\n    availableProducts\n  } = useMemo(() => {\n    const users = new Set();\n    const products = new Set();\n\n    // PRIORITY 1: Extract from user daily metrics (most accurate)\n    Object.keys(userDailyMetrics).forEach(userId => {\n      users.add(userId);\n    });\n\n    // PRIORITY 2: Extract from user timelines if available\n    Object.keys(userTimelines).forEach(userId => {\n      var _userTimeline$summary;\n      users.add(userId);\n      const userTimeline = userTimelines[userId];\n      if (userTimeline.events) {\n        userTimeline.events.forEach(event => {\n          if (event.product_id) {\n            products.add(event.product_id);\n          }\n        });\n      }\n      if ((_userTimeline$summary = userTimeline.summary) !== null && _userTimeline$summary !== void 0 && _userTimeline$summary.product_summaries) {\n        Object.keys(userTimeline.summary.product_summaries).forEach(productId => {\n          products.add(productId);\n        });\n      }\n    });\n\n    // PRIORITY 3: Extract from daily metrics breakdown if available\n    Object.values(dailyMetrics).forEach(dayData => {\n      var _dayData$estimated_re;\n      if ((_dayData$estimated_re = dayData.estimated_revenue_breakdown) !== null && _dayData$estimated_re !== void 0 && _dayData$estimated_re.user_breakdowns) {\n        Object.keys(dayData.estimated_revenue_breakdown.user_breakdowns).forEach(userId => {\n          users.add(userId);\n          const userBreakdown = dayData.estimated_revenue_breakdown.user_breakdowns[userId];\n          if (userBreakdown.product_breakdowns) {\n            Object.keys(userBreakdown.product_breakdowns).forEach(productId => {\n              products.add(productId);\n            });\n          }\n        });\n      }\n    });\n    return {\n      availableUsers: Array.from(users).sort(),\n      availableProducts: Array.from(products).sort()\n    };\n  }, [userDailyMetrics, userTimelines, dailyMetrics]);\n\n  // Filter data based on selected user/product\n  const filteredData = useMemo(() => {\n    if (!selectedUserId && !selectedProductId) {\n      return {\n        dailyMetrics,\n        cumulativeMetrics\n      };\n    }\n\n    // CRITICAL: Use backend's pre-calculated user daily metrics directly\n    // No business logic recalculation in frontend - pure display layer\n\n    const filteredDaily = {};\n    const filteredCumulative = {};\n    if (selectedUserId && !selectedProductId) {\n      // Filter by user only - use backend's user daily metrics directly\n      const userMetrics = userDailyMetrics[selectedUserId];\n      if (userMetrics) {\n        // CRITICAL FIX: Calculate cumulative values for single user view\n        // Backend provides daily user metrics, but we need to calculate cumulative on frontend\n        let cumulativeValues = {\n          trial_started: 0,\n          trial_ended: 0,\n          trial_converted: 0,\n          trial_cancelled: 0,\n          initial_purchase: 0,\n          subscription_cancelled: 0,\n          revenue: 0,\n          refund: 0,\n          refund_count: 0\n        };\n        dates.forEach(date => {\n          const userDayMetrics = userMetrics[date];\n          if (userDayMetrics) {\n            // Use backend's pre-calculated daily metrics directly\n            filteredDaily[date] = {\n              ...userDayMetrics,\n              // CRITICAL FIX: Calculate revenue_net since backend doesn't provide it for individual users\n              revenue_net: (userDayMetrics.revenue || 0) - (userDayMetrics.refund || 0)\n            };\n\n            // Calculate cumulative values by summing daily values\n            cumulativeValues.trial_started += userDayMetrics.trial_started || 0;\n            cumulativeValues.trial_ended += userDayMetrics.trial_ended || 0;\n            cumulativeValues.trial_converted += userDayMetrics.trial_converted || 0;\n            cumulativeValues.trial_cancelled += userDayMetrics.trial_cancelled || 0;\n            cumulativeValues.initial_purchase += userDayMetrics.initial_purchase || 0;\n            cumulativeValues.subscription_cancelled += userDayMetrics.subscription_cancelled || 0;\n            cumulativeValues.revenue += userDayMetrics.revenue || 0;\n            cumulativeValues.refund += userDayMetrics.refund || 0;\n            cumulativeValues.refund_count += userDayMetrics.refund_count || 0;\n\n            // Create cumulative metrics with proper field names\n            filteredCumulative[date] = {\n              // Copy daily values for state-based metrics (these don't accumulate)\n              trial_pending: userDayMetrics.trial_pending || 0,\n              subscription_active: userDayMetrics.subscription_active || 0,\n              estimated_revenue: userDayMetrics.estimated_revenue || 0,\n              // Add cumulative values with proper field names expected by getCumulativeValue functions\n              cumulative_trial_started: cumulativeValues.trial_started,\n              cumulative_trial_ended: cumulativeValues.trial_ended,\n              cumulative_trial_converted: cumulativeValues.trial_converted,\n              cumulative_trial_cancelled: cumulativeValues.trial_cancelled,\n              cumulative_initial_purchase: cumulativeValues.initial_purchase,\n              cumulative_subscription_cancelled: cumulativeValues.subscription_cancelled,\n              cumulative_revenue: cumulativeValues.revenue,\n              cumulative_refund: cumulativeValues.refund,\n              cumulative_refund_count: cumulativeValues.refund_count,\n              cumulative_revenue_net: cumulativeValues.revenue - cumulativeValues.refund\n            };\n          } else {\n            // No data for this user on this date\n            filteredDaily[date] = {\n              trial_started: 0,\n              trial_pending: 0,\n              trial_ended: 0,\n              trial_converted: 0,\n              trial_cancelled: 0,\n              initial_purchase: 0,\n              subscription_active: 0,\n              subscription_cancelled: 0,\n              revenue: 0,\n              refund: 0,\n              refund_count: 0,\n              estimated_revenue: 0,\n              revenue_net: 0\n            };\n\n            // For cumulative, maintain previous cumulative values (no change on days with no activity)\n            filteredCumulative[date] = {\n              // State-based metrics remain 0\n              trial_pending: 0,\n              subscription_active: 0,\n              estimated_revenue: 0,\n              // Cumulative values remain at previous levels\n              cumulative_trial_started: cumulativeValues.trial_started,\n              cumulative_trial_ended: cumulativeValues.trial_ended,\n              cumulative_trial_converted: cumulativeValues.trial_converted,\n              cumulative_trial_cancelled: cumulativeValues.trial_cancelled,\n              cumulative_initial_purchase: cumulativeValues.initial_purchase,\n              cumulative_subscription_cancelled: cumulativeValues.subscription_cancelled,\n              cumulative_revenue: cumulativeValues.revenue,\n              cumulative_refund: cumulativeValues.refund,\n              cumulative_refund_count: cumulativeValues.refund_count,\n              cumulative_revenue_net: cumulativeValues.revenue - cumulativeValues.refund\n            };\n          }\n        });\n      } else {\n        // User not found in user daily metrics\n        dates.forEach(date => {\n          filteredDaily[date] = {\n            trial_started: 0,\n            trial_pending: 0,\n            trial_ended: 0,\n            trial_converted: 0,\n            trial_cancelled: 0,\n            initial_purchase: 0,\n            subscription_active: 0,\n            subscription_cancelled: 0,\n            revenue: 0,\n            refund: 0,\n            refund_count: 0,\n            estimated_revenue: 0,\n            revenue_net: 0\n          };\n          filteredCumulative[date] = {\n            trial_pending: 0,\n            subscription_active: 0,\n            estimated_revenue: 0,\n            cumulative_trial_started: 0,\n            cumulative_trial_ended: 0,\n            cumulative_trial_converted: 0,\n            cumulative_trial_cancelled: 0,\n            cumulative_initial_purchase: 0,\n            cumulative_subscription_cancelled: 0,\n            cumulative_revenue: 0,\n            cumulative_refund: 0,\n            cumulative_refund_count: 0,\n            cumulative_revenue_net: 0\n          };\n        });\n      }\n    } else if (selectedProductId && !selectedUserId) {\n      // Filter by product only - aggregate all users for this product\n      // TODO: Backend should provide product-specific aggregations directly\n      // For now, show original aggregate data with a note\n      dates.forEach(date => {\n        filteredDaily[date] = {\n          ...dailyMetrics[date]\n        };\n        filteredCumulative[date] = {\n          ...cumulativeMetrics[date]\n        };\n      });\n    } else if (selectedUserId && selectedProductId) {\n      // Filter by both user and product\n      // TODO: Backend should provide user-product specific metrics\n      // For now, use user metrics (which aggregate across all products for that user)\n      const userMetrics = userDailyMetrics[selectedUserId];\n      if (userMetrics) {\n        // CRITICAL FIX: Calculate cumulative values for single user view (same logic as user-only)\n        let cumulativeValues = {\n          trial_started: 0,\n          trial_ended: 0,\n          trial_converted: 0,\n          trial_cancelled: 0,\n          initial_purchase: 0,\n          subscription_cancelled: 0,\n          revenue: 0,\n          refund: 0,\n          refund_count: 0\n        };\n        dates.forEach(date => {\n          const userDayMetrics = userMetrics[date];\n          if (userDayMetrics) {\n            // Use backend's pre-calculated metrics directly\n            // Note: This shows all products for the user, not just the selected product\n            filteredDaily[date] = {\n              ...userDayMetrics,\n              // CRITICAL FIX: Calculate revenue_net since backend doesn't provide it for individual users\n              revenue_net: (userDayMetrics.revenue || 0) - (userDayMetrics.refund || 0)\n            };\n\n            // Calculate cumulative values by summing daily values\n            cumulativeValues.trial_started += userDayMetrics.trial_started || 0;\n            cumulativeValues.trial_ended += userDayMetrics.trial_ended || 0;\n            cumulativeValues.trial_converted += userDayMetrics.trial_converted || 0;\n            cumulativeValues.trial_cancelled += userDayMetrics.trial_cancelled || 0;\n            cumulativeValues.initial_purchase += userDayMetrics.initial_purchase || 0;\n            cumulativeValues.subscription_cancelled += userDayMetrics.subscription_cancelled || 0;\n            cumulativeValues.revenue += userDayMetrics.revenue || 0;\n            cumulativeValues.refund += userDayMetrics.refund || 0;\n            cumulativeValues.refund_count += userDayMetrics.refund_count || 0;\n\n            // Create cumulative metrics with proper field names\n            filteredCumulative[date] = {\n              // Copy daily values for state-based metrics (these don't accumulate)\n              trial_pending: userDayMetrics.trial_pending || 0,\n              subscription_active: userDayMetrics.subscription_active || 0,\n              estimated_revenue: userDayMetrics.estimated_revenue || 0,\n              // Add cumulative values with proper field names expected by getCumulativeValue functions\n              cumulative_trial_started: cumulativeValues.trial_started,\n              cumulative_trial_ended: cumulativeValues.trial_ended,\n              cumulative_trial_converted: cumulativeValues.trial_converted,\n              cumulative_trial_cancelled: cumulativeValues.trial_cancelled,\n              cumulative_initial_purchase: cumulativeValues.initial_purchase,\n              cumulative_subscription_cancelled: cumulativeValues.subscription_cancelled,\n              cumulative_revenue: cumulativeValues.revenue,\n              cumulative_refund: cumulativeValues.refund,\n              cumulative_refund_count: cumulativeValues.refund_count,\n              cumulative_revenue_net: cumulativeValues.revenue - cumulativeValues.refund\n            };\n          } else {\n            filteredDaily[date] = {\n              trial_started: 0,\n              trial_pending: 0,\n              trial_ended: 0,\n              trial_converted: 0,\n              trial_cancelled: 0,\n              initial_purchase: 0,\n              subscription_active: 0,\n              subscription_cancelled: 0,\n              revenue: 0,\n              refund: 0,\n              refund_count: 0,\n              estimated_revenue: 0,\n              revenue_net: 0\n            };\n\n            // For cumulative, maintain previous cumulative values (no change on days with no activity)\n            filteredCumulative[date] = {\n              // State-based metrics remain 0\n              trial_pending: 0,\n              subscription_active: 0,\n              estimated_revenue: 0,\n              // Cumulative values remain at previous levels\n              cumulative_trial_started: cumulativeValues.trial_started,\n              cumulative_trial_ended: cumulativeValues.trial_ended,\n              cumulative_trial_converted: cumulativeValues.trial_converted,\n              cumulative_trial_cancelled: cumulativeValues.trial_cancelled,\n              cumulative_initial_purchase: cumulativeValues.initial_purchase,\n              cumulative_subscription_cancelled: cumulativeValues.subscription_cancelled,\n              cumulative_revenue: cumulativeValues.revenue,\n              cumulative_refund: cumulativeValues.refund,\n              cumulative_refund_count: cumulativeValues.refund_count,\n              cumulative_revenue_net: cumulativeValues.revenue - cumulativeValues.refund\n            };\n          }\n        });\n      } else {\n        dates.forEach(date => {\n          filteredDaily[date] = {\n            trial_started: 0,\n            trial_pending: 0,\n            trial_ended: 0,\n            trial_converted: 0,\n            trial_cancelled: 0,\n            initial_purchase: 0,\n            subscription_active: 0,\n            subscription_cancelled: 0,\n            revenue: 0,\n            refund: 0,\n            refund_count: 0,\n            estimated_revenue: 0,\n            revenue_net: 0\n          };\n          filteredCumulative[date] = {\n            trial_pending: 0,\n            subscription_active: 0,\n            estimated_revenue: 0,\n            cumulative_trial_started: 0,\n            cumulative_trial_ended: 0,\n            cumulative_trial_converted: 0,\n            cumulative_trial_cancelled: 0,\n            cumulative_initial_purchase: 0,\n            cumulative_subscription_cancelled: 0,\n            cumulative_revenue: 0,\n            cumulative_refund: 0,\n            cumulative_refund_count: 0,\n            cumulative_revenue_net: 0\n          };\n        });\n      }\n    }\n    return {\n      dailyMetrics: filteredDaily,\n      cumulativeMetrics: filteredCumulative\n    };\n  }, [selectedUserId, selectedProductId, dailyMetrics, cumulativeMetrics, userDailyMetrics, dates]);\n\n  // NOW we can do early returns after all hooks are called\n  if (!hasValidData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-8\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500 dark:text-gray-400\",\n        children: \"No timeline data available. Run an analysis to see results.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 661,\n      columnNumber: 13\n    }, this);\n  }\n  const formatCurrency = value => {\n    if (value === null || value === undefined) return '$0';\n    const rounded = Math.round(Number(value));\n    return `$${rounded.toLocaleString()}`;\n  };\n  const formatNumber = value => {\n    if (value === null || value === undefined) return '0';\n    return Number(value).toLocaleString();\n  };\n\n  // Function to generate tooltip data for estimated revenue\n  const getEstimatedRevenueTooltipData = (date, value) => {\n    // CRITICAL: Only show tooltip for individual user view, NEVER for aggregate\n    if (!selectedUserId) {\n      return null;\n    }\n\n    // Add safety check for value parameter\n    const safeValue = typeof value === 'number' ? value : 0;\n    if (safeValue === 0) {\n      return null; // Don't show tooltip for $0 values\n    }\n    console.log(`[DEBUG] getEstimatedRevenueTooltipData called with:`, {\n      date,\n      originalValue: value,\n      safeValue,\n      valueType: typeof value,\n      selectedUserId,\n      selectedProductId\n    });\n\n    // SIMPLIFIED: Use pre-computed tooltip data from backend\n    // No more business logic calculations on frontend - just display what backend sends\n\n    // Get the user's daily metrics for this date\n    const userMetrics = userDailyMetrics[selectedUserId];\n    if (!userMetrics || !userMetrics[date]) {\n      console.warn(`[WARN] No user metrics found for user ${selectedUserId} on date ${date}`);\n      return null;\n    }\n    const dayMetrics = userMetrics[date];\n    const tooltipData = dayMetrics.tooltip_data;\n    console.log(`[DEBUG] Backend tooltip data for ${selectedUserId} on ${date}:`, {\n      hasTooltipData: !!tooltipData,\n      tooltipData: tooltipData,\n      dayMetrics: dayMetrics\n    });\n    if (!tooltipData) {\n      console.warn(`[WARN] No tooltip data found for user ${selectedUserId} on date ${date}`);\n      return null;\n    }\n\n    // Return the pre-computed tooltip data from backend\n    return {\n      value: safeValue,\n      breakdown: tooltipData.breakdown,\n      result: `$${safeValue.toFixed(2)}`\n    };\n  };\n\n  // Define all metrics with their categories and data extraction logic\n  const metrics = [\n  // Daily Absolute Values\n  {\n    key: 'daily_trial_started',\n    label: 'Trial Started',\n    category: 'daily_absolute',\n    categoryLabel: 'Daily Absolute Values',\n    getValue: date => {\n      var _filteredData$dailyMe;\n      return ((_filteredData$dailyMe = filteredData.dailyMetrics[date]) === null || _filteredData$dailyMe === void 0 ? void 0 : _filteredData$dailyMe.trial_started) || 0;\n    },\n    getCumulativeValue: date => {\n      var _filteredData$cumulat;\n      return ((_filteredData$cumulat = filteredData.cumulativeMetrics[date]) === null || _filteredData$cumulat === void 0 ? void 0 : _filteredData$cumulat.cumulative_trial_started) || 0;\n    },\n    format: formatNumber\n  }, {\n    key: 'daily_trial_pending',\n    label: 'Trial Pending',\n    category: 'daily_absolute',\n    getValue: date => {\n      var _filteredData$dailyMe2;\n      return ((_filteredData$dailyMe2 = filteredData.dailyMetrics[date]) === null || _filteredData$dailyMe2 === void 0 ? void 0 : _filteredData$dailyMe2.trial_pending) || 0;\n    },\n    // CRITICAL FIX: Trial pending is a state-based metric, cumulative should show same as daily\n    getCumulativeValue: date => {\n      var _filteredData$dailyMe3;\n      return ((_filteredData$dailyMe3 = filteredData.dailyMetrics[date]) === null || _filteredData$dailyMe3 === void 0 ? void 0 : _filteredData$dailyMe3.trial_pending) || 0;\n    },\n    format: formatNumber\n  }, {\n    key: 'daily_trial_ended',\n    label: 'Trial Ended',\n    category: 'daily_absolute',\n    getValue: date => {\n      var _filteredData$dailyMe4;\n      return ((_filteredData$dailyMe4 = filteredData.dailyMetrics[date]) === null || _filteredData$dailyMe4 === void 0 ? void 0 : _filteredData$dailyMe4.trial_ended) || 0;\n    },\n    getCumulativeValue: date => {\n      var _filteredData$cumulat2;\n      return ((_filteredData$cumulat2 = filteredData.cumulativeMetrics[date]) === null || _filteredData$cumulat2 === void 0 ? void 0 : _filteredData$cumulat2.cumulative_trial_ended) || 0;\n    },\n    format: formatNumber\n  }, {\n    key: 'daily_trial_cancelled',\n    label: 'Trial Cancelled',\n    category: 'daily_absolute',\n    getValue: date => {\n      var _filteredData$dailyMe5;\n      return ((_filteredData$dailyMe5 = filteredData.dailyMetrics[date]) === null || _filteredData$dailyMe5 === void 0 ? void 0 : _filteredData$dailyMe5.trial_cancelled) || 0;\n    },\n    getCumulativeValue: date => {\n      var _filteredData$cumulat3;\n      return ((_filteredData$cumulat3 = filteredData.cumulativeMetrics[date]) === null || _filteredData$cumulat3 === void 0 ? void 0 : _filteredData$cumulat3.cumulative_trial_cancelled) || 0;\n    },\n    format: formatNumber\n  }, {\n    key: 'daily_trial_converted',\n    label: 'Trial Converted',\n    category: 'daily_absolute',\n    getValue: date => {\n      var _filteredData$dailyMe6;\n      return ((_filteredData$dailyMe6 = filteredData.dailyMetrics[date]) === null || _filteredData$dailyMe6 === void 0 ? void 0 : _filteredData$dailyMe6.trial_converted) || 0;\n    },\n    getCumulativeValue: date => {\n      var _filteredData$cumulat4;\n      return ((_filteredData$cumulat4 = filteredData.cumulativeMetrics[date]) === null || _filteredData$cumulat4 === void 0 ? void 0 : _filteredData$cumulat4.cumulative_trial_converted) || 0;\n    },\n    format: formatNumber\n  }, {\n    key: 'daily_initial_purchase',\n    label: 'Initial Purchase',\n    category: 'daily_absolute',\n    getValue: date => {\n      var _filteredData$dailyMe7;\n      return ((_filteredData$dailyMe7 = filteredData.dailyMetrics[date]) === null || _filteredData$dailyMe7 === void 0 ? void 0 : _filteredData$dailyMe7.initial_purchase) || 0;\n    },\n    getCumulativeValue: date => {\n      var _filteredData$cumulat5;\n      return ((_filteredData$cumulat5 = filteredData.cumulativeMetrics[date]) === null || _filteredData$cumulat5 === void 0 ? void 0 : _filteredData$cumulat5.cumulative_initial_purchase) || 0;\n    },\n    format: formatNumber\n  }, {\n    key: 'daily_subscription_active',\n    label: 'Subscription Active',\n    category: 'daily_absolute',\n    getValue: date => {\n      var _filteredData$dailyMe8;\n      return ((_filteredData$dailyMe8 = filteredData.dailyMetrics[date]) === null || _filteredData$dailyMe8 === void 0 ? void 0 : _filteredData$dailyMe8.subscription_active) || 0;\n    },\n    // CRITICAL FIX: Subscription active is a state-based metric, cumulative should show same as daily\n    getCumulativeValue: date => {\n      var _filteredData$dailyMe9;\n      return ((_filteredData$dailyMe9 = filteredData.dailyMetrics[date]) === null || _filteredData$dailyMe9 === void 0 ? void 0 : _filteredData$dailyMe9.subscription_active) || 0;\n    },\n    format: formatNumber\n  }, {\n    key: 'daily_subscription_cancelled',\n    label: 'Subscription Cancelled',\n    category: 'daily_absolute',\n    getValue: date => {\n      var _filteredData$dailyMe0;\n      return ((_filteredData$dailyMe0 = filteredData.dailyMetrics[date]) === null || _filteredData$dailyMe0 === void 0 ? void 0 : _filteredData$dailyMe0.subscription_cancelled) || 0;\n    },\n    getCumulativeValue: date => {\n      var _filteredData$cumulat6;\n      return ((_filteredData$cumulat6 = filteredData.cumulativeMetrics[date]) === null || _filteredData$cumulat6 === void 0 ? void 0 : _filteredData$cumulat6.cumulative_subscription_cancelled) || 0;\n    },\n    format: formatNumber\n  }, {\n    key: 'daily_users',\n    label: 'Daily Users',\n    category: 'daily_absolute',\n    getValue: date => {\n      var _filteredData$dailyMe1;\n      return ((_filteredData$dailyMe1 = filteredData.dailyMetrics[date]) === null || _filteredData$dailyMe1 === void 0 ? void 0 : _filteredData$dailyMe1.daily_users) || 0;\n    },\n    getCumulativeValue: date => {\n      var _filteredData$dailyMe10;\n      return ((_filteredData$dailyMe10 = filteredData.dailyMetrics[date]) === null || _filteredData$dailyMe10 === void 0 ? void 0 : _filteredData$dailyMe10.cumulative_users) || 0;\n    },\n    format: formatNumber\n  }, {\n    key: 'daily_refund_count',\n    label: 'Refunds',\n    category: 'daily_absolute',\n    getValue: date => {\n      var _filteredData$dailyMe11;\n      return ((_filteredData$dailyMe11 = filteredData.dailyMetrics[date]) === null || _filteredData$dailyMe11 === void 0 ? void 0 : _filteredData$dailyMe11.refund_count) || 0;\n    },\n    getCumulativeValue: date => {\n      var _filteredData$cumulat7;\n      return ((_filteredData$cumulat7 = filteredData.cumulativeMetrics[date]) === null || _filteredData$cumulat7 === void 0 ? void 0 : _filteredData$cumulat7.cumulative_refund_count) || 0;\n    },\n    format: formatNumber\n  },\n  // Revenue Values\n  {\n    key: 'daily_revenue',\n    label: 'Revenue',\n    category: 'revenue',\n    categoryLabel: 'Revenue Values',\n    getValue: date => {\n      var _filteredData$dailyMe12;\n      return ((_filteredData$dailyMe12 = filteredData.dailyMetrics[date]) === null || _filteredData$dailyMe12 === void 0 ? void 0 : _filteredData$dailyMe12.revenue) || 0;\n    },\n    getCumulativeValue: date => {\n      var _filteredData$cumulat8;\n      return ((_filteredData$cumulat8 = filteredData.cumulativeMetrics[date]) === null || _filteredData$cumulat8 === void 0 ? void 0 : _filteredData$cumulat8.cumulative_revenue) || 0;\n    },\n    format: formatCurrency\n  }, {\n    key: 'daily_refund',\n    label: 'Refunds',\n    category: 'revenue',\n    getValue: date => {\n      var _filteredData$dailyMe13;\n      return ((_filteredData$dailyMe13 = filteredData.dailyMetrics[date]) === null || _filteredData$dailyMe13 === void 0 ? void 0 : _filteredData$dailyMe13.refund) || 0;\n    },\n    getCumulativeValue: date => {\n      var _filteredData$cumulat9;\n      return ((_filteredData$cumulat9 = filteredData.cumulativeMetrics[date]) === null || _filteredData$cumulat9 === void 0 ? void 0 : _filteredData$cumulat9.cumulative_refund) || 0;\n    },\n    format: formatCurrency\n  }, {\n    key: 'daily_revenue_net',\n    label: 'Net Revenue',\n    category: 'revenue',\n    getValue: date => {\n      var _filteredData$dailyMe14;\n      return ((_filteredData$dailyMe14 = filteredData.dailyMetrics[date]) === null || _filteredData$dailyMe14 === void 0 ? void 0 : _filteredData$dailyMe14.revenue_net) || 0;\n    },\n    getCumulativeValue: date => {\n      var _filteredData$cumulat0;\n      return ((_filteredData$cumulat0 = filteredData.cumulativeMetrics[date]) === null || _filteredData$cumulat0 === void 0 ? void 0 : _filteredData$cumulat0.cumulative_revenue_net) || 0;\n    },\n    format: formatCurrency\n  }, {\n    key: 'daily_estimated_revenue',\n    label: 'Estimated Revenue',\n    category: 'revenue',\n    isEstimatedRevenue: true,\n    getValue: date => {\n      var _filteredData$dailyMe15;\n      return ((_filteredData$dailyMe15 = filteredData.dailyMetrics[date]) === null || _filteredData$dailyMe15 === void 0 ? void 0 : _filteredData$dailyMe15.estimated_revenue) || 0;\n    },\n    // CRITICAL FIX: Estimated revenue is a state-based metric, cumulative should show same as daily\n    getCumulativeValue: date => {\n      var _filteredData$dailyMe16;\n      return ((_filteredData$dailyMe16 = filteredData.dailyMetrics[date]) === null || _filteredData$dailyMe16 === void 0 ? void 0 : _filteredData$dailyMe16.estimated_revenue) || 0;\n    },\n    format: formatCurrency,\n    getTooltipData: date => {\n      var _filteredData$dailyMe17, _filteredData$dailyMe18;\n      const value = showCumulative ? ((_filteredData$dailyMe17 = filteredData.dailyMetrics[date]) === null || _filteredData$dailyMe17 === void 0 ? void 0 : _filteredData$dailyMe17.estimated_revenue) || 0 // Same as daily for state-based\n      : ((_filteredData$dailyMe18 = filteredData.dailyMetrics[date]) === null || _filteredData$dailyMe18 === void 0 ? void 0 : _filteredData$dailyMe18.estimated_revenue) || 0;\n      return getEstimatedRevenueTooltipData(date, value);\n    }\n  }];\n\n  // Group metrics by category\n  const groupedMetrics = metrics.reduce((acc, metric) => {\n    if (!acc[metric.category]) {\n      acc[metric.category] = {\n        label: metric.categoryLabel || metric.category,\n        metrics: []\n      };\n    }\n    acc[metric.category].metrics.push(metric);\n    return acc;\n  }, {});\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8 bg-white dark:bg-gray-700 p-6 rounded-lg shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold text-gray-800 dark:text-white\",\n          children: \"Daily Event & Revenue Timeline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 881,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowCumulative(!showCumulative),\n            className: `px-3 py-1 text-sm rounded-full ${showCumulative ? 'bg-blue-500 text-white' : 'bg-gray-200 dark:bg-gray-600 text-gray-700 dark:text-white'}`,\n            children: showCumulative ? 'Show Daily' : 'Show Cumulative'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 883,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 882,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 880,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"min-w-full text-sm border dark:border-gray-600\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"bg-gray-50 dark:bg-gray-700\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"p-2 border-b dark:border-gray-600 text-left text-gray-700 dark:text-white sticky left-0 bg-gray-50 dark:bg-gray-700 z-10 min-w-[200px]\",\n                children: \"Metric\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 901,\n                columnNumber: 33\n              }, this), dates.map(date => /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"p-2 border-b dark:border-gray-600 text-center text-gray-700 dark:text-white whitespace-nowrap min-w-[80px]\",\n                children: date\n              }, date, false, {\n                fileName: _jsxFileName,\n                lineNumber: 905,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 900,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 899,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            className: \"bg-white dark:bg-gray-800\",\n            children: Object.entries(groupedMetrics).map(([categoryKey, category]) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"bg-gray-100 dark:bg-gray-600\",\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: dates.length + 1,\n                  className: \"p-2 font-semibold text-gray-800 dark:text-white border-b dark:border-gray-600\",\n                  children: category.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 916,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 915,\n                columnNumber: 37\n              }, this), category.metrics.map(metric => /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"hover:bg-gray-50 dark:hover:bg-gray-700\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"p-2 border-b dark:border-gray-600 font-medium text-gray-700 dark:text-white sticky left-0 bg-white dark:bg-gray-800 z-10\",\n                  children: metric.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 923,\n                  columnNumber: 45\n                }, this), dates.map(date => {\n                  const value = showCumulative ? metric.getCumulativeValue(date) : metric.getValue(date);\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: `p-2 border-b dark:border-gray-600 text-center text-gray-700 dark:text-white ${metric.isEstimatedRevenue && selectedUserId ? 'cursor-help hover:bg-yellow-50 dark:hover:bg-yellow-900/20 relative' : ''}`,\n                    onMouseEnter: metric.isEstimatedRevenue && selectedUserId ? e => {\n                      // Only show tooltip for single user views\n                      if (!selectedUserId) return;\n\n                      // Clear any existing timeout\n                      if (tooltipTimeoutRef.current) {\n                        clearTimeout(tooltipTimeoutRef.current);\n                        tooltipTimeoutRef.current = null;\n                      }\n\n                      // Small delay to prevent tooltip from appearing on quick mouse movements\n                      const newTimeout = setTimeout(() => {\n                        const rect = e.target.getBoundingClientRect();\n                        const tooltipData = getEstimatedRevenueTooltipData(date, value);\n                        if (tooltipData) {\n                          setTooltipData(tooltipData);\n\n                          // Smart positioning: check available space\n                          const tooltipWidth = 480; // Estimated tooltip width\n                          const tooltipHeight = 480; // Estimated tooltip height\n                          const spaceOnRight = window.innerWidth - rect.right;\n                          const spaceOnLeft = rect.left;\n                          let xPosition, yPosition;\n\n                          // Choose horizontal position based on available space\n                          if (spaceOnRight >= tooltipWidth + 20) {\n                            // Enough space on the right\n                            xPosition = rect.right + 10;\n                          } else if (spaceOnLeft >= tooltipWidth + 20) {\n                            // Not enough space on right, but enough on left\n                            xPosition = rect.left - tooltipWidth - 10;\n                          } else {\n                            // Not enough space on either side, center it\n                            xPosition = Math.max(10, (window.innerWidth - tooltipWidth) / 2);\n                          }\n\n                          // Vertical position: position so BOTTOM of tooltip aligns with cell center\n                          const cellCenterY = rect.top + rect.height / 2;\n                          yPosition = Math.max(10, cellCenterY - tooltipHeight); // Subtract tooltip height\n\n                          // Ensure tooltip doesn't go below screen\n                          yPosition = Math.min(yPosition, window.innerHeight - tooltipHeight - 10);\n                          setTooltipPosition({\n                            x: xPosition,\n                            y: yPosition\n                          });\n                        }\n                      }, 150); // Shorter delay for better responsiveness\n\n                      tooltipTimeoutRef.current = newTimeout;\n                    } : undefined,\n                    onMouseLeave: metric.isEstimatedRevenue && selectedUserId ? () => {\n                      // Only handle mouse leave for single user views\n                      if (!selectedUserId) return;\n\n                      // Clear the show timeout if mouse leaves before tooltip appears\n                      if (tooltipTimeoutRef.current) {\n                        clearTimeout(tooltipTimeoutRef.current);\n                        tooltipTimeoutRef.current = null;\n                      }\n\n                      // Set a timeout to hide the tooltip, allowing time to move to tooltip\n                      const hideTimeout = setTimeout(() => {\n                        setTooltipData(null);\n                      }, 100); // Shorter delay for quicker hiding\n\n                      tooltipTimeoutRef.current = hideTimeout;\n                    } : undefined,\n                    children: metric.format(value)\n                  }, date, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 931,\n                    columnNumber: 53\n                  }, this);\n                })]\n              }, metric.key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 922,\n                columnNumber: 41\n              }, this))]\n            }, categoryKey, true, {\n              fileName: _jsxFileName,\n              lineNumber: 913,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 911,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 898,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 897,\n        columnNumber: 17\n      }, this), dates.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-8\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500 dark:text-gray-400\",\n          children: \"No timeline data available. Run an analysis to see results.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1022,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1021,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 879,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EstimatedRevenueTooltip, {\n      data: tooltipData,\n      position: tooltipPosition,\n      onClose: () => setTooltipData(null),\n      selectedUserId: selectedUserId,\n      selectedProductId: selectedProductId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1030,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s2(EventTimelineTable, \"VTGKDCMxCeTVQGf1v6LIOhpw4ss=\");\n_c2 = EventTimelineTable;\nexport default EventTimelineTable;\nvar _c, _c2;\n$RefreshReg$(_c, \"EstimatedRevenueTooltip\");\n$RefreshReg$(_c2, \"EventTimelineTable\");","map":{"version":3,"names":["React","useState","useMemo","jsxDEV","_jsxDEV","Fragment","_Fragment","EstimatedRevenueTooltip","data","position","onClose","selectedUserId","selectedProductId","_s","isHovered","setIsHovered","closeTimeoutRef","useRef","safeValue","value","safeBreakdown","breakdown","safeComponents","components","safeFormula","formula","safeCalculation","calculation","handleMouseEnter","current","clearTimeout","handleMouseLeave","setTimeout","className","style","left","x","top","y","pointerEvents","onMouseEnter","onMouseLeave","children","toFixed","fileName","_jsxFileName","lineNumber","columnNumber","onClick","trialConverted","trial_converted","initialPurchase","initial_purchase","showTrialRatio","actual_revenue","showInitialRatio","revenue","estimatedRefunds","estimated_refunds","refundRate","componentsOrder","components_order","Array","isArray","map","key","undefined","toLowerCase","includes","toString","filter","Boolean","Object","entries","length","keys","_c","EventTimelineTable","_s2","_data$data","_data$data2","_data$data3","_data$data4","_data$data4$structure","_data$data5","_data$data6","_data$data7","_data$data8","_data$data8$structure","showCumulative","setShowCumulative","tooltipData","setTooltipData","tooltipPosition","setTooltipPosition","tooltipTimeoutRef","useEffect","console","log","hasData","hasDataData","hasDailyMetrics","daily_metrics","hasTimelineData","timeline_data","hasStructuredFormat","structured_format","hasTimelineAnalysis","timeline_analysis","dataKeys","dataDataKeys","timelineData","dates","dailyMetrics","cumulativeMetrics","userTimelines","userDailyMetrics","hasValidData","_data$data$structured","cumulative_metrics","user_timelines","user_daily_metrics","event_rows","forEach","date","metric","availableUsers","availableProducts","users","Set","products","userId","add","_userTimeline$summary","userTimeline","events","event","product_id","summary","product_summaries","productId","values","dayData","_dayData$estimated_re","estimated_revenue_breakdown","user_breakdowns","userBreakdown","product_breakdowns","from","sort","filteredData","filteredDaily","filteredCumulative","userMetrics","cumulativeValues","trial_started","trial_ended","trial_cancelled","subscription_cancelled","refund","refund_count","userDayMetrics","revenue_net","trial_pending","subscription_active","estimated_revenue","cumulative_trial_started","cumulative_trial_ended","cumulative_trial_converted","cumulative_trial_cancelled","cumulative_initial_purchase","cumulative_subscription_cancelled","cumulative_revenue","cumulative_refund","cumulative_refund_count","cumulative_revenue_net","formatCurrency","rounded","Math","round","Number","toLocaleString","formatNumber","getEstimatedRevenueTooltipData","originalValue","valueType","warn","dayMetrics","tooltip_data","hasTooltipData","result","metrics","label","category","categoryLabel","getValue","_filteredData$dailyMe","getCumulativeValue","_filteredData$cumulat","format","_filteredData$dailyMe2","_filteredData$dailyMe3","_filteredData$dailyMe4","_filteredData$cumulat2","_filteredData$dailyMe5","_filteredData$cumulat3","_filteredData$dailyMe6","_filteredData$cumulat4","_filteredData$dailyMe7","_filteredData$cumulat5","_filteredData$dailyMe8","_filteredData$dailyMe9","_filteredData$dailyMe0","_filteredData$cumulat6","_filteredData$dailyMe1","daily_users","_filteredData$dailyMe10","cumulative_users","_filteredData$dailyMe11","_filteredData$cumulat7","_filteredData$dailyMe12","_filteredData$cumulat8","_filteredData$dailyMe13","_filteredData$cumulat9","_filteredData$dailyMe14","_filteredData$cumulat0","isEstimatedRevenue","_filteredData$dailyMe15","_filteredData$dailyMe16","getTooltipData","_filteredData$dailyMe17","_filteredData$dailyMe18","groupedMetrics","reduce","acc","push","categoryKey","colSpan","e","newTimeout","rect","target","getBoundingClientRect","tooltipWidth","tooltipHeight","spaceOnRight","window","innerWidth","right","spaceOnLeft","xPosition","yPosition","max","cellCenterY","height","min","innerHeight","hideTimeout","_c2","$RefreshReg$"],"sources":["/Users/joshuakaufman/untitled folder 3/orchestrator/dashboard/client/src/cohort-pipeline/components/EventTimelineTable.js"],"sourcesContent":["import React, { useState, useMemo } from 'react';\n\n// Estimated Revenue Tooltip Component\nconst EstimatedRevenueTooltip = ({ data, position, onClose, selectedUserId, selectedProductId }) => {\n    const [isHovered, setIsHovered] = React.useState(false);\n    const closeTimeoutRef = React.useRef(null);\n    \n    if (!data) return null;\n    \n    // Add safety checks for data structure\n    const safeValue = data.value || 0;\n    const safeBreakdown = data.breakdown || {};\n    const safeComponents = safeBreakdown.components || {};\n    const safeFormula = safeBreakdown.formula || 'No formula available';\n    const safeCalculation = safeBreakdown.calculation || 'No calculation available';\n    \n    const handleMouseEnter = () => {\n        setIsHovered(true);\n        // Clear any pending close timeout\n        if (closeTimeoutRef.current) {\n            clearTimeout(closeTimeoutRef.current);\n            closeTimeoutRef.current = null;\n        }\n    };\n    \n    const handleMouseLeave = () => {\n        setIsHovered(false);\n        // Set a timeout to close the tooltip\n        closeTimeoutRef.current = setTimeout(() => {\n            onClose();\n        }, 300); // Longer delay to prevent accidental closing\n    };\n    \n    return (\n        <div \n            className=\"fixed z-50 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-600 rounded-lg shadow-lg p-4 max-w-md pointer-events-auto\"\n            style={{\n                // Use the position calculated in the mouse event handler directly\n                left: position.x,\n                top: position.y,\n                pointerEvents: 'auto'\n            }}\n            onMouseEnter={handleMouseEnter}\n            onMouseLeave={handleMouseLeave}\n        >\n            <div className=\"flex justify-between items-start mb-3\">\n                <h4 className=\"font-semibold text-gray-900 dark:text-white\">\n                    Estimated Revenue: ${safeValue.toFixed(2)}\n                </h4>\n                <button \n                    onClick={onClose}\n                    className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 ml-2\"\n                >\n                    ×\n                </button>\n            </div>\n            \n            <div className=\"space-y-3\">\n                {/* NEW: Refund Rate Ratios - Show prominently at the top */}\n                {(() => {\n                    const trialConverted = safeBreakdown.trial_converted || {};\n                    const initialPurchase = safeBreakdown.initial_purchase || {};\n                    \n                    const showTrialRatio = trialConverted.actual_revenue > 0;\n                    const showInitialRatio = initialPurchase.actual_revenue > 0;\n                    \n                    if (!showTrialRatio && !showInitialRatio) return null;\n                    \n                    return (\n                        <div className=\"bg-blue-50 dark:bg-blue-900 p-3 rounded-lg border border-blue-200 dark:border-blue-700\">\n                            <div className=\"text-sm font-medium text-blue-800 dark:text-blue-200 mb-2\">\n                                🎯 Refund Rate Analysis\n                            </div>\n                            \n                            {showTrialRatio && (\n                                <div className=\"mb-2\">\n                                    <div className=\"text-xs font-medium text-blue-700 dark:text-blue-300\">\n                                        Trial Conversion Refund Rate:\n                                    </div>\n                                    <div className=\"text-sm font-bold text-blue-900 dark:text-blue-100\">\n                                        {(() => {\n                                            const revenue = trialConverted.actual_revenue || 0;\n                                            const estimatedRefunds = trialConverted.estimated_refunds || 0;\n                                            const refundRate = revenue > 0 ? (estimatedRefunds / revenue) * 100 : 0;\n                                            return `${estimatedRefunds.toFixed(2)} / ${revenue.toFixed(2)} = ${refundRate.toFixed(1)}%`;\n                                        })()}\n                                    </div>\n                                    <div className=\"text-xs text-blue-600 dark:text-blue-400\">\n                                        ${(trialConverted.estimated_refunds || 0).toFixed(2)} estimated refunds on ${(trialConverted.actual_revenue || 0).toFixed(2)} revenue\n                                    </div>\n                                </div>\n                            )}\n                            \n                            {showInitialRatio && (\n                                <div>\n                                    <div className=\"text-xs font-medium text-blue-700 dark:text-blue-300\">\n                                        Initial Purchase Refund Rate:\n                                    </div>\n                                    <div className=\"text-sm font-bold text-blue-900 dark:text-blue-100\">\n                                        {(() => {\n                                            const revenue = initialPurchase.actual_revenue || 0;\n                                            const estimatedRefunds = initialPurchase.estimated_refunds || 0;\n                                            const refundRate = revenue > 0 ? (estimatedRefunds / revenue) * 100 : 0;\n                                            return `${estimatedRefunds.toFixed(2)} / ${revenue.toFixed(2)} = ${refundRate.toFixed(1)}%`;\n                                        })()}\n                                    </div>\n                                    <div className=\"text-xs text-blue-600 dark:text-blue-400\">\n                                        ${(initialPurchase.estimated_refunds || 0).toFixed(2)} estimated refunds on ${(initialPurchase.actual_revenue || 0).toFixed(2)} revenue\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                    );\n                })()}\n                \n                {/* Formula */}\n                <div>\n                    <div className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                        Formula:\n                    </div>\n                    <div className=\"text-xs text-gray-600 dark:text-gray-400 font-mono bg-gray-50 dark:bg-gray-700 p-2 rounded\">\n                        {safeFormula}\n                    </div>\n                </div>\n                \n                {/* Calculation */}\n                <div>\n                    <div className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                        Calculation:\n                    </div>\n                    <div className=\"text-xs text-gray-600 dark:text-gray-400 font-mono bg-gray-50 dark:bg-gray-700 p-2 rounded\">\n                        {safeCalculation}\n                    </div>\n                </div>\n                \n                {/* Components */}\n                <div>\n                    <div className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                        Components:\n                    </div>\n                    <div className=\"space-y-1\">\n                        {(() => {\n                            // Use explicit ordering from backend if available\n                            const componentsOrder = safeBreakdown.components_order;\n                            const components = safeComponents;\n                            \n                            if (componentsOrder && Array.isArray(componentsOrder)) {\n                                // Use backend's explicit ordering\n                                return componentsOrder.map((key) => {\n                                    const value = components[key];\n                                    if (value === undefined) return null;\n                                    \n                                    return (\n                                        <div key={key} className=\"flex justify-between text-xs\">\n                                            <span className=\"text-gray-600 dark:text-gray-400\">{key}:</span>\n                                            <span className=\"text-gray-900 dark:text-white font-medium\">\n                                                {typeof value === 'string' ? value : \n                                                 typeof value === 'number' ? (key.toLowerCase().includes('revenue') || key.toLowerCase().includes('arpu') ? \n                                                                              `$${value.toFixed(2)}` : value.toString()) : \n                                                 value || 'N/A'}\n                                            </span>\n                                        </div>\n                                    );\n                                }).filter(Boolean);\n                            } else {\n                                // Fallback to object iteration (original behavior)\n                                return Object.entries(components).map(([key, value]) => (\n                                    <div key={key} className=\"flex justify-between text-xs\">\n                                        <span className=\"text-gray-600 dark:text-gray-400\">{key}:</span>\n                                        <span className=\"text-gray-900 dark:text-white font-medium\">\n                                            {typeof value === 'string' ? value : \n                                             typeof value === 'number' ? (key.toLowerCase().includes('revenue') || key.toLowerCase().includes('arpu') ? \n                                                                          `$${value.toFixed(2)}` : value.toString()) : \n                                             value || 'N/A'}\n                                        </span>\n                                    </div>\n                                ));\n                            }\n                        })()}\n                        \n                        {(() => {\n                            const componentsOrder = safeBreakdown.components_order;\n                            const components = safeComponents;\n                            \n                            // Show fallback message if no components\n                            if ((!componentsOrder || !Array.isArray(componentsOrder) || componentsOrder.length === 0) && \n                                Object.keys(components).length === 0) {\n                                return (\n                                    <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n                                        No component data available\n                                    </div>\n                                );\n                            }\n                            return null;\n                        })()}\n                    </div>\n                </div>\n                \n                {/* Context for single user */}\n                {(selectedUserId || selectedProductId) && (\n                    <div className=\"mt-3 pt-3 border-t border-gray-200 dark:border-gray-600\">\n                        <div className=\"text-xs text-blue-600 dark:text-blue-400\">\n                            <strong>Note:</strong> This calculation is specific to the filtered view\n                            {selectedUserId && ` for user ${selectedUserId}`}\n                            {selectedProductId && ` for product ${selectedProductId}`}.\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nconst EventTimelineTable = ({ data, selectedUserId = '', selectedProductId = '' }) => {\n    const [showCumulative, setShowCumulative] = useState(false);\n    \n    // Add state for tooltip with debounce\n    const [tooltipData, setTooltipData] = useState(null);\n    const [tooltipPosition, setTooltipPosition] = useState({ x: 0, y: 0 });\n    const tooltipTimeoutRef = React.useRef(null);\n    \n    // FILTER VARIABLES: Now received as props from parent Stage3RevenueResults\n    // These are passed from the parent component that handles user selection\n    // selectedUserId and selectedProductId are now props instead of hardcoded empty strings\n\n    // Cleanup tooltip timeout on unmount\n    React.useEffect(() => {\n        return () => {\n            if (tooltipTimeoutRef.current) {\n                clearTimeout(tooltipTimeoutRef.current);\n            }\n        };\n    }, []);\n\n    // Debug logging\n    console.log('[DEBUG] EventTimelineTable received data:', data);\n    console.log('[DEBUG] Data structure check:', {\n        hasData: !!data,\n        hasDataData: !!data?.data,\n        hasDailyMetrics: !!data?.data?.daily_metrics,\n        hasTimelineData: !!data?.data?.timeline_data,\n        hasStructuredFormat: !!data?.data?.structured_format,\n        hasTimelineAnalysis: !!data?.data?.structured_format?.timeline_analysis,\n        dataKeys: data ? Object.keys(data) : [],\n        dataDataKeys: data?.data ? Object.keys(data.data) : []\n    });\n    \n    // NEW: Additional debugging for data.data structure\n    console.log('[DEBUG] Raw data.data structure:', data?.data);\n    console.log('[DEBUG] Available keys in data.data:', data?.data ? Object.keys(data.data) : []);\n    if (data?.data?.daily_metrics) {\n        console.log('[DEBUG] daily_metrics type:', typeof data.data.daily_metrics);\n        console.log('[DEBUG] daily_metrics sample:', data.data.daily_metrics);\n    }\n\n    // Handle multiple data formats: unified pipeline, legacy API, and direct timeline API\n    let timelineData;\n    let dates = [];\n    let dailyMetrics = {};\n    let cumulativeMetrics = {};\n    let userTimelines = {};\n    let userDailyMetrics = {};\n    \n    // Check if we have valid data first, but don't return early yet\n    const hasValidData = !!(data?.data?.daily_metrics || data?.data?.timeline_data || data?.data?.structured_format?.timeline_analysis || data?.data);\n    \n    if (hasValidData) {\n        if (data.data.structured_format?.timeline_analysis) {\n            // Unified pipeline format: timeline data is in structured_format.timeline_analysis\n            timelineData = data.data.structured_format.timeline_analysis;\n            dates = timelineData.dates || [];\n            dailyMetrics = timelineData.daily_metrics || {};\n            cumulativeMetrics = timelineData.cumulative_metrics || {};\n            userTimelines = timelineData.user_timelines || {};\n            userDailyMetrics = timelineData.user_daily_metrics || {};\n            console.log('[DEBUG] Using unified pipeline format. Timeline data:', timelineData);\n            console.log('[DEBUG] Dates:', dates);\n            console.log('[DEBUG] Daily metrics keys:', Object.keys(dailyMetrics));\n            console.log('[DEBUG] User timelines available:', Object.keys(userTimelines).length);\n            console.log('[DEBUG] User daily metrics available:', Object.keys(userDailyMetrics).length);\n        } else if (data.data.timeline_data && data.data.timeline_data.daily_metrics) {\n            // Direct timeline API format: timeline_data contains the TimelineData structure\n            timelineData = data.data.timeline_data;\n            dates = timelineData.dates || [];\n            dailyMetrics = timelineData.daily_metrics || {};\n            cumulativeMetrics = timelineData.cumulative_metrics || {};\n            userTimelines = timelineData.user_timelines || {};\n            userDailyMetrics = timelineData.user_daily_metrics || {};\n        } else if (data.data.daily_metrics && typeof data.data.daily_metrics === 'object' && data.data.daily_metrics.dates) {\n            // Legacy format: daily_metrics contains the entire legacy result\n            timelineData = data.data.daily_metrics;\n            dates = timelineData.dates || [];\n            // Convert legacy format to expected structure\n            if (timelineData.event_rows) {\n                // Transform legacy event_rows format to daily_metrics format\n                dates.forEach(date => {\n                    dailyMetrics[date] = {};\n                    Object.keys(timelineData.event_rows).forEach(metric => {\n                        dailyMetrics[date][metric] = timelineData.event_rows[metric][date] || 0;\n                    });\n                });\n            }\n            // Legacy format doesn't have user daily metrics\n            userDailyMetrics = {};\n        } else if (data.data.daily_metrics) {\n            // New format: daily_metrics is a direct mapping\n            timelineData = data.data;\n            dates = timelineData.dates || [];\n            dailyMetrics = timelineData.daily_metrics || {};\n            cumulativeMetrics = timelineData.cumulative_metrics || {};\n            userTimelines = timelineData.user_timelines || {};\n            userDailyMetrics = timelineData.user_daily_metrics || {};\n        }\n    }\n\n    // Extract available users and products for filtering\n    const { availableUsers, availableProducts } = useMemo(() => {\n        const users = new Set();\n        const products = new Set();\n        \n        // PRIORITY 1: Extract from user daily metrics (most accurate)\n        Object.keys(userDailyMetrics).forEach(userId => {\n            users.add(userId);\n        });\n        \n        // PRIORITY 2: Extract from user timelines if available\n        Object.keys(userTimelines).forEach(userId => {\n            users.add(userId);\n            const userTimeline = userTimelines[userId];\n            if (userTimeline.events) {\n                userTimeline.events.forEach(event => {\n                    if (event.product_id) {\n                        products.add(event.product_id);\n                    }\n                });\n            }\n            if (userTimeline.summary?.product_summaries) {\n                Object.keys(userTimeline.summary.product_summaries).forEach(productId => {\n                    products.add(productId);\n                });\n            }\n        });\n        \n        // PRIORITY 3: Extract from daily metrics breakdown if available\n        Object.values(dailyMetrics).forEach(dayData => {\n            if (dayData.estimated_revenue_breakdown?.user_breakdowns) {\n                Object.keys(dayData.estimated_revenue_breakdown.user_breakdowns).forEach(userId => {\n                    users.add(userId);\n                    const userBreakdown = dayData.estimated_revenue_breakdown.user_breakdowns[userId];\n                    if (userBreakdown.product_breakdowns) {\n                        Object.keys(userBreakdown.product_breakdowns).forEach(productId => {\n                            products.add(productId);\n                        });\n                    }\n                });\n            }\n        });\n        \n        return {\n            availableUsers: Array.from(users).sort(),\n            availableProducts: Array.from(products).sort()\n        };\n    }, [userDailyMetrics, userTimelines, dailyMetrics]);\n\n    // Filter data based on selected user/product\n    const filteredData = useMemo(() => {\n        if (!selectedUserId && !selectedProductId) {\n            return { dailyMetrics, cumulativeMetrics };\n        }\n\n        // CRITICAL: Use backend's pre-calculated user daily metrics directly\n        // No business logic recalculation in frontend - pure display layer\n        \n        const filteredDaily = {};\n        const filteredCumulative = {};\n\n        if (selectedUserId && !selectedProductId) {\n            // Filter by user only - use backend's user daily metrics directly\n            const userMetrics = userDailyMetrics[selectedUserId];\n            \n            if (userMetrics) {\n                // CRITICAL FIX: Calculate cumulative values for single user view\n                // Backend provides daily user metrics, but we need to calculate cumulative on frontend\n                let cumulativeValues = {\n                    trial_started: 0,\n                    trial_ended: 0,\n                    trial_converted: 0,\n                    trial_cancelled: 0,\n                    initial_purchase: 0,\n                    subscription_cancelled: 0,\n                    revenue: 0,\n                    refund: 0,\n                    refund_count: 0\n                };\n                \n                dates.forEach(date => {\n                    const userDayMetrics = userMetrics[date];\n                    if (userDayMetrics) {\n                        // Use backend's pre-calculated daily metrics directly\n                        filteredDaily[date] = { \n                            ...userDayMetrics,\n                            // CRITICAL FIX: Calculate revenue_net since backend doesn't provide it for individual users\n                            revenue_net: (userDayMetrics.revenue || 0) - (userDayMetrics.refund || 0)\n                        };\n                        \n                        // Calculate cumulative values by summing daily values\n                        cumulativeValues.trial_started += userDayMetrics.trial_started || 0;\n                        cumulativeValues.trial_ended += userDayMetrics.trial_ended || 0;\n                        cumulativeValues.trial_converted += userDayMetrics.trial_converted || 0;\n                        cumulativeValues.trial_cancelled += userDayMetrics.trial_cancelled || 0;\n                        cumulativeValues.initial_purchase += userDayMetrics.initial_purchase || 0;\n                        cumulativeValues.subscription_cancelled += userDayMetrics.subscription_cancelled || 0;\n                        cumulativeValues.revenue += userDayMetrics.revenue || 0;\n                        cumulativeValues.refund += userDayMetrics.refund || 0;\n                        cumulativeValues.refund_count += userDayMetrics.refund_count || 0;\n                        \n                        // Create cumulative metrics with proper field names\n                        filteredCumulative[date] = {\n                            // Copy daily values for state-based metrics (these don't accumulate)\n                            trial_pending: userDayMetrics.trial_pending || 0,\n                            subscription_active: userDayMetrics.subscription_active || 0,\n                            estimated_revenue: userDayMetrics.estimated_revenue || 0,\n                            \n                            // Add cumulative values with proper field names expected by getCumulativeValue functions\n                            cumulative_trial_started: cumulativeValues.trial_started,\n                            cumulative_trial_ended: cumulativeValues.trial_ended,\n                            cumulative_trial_converted: cumulativeValues.trial_converted,\n                            cumulative_trial_cancelled: cumulativeValues.trial_cancelled,\n                            cumulative_initial_purchase: cumulativeValues.initial_purchase,\n                            cumulative_subscription_cancelled: cumulativeValues.subscription_cancelled,\n                            cumulative_revenue: cumulativeValues.revenue,\n                            cumulative_refund: cumulativeValues.refund,\n                            cumulative_refund_count: cumulativeValues.refund_count,\n                            cumulative_revenue_net: cumulativeValues.revenue - cumulativeValues.refund\n                        };\n                    } else {\n                        // No data for this user on this date\n                        filteredDaily[date] = {\n                            trial_started: 0,\n                            trial_pending: 0,\n                            trial_ended: 0,\n                            trial_converted: 0,\n                            trial_cancelled: 0,\n                            initial_purchase: 0,\n                            subscription_active: 0,\n                            subscription_cancelled: 0,\n                            revenue: 0,\n                            refund: 0,\n                            refund_count: 0,\n                            estimated_revenue: 0,\n                            revenue_net: 0\n                        };\n                        \n                        // For cumulative, maintain previous cumulative values (no change on days with no activity)\n                        filteredCumulative[date] = {\n                            // State-based metrics remain 0\n                            trial_pending: 0,\n                            subscription_active: 0,\n                            estimated_revenue: 0,\n                            \n                            // Cumulative values remain at previous levels\n                            cumulative_trial_started: cumulativeValues.trial_started,\n                            cumulative_trial_ended: cumulativeValues.trial_ended,\n                            cumulative_trial_converted: cumulativeValues.trial_converted,\n                            cumulative_trial_cancelled: cumulativeValues.trial_cancelled,\n                            cumulative_initial_purchase: cumulativeValues.initial_purchase,\n                            cumulative_subscription_cancelled: cumulativeValues.subscription_cancelled,\n                            cumulative_revenue: cumulativeValues.revenue,\n                            cumulative_refund: cumulativeValues.refund,\n                            cumulative_refund_count: cumulativeValues.refund_count,\n                            cumulative_revenue_net: cumulativeValues.revenue - cumulativeValues.refund\n                        };\n                    }\n                });\n            } else {\n                // User not found in user daily metrics\n                dates.forEach(date => {\n                    filteredDaily[date] = {\n                        trial_started: 0,\n                        trial_pending: 0,\n                        trial_ended: 0,\n                        trial_converted: 0,\n                        trial_cancelled: 0,\n                        initial_purchase: 0,\n                        subscription_active: 0,\n                        subscription_cancelled: 0,\n                        revenue: 0,\n                        refund: 0,\n                        refund_count: 0,\n                        estimated_revenue: 0,\n                        revenue_net: 0\n                    };\n                    \n                    filteredCumulative[date] = {\n                        trial_pending: 0,\n                        subscription_active: 0,\n                        estimated_revenue: 0,\n                        cumulative_trial_started: 0,\n                        cumulative_trial_ended: 0,\n                        cumulative_trial_converted: 0,\n                        cumulative_trial_cancelled: 0,\n                        cumulative_initial_purchase: 0,\n                        cumulative_subscription_cancelled: 0,\n                        cumulative_revenue: 0,\n                        cumulative_refund: 0,\n                        cumulative_refund_count: 0,\n                        cumulative_revenue_net: 0\n                    };\n                });\n            }\n        } else if (selectedProductId && !selectedUserId) {\n            // Filter by product only - aggregate all users for this product\n            // TODO: Backend should provide product-specific aggregations directly\n            // For now, show original aggregate data with a note\n            dates.forEach(date => {\n                filteredDaily[date] = { ...dailyMetrics[date] };\n                filteredCumulative[date] = { ...cumulativeMetrics[date] };\n            });\n        } else if (selectedUserId && selectedProductId) {\n            // Filter by both user and product\n            // TODO: Backend should provide user-product specific metrics\n            // For now, use user metrics (which aggregate across all products for that user)\n            const userMetrics = userDailyMetrics[selectedUserId];\n            \n            if (userMetrics) {\n                // CRITICAL FIX: Calculate cumulative values for single user view (same logic as user-only)\n                let cumulativeValues = {\n                    trial_started: 0,\n                    trial_ended: 0,\n                    trial_converted: 0,\n                    trial_cancelled: 0,\n                    initial_purchase: 0,\n                    subscription_cancelled: 0,\n                    revenue: 0,\n                    refund: 0,\n                    refund_count: 0\n                };\n                \n                dates.forEach(date => {\n                    const userDayMetrics = userMetrics[date];\n                    if (userDayMetrics) {\n                        // Use backend's pre-calculated metrics directly\n                        // Note: This shows all products for the user, not just the selected product\n                        filteredDaily[date] = { \n                            ...userDayMetrics,\n                            // CRITICAL FIX: Calculate revenue_net since backend doesn't provide it for individual users\n                            revenue_net: (userDayMetrics.revenue || 0) - (userDayMetrics.refund || 0)\n                        };\n                        \n                        // Calculate cumulative values by summing daily values\n                        cumulativeValues.trial_started += userDayMetrics.trial_started || 0;\n                        cumulativeValues.trial_ended += userDayMetrics.trial_ended || 0;\n                        cumulativeValues.trial_converted += userDayMetrics.trial_converted || 0;\n                        cumulativeValues.trial_cancelled += userDayMetrics.trial_cancelled || 0;\n                        cumulativeValues.initial_purchase += userDayMetrics.initial_purchase || 0;\n                        cumulativeValues.subscription_cancelled += userDayMetrics.subscription_cancelled || 0;\n                        cumulativeValues.revenue += userDayMetrics.revenue || 0;\n                        cumulativeValues.refund += userDayMetrics.refund || 0;\n                        cumulativeValues.refund_count += userDayMetrics.refund_count || 0;\n                        \n                        // Create cumulative metrics with proper field names\n                        filteredCumulative[date] = {\n                            // Copy daily values for state-based metrics (these don't accumulate)\n                            trial_pending: userDayMetrics.trial_pending || 0,\n                            subscription_active: userDayMetrics.subscription_active || 0,\n                            estimated_revenue: userDayMetrics.estimated_revenue || 0,\n                            \n                            // Add cumulative values with proper field names expected by getCumulativeValue functions\n                            cumulative_trial_started: cumulativeValues.trial_started,\n                            cumulative_trial_ended: cumulativeValues.trial_ended,\n                            cumulative_trial_converted: cumulativeValues.trial_converted,\n                            cumulative_trial_cancelled: cumulativeValues.trial_cancelled,\n                            cumulative_initial_purchase: cumulativeValues.initial_purchase,\n                            cumulative_subscription_cancelled: cumulativeValues.subscription_cancelled,\n                            cumulative_revenue: cumulativeValues.revenue,\n                            cumulative_refund: cumulativeValues.refund,\n                            cumulative_refund_count: cumulativeValues.refund_count,\n                            cumulative_revenue_net: cumulativeValues.revenue - cumulativeValues.refund\n                        };\n                    } else {\n                        filteredDaily[date] = {\n                            trial_started: 0,\n                            trial_pending: 0,\n                            trial_ended: 0,\n                            trial_converted: 0,\n                            trial_cancelled: 0,\n                            initial_purchase: 0,\n                            subscription_active: 0,\n                            subscription_cancelled: 0,\n                            revenue: 0,\n                            refund: 0,\n                            refund_count: 0,\n                            estimated_revenue: 0,\n                            revenue_net: 0\n                        };\n                        \n                        // For cumulative, maintain previous cumulative values (no change on days with no activity)\n                        filteredCumulative[date] = {\n                            // State-based metrics remain 0\n                            trial_pending: 0,\n                            subscription_active: 0,\n                            estimated_revenue: 0,\n                            \n                            // Cumulative values remain at previous levels\n                            cumulative_trial_started: cumulativeValues.trial_started,\n                            cumulative_trial_ended: cumulativeValues.trial_ended,\n                            cumulative_trial_converted: cumulativeValues.trial_converted,\n                            cumulative_trial_cancelled: cumulativeValues.trial_cancelled,\n                            cumulative_initial_purchase: cumulativeValues.initial_purchase,\n                            cumulative_subscription_cancelled: cumulativeValues.subscription_cancelled,\n                            cumulative_revenue: cumulativeValues.revenue,\n                            cumulative_refund: cumulativeValues.refund,\n                            cumulative_refund_count: cumulativeValues.refund_count,\n                            cumulative_revenue_net: cumulativeValues.revenue - cumulativeValues.refund\n                        };\n                    }\n                });\n            } else {\n                dates.forEach(date => {\n                    filteredDaily[date] = {\n                        trial_started: 0,\n                        trial_pending: 0,\n                        trial_ended: 0,\n                        trial_converted: 0,\n                        trial_cancelled: 0,\n                        initial_purchase: 0,\n                        subscription_active: 0,\n                        subscription_cancelled: 0,\n                        revenue: 0,\n                        refund: 0,\n                        refund_count: 0,\n                        estimated_revenue: 0,\n                        revenue_net: 0\n                    };\n                    \n                    filteredCumulative[date] = {\n                        trial_pending: 0,\n                        subscription_active: 0,\n                        estimated_revenue: 0,\n                        cumulative_trial_started: 0,\n                        cumulative_trial_ended: 0,\n                        cumulative_trial_converted: 0,\n                        cumulative_trial_cancelled: 0,\n                        cumulative_initial_purchase: 0,\n                        cumulative_subscription_cancelled: 0,\n                        cumulative_revenue: 0,\n                        cumulative_refund: 0,\n                        cumulative_refund_count: 0,\n                        cumulative_revenue_net: 0\n                    };\n                });\n            }\n        }\n\n        return { dailyMetrics: filteredDaily, cumulativeMetrics: filteredCumulative };\n    }, [selectedUserId, selectedProductId, dailyMetrics, cumulativeMetrics, userDailyMetrics, dates]);\n\n    // NOW we can do early returns after all hooks are called\n    if (!hasValidData) {\n        return (\n            <div className=\"text-center py-8\">\n                <p className=\"text-gray-500 dark:text-gray-400\">\n                    No timeline data available. Run an analysis to see results.\n                </p>\n            </div>\n        );\n    }\n\n    const formatCurrency = (value) => {\n        if (value === null || value === undefined) return '$0';\n        const rounded = Math.round(Number(value));\n        return `$${rounded.toLocaleString()}`;\n    };\n\n    const formatNumber = (value) => {\n        if (value === null || value === undefined) return '0';\n        return Number(value).toLocaleString();\n    };\n\n    // Function to generate tooltip data for estimated revenue\n    const getEstimatedRevenueTooltipData = (date, value) => {\n        // CRITICAL: Only show tooltip for individual user view, NEVER for aggregate\n        if (!selectedUserId) {\n            return null;\n        }\n        \n        // Add safety check for value parameter\n        const safeValue = typeof value === 'number' ? value : 0;\n        \n        if (safeValue === 0) {\n            return null; // Don't show tooltip for $0 values\n        }\n        \n        console.log(`[DEBUG] getEstimatedRevenueTooltipData called with:`, {\n            date,\n            originalValue: value,\n            safeValue,\n            valueType: typeof value,\n            selectedUserId,\n            selectedProductId\n        });\n        \n        // SIMPLIFIED: Use pre-computed tooltip data from backend\n        // No more business logic calculations on frontend - just display what backend sends\n        \n        // Get the user's daily metrics for this date\n        const userMetrics = userDailyMetrics[selectedUserId];\n        if (!userMetrics || !userMetrics[date]) {\n            console.warn(`[WARN] No user metrics found for user ${selectedUserId} on date ${date}`);\n            return null;\n        }\n        \n        const dayMetrics = userMetrics[date];\n        const tooltipData = dayMetrics.tooltip_data;\n        \n        console.log(`[DEBUG] Backend tooltip data for ${selectedUserId} on ${date}:`, {\n            hasTooltipData: !!tooltipData,\n            tooltipData: tooltipData,\n            dayMetrics: dayMetrics\n        });\n        \n        if (!tooltipData) {\n            console.warn(`[WARN] No tooltip data found for user ${selectedUserId} on date ${date}`);\n            return null;\n        }\n        \n        // Return the pre-computed tooltip data from backend\n        return {\n            value: safeValue,\n            breakdown: tooltipData.breakdown,\n            result: `$${safeValue.toFixed(2)}`\n        };\n    };\n\n    // Define all metrics with their categories and data extraction logic\n    const metrics = [\n        // Daily Absolute Values\n        {\n            key: 'daily_trial_started',\n            label: 'Trial Started',\n            category: 'daily_absolute',\n            categoryLabel: 'Daily Absolute Values',\n            getValue: (date) => filteredData.dailyMetrics[date]?.trial_started || 0,\n            getCumulativeValue: (date) => filteredData.cumulativeMetrics[date]?.cumulative_trial_started || 0,\n            format: formatNumber\n        },\n        {\n            key: 'daily_trial_pending',\n            label: 'Trial Pending',\n            category: 'daily_absolute',\n            getValue: (date) => filteredData.dailyMetrics[date]?.trial_pending || 0,\n            // CRITICAL FIX: Trial pending is a state-based metric, cumulative should show same as daily\n            getCumulativeValue: (date) => filteredData.dailyMetrics[date]?.trial_pending || 0,\n            format: formatNumber\n        },\n        {\n            key: 'daily_trial_ended',\n            label: 'Trial Ended',\n            category: 'daily_absolute',\n            getValue: (date) => filteredData.dailyMetrics[date]?.trial_ended || 0,\n            getCumulativeValue: (date) => filteredData.cumulativeMetrics[date]?.cumulative_trial_ended || 0,\n            format: formatNumber\n        },\n        {\n            key: 'daily_trial_cancelled',\n            label: 'Trial Cancelled',\n            category: 'daily_absolute',\n            getValue: (date) => filteredData.dailyMetrics[date]?.trial_cancelled || 0,\n            getCumulativeValue: (date) => filteredData.cumulativeMetrics[date]?.cumulative_trial_cancelled || 0,\n            format: formatNumber\n        },\n        {\n            key: 'daily_trial_converted',\n            label: 'Trial Converted',\n            category: 'daily_absolute',\n            getValue: (date) => filteredData.dailyMetrics[date]?.trial_converted || 0,\n            getCumulativeValue: (date) => filteredData.cumulativeMetrics[date]?.cumulative_trial_converted || 0,\n            format: formatNumber\n        },\n        {\n            key: 'daily_initial_purchase',\n            label: 'Initial Purchase',\n            category: 'daily_absolute',\n            getValue: (date) => filteredData.dailyMetrics[date]?.initial_purchase || 0,\n            getCumulativeValue: (date) => filteredData.cumulativeMetrics[date]?.cumulative_initial_purchase || 0,\n            format: formatNumber\n        },\n        {\n            key: 'daily_subscription_active',\n            label: 'Subscription Active',\n            category: 'daily_absolute',\n            getValue: (date) => filteredData.dailyMetrics[date]?.subscription_active || 0,\n            // CRITICAL FIX: Subscription active is a state-based metric, cumulative should show same as daily\n            getCumulativeValue: (date) => filteredData.dailyMetrics[date]?.subscription_active || 0,\n            format: formatNumber\n        },\n        {\n            key: 'daily_subscription_cancelled',\n            label: 'Subscription Cancelled',\n            category: 'daily_absolute',\n            getValue: (date) => filteredData.dailyMetrics[date]?.subscription_cancelled || 0,\n            getCumulativeValue: (date) => filteredData.cumulativeMetrics[date]?.cumulative_subscription_cancelled || 0,\n            format: formatNumber\n        },\n        {\n            key: 'daily_users',\n            label: 'Daily Users',\n            category: 'daily_absolute',\n            getValue: (date) => filteredData.dailyMetrics[date]?.daily_users || 0,\n            getCumulativeValue: (date) => filteredData.dailyMetrics[date]?.cumulative_users || 0,\n            format: formatNumber\n        },\n        {\n            key: 'daily_refund_count',\n            label: 'Refunds',\n            category: 'daily_absolute',\n            getValue: (date) => filteredData.dailyMetrics[date]?.refund_count || 0,\n            getCumulativeValue: (date) => filteredData.cumulativeMetrics[date]?.cumulative_refund_count || 0,\n            format: formatNumber\n        },\n        // Revenue Values\n        {\n            key: 'daily_revenue',\n            label: 'Revenue',\n            category: 'revenue',\n            categoryLabel: 'Revenue Values',\n            getValue: (date) => filteredData.dailyMetrics[date]?.revenue || 0,\n            getCumulativeValue: (date) => filteredData.cumulativeMetrics[date]?.cumulative_revenue || 0,\n            format: formatCurrency\n        },\n        {\n            key: 'daily_refund',\n            label: 'Refunds',\n            category: 'revenue',\n            getValue: (date) => filteredData.dailyMetrics[date]?.refund || 0,\n            getCumulativeValue: (date) => filteredData.cumulativeMetrics[date]?.cumulative_refund || 0,\n            format: formatCurrency\n        },\n        {\n            key: 'daily_revenue_net',\n            label: 'Net Revenue',\n            category: 'revenue',\n            getValue: (date) => filteredData.dailyMetrics[date]?.revenue_net || 0,\n            getCumulativeValue: (date) => filteredData.cumulativeMetrics[date]?.cumulative_revenue_net || 0,\n            format: formatCurrency\n        },\n        {\n            key: 'daily_estimated_revenue',\n            label: 'Estimated Revenue',\n            category: 'revenue',\n            isEstimatedRevenue: true,\n            getValue: (date) => filteredData.dailyMetrics[date]?.estimated_revenue || 0,\n            // CRITICAL FIX: Estimated revenue is a state-based metric, cumulative should show same as daily\n            getCumulativeValue: (date) => filteredData.dailyMetrics[date]?.estimated_revenue || 0,\n            format: formatCurrency,\n            getTooltipData: (date) => {\n                const value = showCumulative \n                    ? (filteredData.dailyMetrics[date]?.estimated_revenue || 0)  // Same as daily for state-based\n                    : (filteredData.dailyMetrics[date]?.estimated_revenue || 0);\n                return getEstimatedRevenueTooltipData(date, value);\n            }\n        }\n    ];\n\n    // Group metrics by category\n    const groupedMetrics = metrics.reduce((acc, metric) => {\n        if (!acc[metric.category]) {\n            acc[metric.category] = {\n                label: metric.categoryLabel || metric.category,\n                metrics: []\n            };\n        }\n        acc[metric.category].metrics.push(metric);\n        return acc;\n    }, {});\n\n    return (\n        <>\n            <div className=\"mb-8 bg-white dark:bg-gray-700 p-6 rounded-lg shadow-md\">\n                <div className=\"flex justify-between items-center mb-4\">\n                    <h2 className=\"text-2xl font-bold text-gray-800 dark:text-white\">Daily Event & Revenue Timeline</h2>\n                    <div className=\"flex gap-2\">\n                        <button\n                            onClick={() => setShowCumulative(!showCumulative)}\n                            className={`px-3 py-1 text-sm rounded-full ${\n                                showCumulative \n                                    ? 'bg-blue-500 text-white' \n                                    : 'bg-gray-200 dark:bg-gray-600 text-gray-700 dark:text-white'\n                            }`}\n                        >\n                            {showCumulative ? 'Show Daily' : 'Show Cumulative'}\n                        </button>\n                    </div>\n                </div>\n                \n                {/* Table Container */}\n                <div className=\"overflow-x-auto\">\n                    <table className=\"min-w-full text-sm border dark:border-gray-600\">\n                        <thead className=\"bg-gray-50 dark:bg-gray-700\">\n                            <tr>\n                                <th className=\"p-2 border-b dark:border-gray-600 text-left text-gray-700 dark:text-white sticky left-0 bg-gray-50 dark:bg-gray-700 z-10 min-w-[200px]\">\n                                    Metric\n                                </th>\n                                {dates.map(date => (\n                                    <th key={date} className=\"p-2 border-b dark:border-gray-600 text-center text-gray-700 dark:text-white whitespace-nowrap min-w-[80px]\">\n                                        {date}\n                                    </th>\n                                ))}\n                            </tr>\n                        </thead>\n                        <tbody className=\"bg-white dark:bg-gray-800\">\n                            {Object.entries(groupedMetrics).map(([categoryKey, category]) => (\n                                <React.Fragment key={categoryKey}>\n                                    {/* Category Header */}\n                                    <tr className=\"bg-gray-100 dark:bg-gray-600\">\n                                        <td colSpan={dates.length + 1} className=\"p-2 font-semibold text-gray-800 dark:text-white border-b dark:border-gray-600\">\n                                            {category.label}\n                                        </td>\n                                    </tr>\n                                    {/* Metrics in this category */}\n                                    {category.metrics.map((metric) => (\n                                        <tr key={metric.key} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\n                                            <td className=\"p-2 border-b dark:border-gray-600 font-medium text-gray-700 dark:text-white sticky left-0 bg-white dark:bg-gray-800 z-10\">\n                                                {metric.label}\n                                            </td>\n                                            {dates.map(date => {\n                                                const value = showCumulative \n                                                    ? metric.getCumulativeValue(date)\n                                                    : metric.getValue(date);\n                                                return (\n                                                    <td \n                                                        key={date} \n                                                        className={`p-2 border-b dark:border-gray-600 text-center text-gray-700 dark:text-white ${\n                                                            metric.isEstimatedRevenue && selectedUserId ? 'cursor-help hover:bg-yellow-50 dark:hover:bg-yellow-900/20 relative' : ''\n                                                        }`}\n                                                        onMouseEnter={metric.isEstimatedRevenue && selectedUserId ? (e) => {\n                                                            // Only show tooltip for single user views\n                                                            if (!selectedUserId) return;\n                                                            \n                                                            // Clear any existing timeout\n                                                            if (tooltipTimeoutRef.current) {\n                                                                clearTimeout(tooltipTimeoutRef.current);\n                                                                tooltipTimeoutRef.current = null;\n                                                            }\n                                                            \n                                                            // Small delay to prevent tooltip from appearing on quick mouse movements\n                                                            const newTimeout = setTimeout(() => {\n                                                                const rect = e.target.getBoundingClientRect();\n                                                                const tooltipData = getEstimatedRevenueTooltipData(date, value);\n                                                                \n                                                                if (tooltipData) {\n                                                                    setTooltipData(tooltipData);\n                                                                    \n                                                                    // Smart positioning: check available space\n                                                                    const tooltipWidth = 480; // Estimated tooltip width\n                                                                    const tooltipHeight = 480; // Estimated tooltip height\n                                                                    const spaceOnRight = window.innerWidth - rect.right;\n                                                                    const spaceOnLeft = rect.left;\n                                                                    \n                                                                    let xPosition, yPosition;\n                                                                    \n                                                                    // Choose horizontal position based on available space\n                                                                    if (spaceOnRight >= tooltipWidth + 20) {\n                                                                        // Enough space on the right\n                                                                        xPosition = rect.right + 10;\n                                                                    } else if (spaceOnLeft >= tooltipWidth + 20) {\n                                                                        // Not enough space on right, but enough on left\n                                                                        xPosition = rect.left - tooltipWidth - 10;\n                                                                    } else {\n                                                                        // Not enough space on either side, center it\n                                                                        xPosition = Math.max(10, (window.innerWidth - tooltipWidth) / 2);\n                                                                    }\n                                                                    \n                                                                    // Vertical position: position so BOTTOM of tooltip aligns with cell center\n                                                                    const cellCenterY = rect.top + (rect.height / 2);\n                                                                    yPosition = Math.max(10, cellCenterY - tooltipHeight); // Subtract tooltip height\n                                                                    \n                                                                    // Ensure tooltip doesn't go below screen\n                                                                    yPosition = Math.min(yPosition, window.innerHeight - tooltipHeight - 10);\n                                                                    \n                                                                    setTooltipPosition({ \n                                                                        x: xPosition,\n                                                                        y: yPosition\n                                                                    });\n                                                                }\n                                                            }, 150); // Shorter delay for better responsiveness\n                                                            \n                                                            tooltipTimeoutRef.current = newTimeout;\n                                                        } : undefined}\n                                                        onMouseLeave={metric.isEstimatedRevenue && selectedUserId ? () => {\n                                                            // Only handle mouse leave for single user views\n                                                            if (!selectedUserId) return;\n                                                            \n                                                            // Clear the show timeout if mouse leaves before tooltip appears\n                                                            if (tooltipTimeoutRef.current) {\n                                                                clearTimeout(tooltipTimeoutRef.current);\n                                                                tooltipTimeoutRef.current = null;\n                                                            }\n                                                            \n                                                            // Set a timeout to hide the tooltip, allowing time to move to tooltip\n                                                            const hideTimeout = setTimeout(() => {\n                                                                setTooltipData(null);\n                                                            }, 100); // Shorter delay for quicker hiding\n                                                            \n                                                            tooltipTimeoutRef.current = hideTimeout;\n                                                        } : undefined}\n                                                    >\n                                                        {metric.format(value)}\n                                                    </td>\n                                                );\n                                            })}\n                                        </tr>\n                                    ))}\n                                </React.Fragment>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n\n                {dates.length === 0 && (\n                    <div className=\"text-center py-8\">\n                        <p className=\"text-gray-500 dark:text-gray-400\">\n                            No timeline data available. Run an analysis to see results.\n                        </p>\n                    </div>\n                )}\n            </div>\n            \n            {/* Estimated Revenue Tooltip */}\n            <EstimatedRevenueTooltip\n                data={tooltipData}\n                position={tooltipPosition}\n                onClose={() => setTooltipData(null)}\n                selectedUserId={selectedUserId}\n                selectedProductId={selectedProductId}\n            />\n        </>\n    );\n};\n\nexport default EventTimelineTable; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}