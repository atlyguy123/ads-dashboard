{"ast":null,"code":"var _jsxFileName = \"/Users/joshuakaufman/untitled folder 3/orchestrator/dashboard/client/src/components/meta/JobManager.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobManager = ({\n  activeJobs,\n  cancelJob\n}) => {\n  if (activeJobs.length === 0) return null;\n  const getStatusColor = status => {\n    switch (status) {\n      case 'running':\n        return 'bg-blue-100 text-blue-800';\n      case 'completed':\n        return 'bg-green-100 text-green-800';\n      case 'completed_with_errors':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'completed_unknown':\n        return 'bg-purple-100 text-purple-800';\n      case 'failed':\n        return 'bg-red-100 text-red-800';\n      case 'cancelled':\n        return 'bg-gray-100 text-gray-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n  const getStatusText = status => {\n    switch (status) {\n      case 'completed_unknown':\n        return 'Status Unknown';\n      case 'completed_with_errors':\n        return 'Completed (with errors)';\n      default:\n        return status;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white dark:bg-gray-800 rounded-lg shadow p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-4\",\n      children: \"Collection Jobs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-3\",\n      children: activeJobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border rounded p-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-start mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-medium\",\n              children: [job.start_date, \" to \", job.end_date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600\",\n              children: [\"Fields: \", job.fields, job.breakdowns && ` | Breakdowns: ${job.breakdowns}`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: `px-2 py-1 rounded text-xs ${getStatusColor(job.status)}`,\n              children: getStatusText(job.status)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), job.status === 'running' && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => cancelJob(job.job_id),\n              className: \"text-red-600 hover:text-red-800 text-xs\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), job.status === 'running' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full bg-gray-200 rounded-full h-2\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-blue-600 h-2 rounded-full\",\n              style: {\n                width: `${job.progress_percentage}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-gray-600 mt-1\",\n            children: [job.current_date && `Processing: ${job.current_date}`, ` (${Math.round(job.progress_percentage)}%)`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this), job.status === 'completed_unknown' && job.message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2 text-xs text-purple-600 bg-purple-50 p-2 rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Note:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), \" \", job.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this), job.errors && job.errors.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2 text-xs text-red-600\",\n          children: [job.errors.length, \" error(s) occurred\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this)]\n      }, job.job_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_c = JobManager;\nexport default JobManager;\nvar _c;\n$RefreshReg$(_c, \"JobManager\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","JobManager","activeJobs","cancelJob","length","getStatusColor","status","getStatusText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","job","start_date","end_date","fields","breakdowns","onClick","job_id","style","width","progress_percentage","current_date","Math","round","message","errors","_c","$RefreshReg$"],"sources":["/Users/joshuakaufman/untitled folder 3/orchestrator/dashboard/client/src/components/meta/JobManager.jsx"],"sourcesContent":["import React from 'react';\n\nconst JobManager = ({ activeJobs, cancelJob }) => {\n  if (activeJobs.length === 0) return null;\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'running':\n        return 'bg-blue-100 text-blue-800';\n      case 'completed':\n        return 'bg-green-100 text-green-800';\n      case 'completed_with_errors':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'completed_unknown':\n        return 'bg-purple-100 text-purple-800';\n      case 'failed':\n        return 'bg-red-100 text-red-800';\n      case 'cancelled':\n        return 'bg-gray-100 text-gray-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const getStatusText = (status) => {\n    switch (status) {\n      case 'completed_unknown':\n        return 'Status Unknown';\n      case 'completed_with_errors':\n        return 'Completed (with errors)';\n      default:\n        return status;\n    }\n  };\n\n  return (\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\n      <h2 className=\"text-xl font-semibold mb-4\">Collection Jobs</h2>\n      <div className=\"space-y-3\">\n        {activeJobs.map((job) => (\n          <div key={job.job_id} className=\"border rounded p-3\">\n            <div className=\"flex justify-between items-start mb-2\">\n              <div>\n                <div className=\"font-medium\">{job.start_date} to {job.end_date}</div>\n                <div className=\"text-sm text-gray-600\">\n                  Fields: {job.fields}\n                  {job.breakdowns && ` | Breakdowns: ${job.breakdowns}`}\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <span className={`px-2 py-1 rounded text-xs ${getStatusColor(job.status)}`}>\n                  {getStatusText(job.status)}\n                </span>\n                {job.status === 'running' && (\n                  <button\n                    onClick={() => cancelJob(job.job_id)}\n                    className=\"text-red-600 hover:text-red-800 text-xs\"\n                  >\n                    Cancel\n                  </button>\n                )}\n              </div>\n            </div>\n            \n            {job.status === 'running' && (\n              <div>\n                <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                  <div \n                    className=\"bg-blue-600 h-2 rounded-full\" \n                    style={{ width: `${job.progress_percentage}%` }}\n                  ></div>\n                </div>\n                <div className=\"text-xs text-gray-600 mt-1\">\n                  {job.current_date && `Processing: ${job.current_date}`}\n                  {` (${Math.round(job.progress_percentage)}%)`}\n                </div>\n              </div>\n            )}\n            \n            {job.status === 'completed_unknown' && job.message && (\n              <div className=\"mt-2 text-xs text-purple-600 bg-purple-50 p-2 rounded\">\n                <strong>Note:</strong> {job.message}\n              </div>\n            )}\n            \n            {job.errors && job.errors.length > 0 && (\n              <div className=\"mt-2 text-xs text-red-600\">\n                {job.errors.length} error(s) occurred\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default JobManager; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}