{"ast":null,"code":"var _jsxFileName = \"/Users/joshuakaufman/untitled folder 3/orchestrator/dashboard/client/src/components/meta/HistoricalDataViewer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { api } from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HistoricalDataViewer = () => {\n  _s();\n  const [configurations, setConfigurations] = useState([]);\n  const [configData, setConfigData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [expandedConfigs, setExpandedConfigs] = useState(new Set());\n  const [deletingConfig, setDeletingConfig] = useState(null);\n\n  // Load all configurations and their data on component mount\n  useEffect(() => {\n    loadAllData();\n  }, []);\n  const loadAllData = async () => {\n    setLoading(true);\n    try {\n      // Get all configurations\n      const configs = await api.getHistoricalConfigurations();\n      setConfigurations(configs);\n\n      // Load data for each configuration\n      const dataPromises = configs.map(async config => {\n        if (config.day_count > 0) {\n          try {\n            const data = await api.exportHistoricalData({\n              start_date: config.earliest_date,\n              end_date: config.latest_date,\n              fields: config.fields,\n              breakdowns: config.breakdowns\n            });\n            return {\n              configHash: config.config_hash,\n              data\n            };\n          } catch (error) {\n            console.error(`Error loading data for config ${config.config_hash}:`, error);\n            return {\n              configHash: config.config_hash,\n              data: null\n            };\n          }\n        }\n        return {\n          configHash: config.config_hash,\n          data: null\n        };\n      });\n      const results = await Promise.all(dataPromises);\n      const dataMap = {};\n      results.forEach(({\n        configHash,\n        data\n      }) => {\n        dataMap[configHash] = data;\n      });\n      setConfigData(dataMap);\n    } catch (error) {\n      console.error('Error loading configurations:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const deleteConfiguration = async configHash => {\n    if (!window.confirm('Are you sure you want to delete this entire dataset? This action cannot be undone.')) {\n      return;\n    }\n    setDeletingConfig(configHash);\n    try {\n      await api.deleteHistoricalConfiguration(configHash);\n      // Reload data to reflect the deletion\n      await loadAllData();\n    } catch (error) {\n      console.error('Error deleting configuration:', error);\n      alert('Failed to delete configuration. Please try again.');\n    } finally {\n      setDeletingConfig(null);\n    }\n  };\n  const toggleConfigExpansion = configHash => {\n    const newExpanded = new Set(expandedConfigs);\n    if (newExpanded.has(configHash)) {\n      newExpanded.delete(configHash);\n    } else {\n      newExpanded.add(configHash);\n    }\n    setExpandedConfigs(newExpanded);\n  };\n  const processDataForTable = exportData => {\n    if (!exportData || !exportData.data || exportData.data.length === 0) {\n      return null;\n    }\n    const fields = exportData.config.fields.split(',').map(f => f.trim());\n    const hasBreakdowns = exportData.config.breakdowns && exportData.config.breakdowns.trim();\n\n    // Get all dates (should now be unique since backend duplicates are fixed)\n    const dates = exportData.data.map(d => d.date).sort();\n\n    // Process data by date\n    const dateData = {};\n    const businessMetrics = {};\n    exportData.data.forEach(dayData => {\n      const date = dayData.date;\n\n      // Extract business metrics if available\n      if (dayData.business_metrics) {\n        businessMetrics[date] = dayData.business_metrics;\n      }\n\n      // Extract metaData from the API response structure\n      let metaData = [];\n      if (dayData.data) {\n        // Historical export API structure: dayData.data.data.data contains the actual records array\n        if (dayData.data.data && Array.isArray(dayData.data.data.data)) {\n          metaData = dayData.data.data.data;\n        } else if (Array.isArray(dayData.data.data)) {\n          metaData = dayData.data.data;\n        } else if (Array.isArray(dayData.data)) {\n          metaData = dayData.data;\n        } else {\n          console.warn('Unexpected data structure for date:', date, dayData.data);\n          metaData = [];\n        }\n      }\n      dateData[date] = processMetricsForDate(metaData, fields, hasBreakdowns);\n    });\n    return {\n      dates,\n      dateData,\n      fields,\n      hasBreakdowns,\n      config: exportData.config,\n      businessMetrics\n    };\n  };\n  const processMetricsForDate = (records, fields, hasBreakdowns) => {\n    // Ensure records is always an array\n    if (!records) {\n      return {};\n    }\n    if (!Array.isArray(records)) {\n      console.warn('processMetricsForDate: records is not an array:', typeof records, records);\n      return {};\n    }\n    if (records.length === 0) {\n      return {};\n    }\n    const result = {};\n    fields.forEach(field => {\n      if (isNumericField(field)) {\n        // For numeric fields, sum all values\n        const total = records.reduce((sum, record) => {\n          const value = parseFloat(record[field]) || 0;\n          return sum + value;\n        }, 0);\n        result[field] = total;\n      } else if (isCountableField(field)) {\n        // For text fields, count unique values\n        const uniqueValues = new Set();\n        records.forEach(record => {\n          if (record[field]) {\n            uniqueValues.add(record[field]);\n          }\n        });\n        result[field] = uniqueValues.size;\n      } else {\n        // For other fields, just indicate presence\n        result[field] = records.length > 0 ? 'Data' : 'No Data';\n      }\n    });\n\n    // If there are breakdowns, also process breakdown-specific data\n    if (hasBreakdowns) {\n      result._breakdownData = processBreakdownData(records, fields);\n    }\n    return result;\n  };\n  const processBreakdownData = (records, fields) => {\n    const breakdownGroups = {};\n\n    // Ensure records is an array\n    if (!Array.isArray(records)) {\n      console.warn('processBreakdownData: records is not an array:', typeof records, records);\n      return breakdownGroups;\n    }\n    records.forEach(record => {\n      // Get breakdown values (all keys that aren't in fields)\n      const breakdownKey = Object.keys(record).filter(key => !fields.includes(key) && !['date_start', 'date_stop'].includes(key)).map(key => `${key}:${record[key]}`).join(' | ');\n      if (!breakdownGroups[breakdownKey]) {\n        breakdownGroups[breakdownKey] = {};\n      }\n      fields.forEach(field => {\n        if (isNumericField(field)) {\n          const value = parseFloat(record[field]) || 0;\n          breakdownGroups[breakdownKey][field] = (breakdownGroups[breakdownKey][field] || 0) + value;\n        }\n      });\n    });\n    return breakdownGroups;\n  };\n  const isNumericField = field => {\n    const numericFields = ['impressions', 'clicks', 'spend', 'reach', 'frequency', 'cpc', 'cpm', 'cpp', 'unique_clicks', 'unique_ctr', 'inline_link_clicks', 'outbound_clicks', 'estimated_ad_recallers', 'estimated_ad_recall_rate'];\n    return numericFields.includes(field) || field.includes('action') || field.includes('conversion');\n  };\n  const isCountableField = field => {\n    const countableFields = ['ad_name', 'campaign_name', 'adset_name', 'ad_id', 'campaign_id', 'adset_id'];\n    return countableFields.includes(field);\n  };\n  const formatValue = (field, value) => {\n    if (typeof value === 'number') {\n      if (field === 'spend' || field.includes('cost')) {\n        return `$${value.toFixed(2)}`;\n      } else if (field.includes('rate') || field.includes('ctr')) {\n        return `${(value * 100).toFixed(2)}%`;\n      } else if (Number.isInteger(value)) {\n        return value.toLocaleString();\n      } else {\n        return value.toFixed(2);\n      }\n    } else if (typeof value === 'number' && isCountableField(field)) {\n      return `${value} ${field.includes('campaign') ? 'campaigns' : field.includes('ad') ? 'ads' : 'items'}`;\n    }\n    return value;\n  };\n  const renderDataTable = (config, tableData) => {\n    if (!tableData) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-500 text-center py-4\",\n        children: \"No data available for this configuration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this);\n    }\n    const {\n      dates,\n      dateData,\n      fields,\n      hasBreakdowns,\n      businessMetrics\n    } = tableData;\n    const configHash = config.config_hash;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-6\",\n      children: [businessMetrics && Object.keys(businessMetrics).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-md font-medium mb-3 text-blue-800\",\n          children: \"\\uD83D\\uDCB0 Business Metrics Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overflow-x-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"min-w-full border border-gray-200 bg-blue-50\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              className: \"bg-blue-100\",\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-4 py-2 text-left text-sm font-medium text-blue-800 border-r\",\n                  children: \"Business Concept\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 21\n                }, this), dates.map(date => /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-3 py-2 text-center text-sm font-medium text-blue-800 border-r\",\n                  children: date\n                }, `${configHash}-bm-header-${date}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              className: \"bg-white\",\n              children: (() => {\n                const firstDateWithData = dates.find(date => businessMetrics[date] && Object.keys(businessMetrics[date]).length > 0);\n                if (!firstDateWithData) return null;\n                const conceptNames = Object.keys(businessMetrics[firstDateWithData]);\n                return conceptNames.map((conceptName, conceptIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: conceptIndex % 2 === 0 ? 'bg-blue-25' : 'bg-white',\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-4 py-2 text-sm font-medium text-blue-900 border-r capitalize\",\n                    children: conceptName === 'trial_started' ? 'Trial Started' : conceptName === 'initial_purchase' ? 'Initial Purchase' : conceptName.replace(/_/g, ' ')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 25\n                  }, this), dates.map(date => {\n                    var _businessMetrics$date;\n                    return /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-3 py-2 text-sm text-blue-800 text-center border-r font-medium\",\n                      children: businessMetrics[date] && ((_businessMetrics$date = businessMetrics[date][conceptName]) === null || _businessMetrics$date === void 0 ? void 0 : _businessMetrics$date.count) !== undefined ? businessMetrics[date][conceptName].count : '-'\n                    }, `${configHash}-bm-${conceptName}-${date}`, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 295,\n                      columnNumber: 27\n                    }, this);\n                  })]\n                }, `${configHash}-bm-${conceptName}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 23\n                }, this));\n              })()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-md font-medium mb-3 text-gray-800\",\n          children: \"\\uD83D\\uDCCA Raw Data Metrics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overflow-x-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"min-w-full border border-gray-200\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              className: \"bg-gray-50\",\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-4 py-2 text-left text-sm font-medium text-gray-700 border-r\",\n                  children: \"Metric\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 19\n                }, this), dates.map(date => /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-3 py-2 text-center text-sm font-medium text-gray-700 border-r\",\n                  children: date\n                }, `${configHash}-rm-header-${date}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              className: \"bg-white\",\n              children: fields.map((field, fieldIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: fieldIndex % 2 === 0 ? 'bg-gray-50' : 'bg-white',\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-4 py-2 text-sm font-medium text-gray-900 border-r\",\n                  children: field\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 21\n                }, this), dates.map(date => /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-3 py-2 text-sm text-gray-700 text-center border-r\",\n                  children: dateData[date] && dateData[date][field] !== undefined ? formatValue(field, dateData[date][field]) : '-'\n                }, `${configHash}-rm-${field}-${date}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 23\n                }, this))]\n              }, `${configHash}-rm-${field}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), hasBreakdowns && Object.keys(dateData).some(date => dateData[date]._breakdownData) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"text-sm font-medium text-gray-700 mb-3\",\n          children: \"Breakdown Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this), dates.map(date => {\n          const breakdownData = dateData[date]._breakdownData;\n          if (!breakdownData || Object.keys(breakdownData).length === 0) return null;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"text-xs font-medium text-gray-600 mb-2\",\n              children: date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"overflow-x-auto\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"min-w-full border border-gray-200 text-xs\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  className: \"bg-gray-100\",\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-2 py-1 text-left text-gray-700 border-r\",\n                      children: \"Breakdown\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 364,\n                      columnNumber: 27\n                    }, this), fields.filter(isNumericField).map(field => /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"px-2 py-1 text-center text-gray-700 border-r\",\n                      children: field\n                    }, `${configHash}-bd-${date}-header-${field}`, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 366,\n                      columnNumber: 29\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 363,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: Object.entries(breakdownData).map(([breakdownKey, values]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    className: \"bg-white\",\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-2 py-1 text-gray-900 border-r\",\n                      children: breakdownKey\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 375,\n                      columnNumber: 29\n                    }, this), fields.filter(isNumericField).map(field => /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-2 py-1 text-center text-gray-700 border-r\",\n                      children: formatValue(field, values[field] || 0)\n                    }, `${configHash}-bd-${date}-${breakdownKey}-${field}`, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 377,\n                      columnNumber: 31\n                    }, this))]\n                  }, `${configHash}-bd-${date}-${breakdownKey}`, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 374,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 19\n            }, this)]\n          }, `${configHash}-bd-${date}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center py-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500 mr-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Loading historical data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }, this);\n  }\n  if (configurations.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-8 text-gray-500\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No historical data configurations found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm mt-2\",\n        children: \"Start a historical collection job to see data here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-medium\",\n        children: \"Historical Data Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: loadAllData,\n        className: \"text-sm text-blue-600 hover:text-blue-800\",\n        children: \"Refresh Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 7\n    }, this), configurations.map(config => {\n      const isExpanded = expandedConfigs.has(config.config_hash);\n      const data = configData[config.config_hash];\n      const tableData = data ? processDataForTable(data) : null;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border border-gray-200 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 bg-gray-50 cursor-pointer hover:bg-gray-100\",\n          onClick: () => toggleConfigExpansion(config.config_hash),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-medium text-gray-900\",\n                children: [\"Fields: \", config.fields]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 19\n              }, this), config.breakdowns && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600\",\n                children: [\"Breakdowns: \", config.breakdowns]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-500 mt-1\",\n                children: [config.day_count, \" days \\u2022 \", config.earliest_date, \" to \", config.latest_date]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: e => {\n                  e.stopPropagation();\n                  deleteConfiguration(config.config_hash);\n                },\n                disabled: deletingConfig === config.config_hash,\n                className: \"px-2 py-1 text-xs bg-red-500 text-white rounded hover:bg-red-600 disabled:bg-gray-400\",\n                title: \"Delete this entire dataset\",\n                children: deletingConfig === config.config_hash ? 'Deleting...' : 'Delete'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-gray-400\",\n                children: isExpanded ? '−' : '+'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 13\n        }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-t\",\n          children: renderDataTable(config, tableData)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 15\n        }, this)]\n      }, config.config_hash, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 414,\n    columnNumber: 5\n  }, this);\n};\n_s(HistoricalDataViewer, \"lUz4Sr9kaULTnwboMtIXuxl0SNU=\");\n_c = HistoricalDataViewer;\nexport default HistoricalDataViewer;\nvar _c;\n$RefreshReg$(_c, \"HistoricalDataViewer\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","HistoricalDataViewer","_s","configurations","setConfigurations","configData","setConfigData","loading","setLoading","expandedConfigs","setExpandedConfigs","Set","deletingConfig","setDeletingConfig","loadAllData","configs","getHistoricalConfigurations","dataPromises","map","config","day_count","data","exportHistoricalData","start_date","earliest_date","end_date","latest_date","fields","breakdowns","configHash","config_hash","error","console","results","Promise","all","dataMap","forEach","deleteConfiguration","window","confirm","deleteHistoricalConfiguration","alert","toggleConfigExpansion","newExpanded","has","delete","add","processDataForTable","exportData","length","split","f","trim","hasBreakdowns","dates","d","date","sort","dateData","businessMetrics","dayData","business_metrics","metaData","Array","isArray","warn","processMetricsForDate","records","result","field","isNumericField","total","reduce","sum","record","value","parseFloat","isCountableField","uniqueValues","size","_breakdownData","processBreakdownData","breakdownGroups","breakdownKey","Object","keys","filter","key","includes","join","numericFields","countableFields","formatValue","toFixed","Number","isInteger","toLocaleString","renderDataTable","tableData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","firstDateWithData","find","conceptNames","conceptName","conceptIndex","replace","_businessMetrics$date","count","undefined","fieldIndex","some","breakdownData","entries","values","onClick","isExpanded","e","stopPropagation","disabled","title","_c","$RefreshReg$"],"sources":["/Users/joshuakaufman/untitled folder 3/orchestrator/dashboard/client/src/components/meta/HistoricalDataViewer.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { api } from '../../services/api';\n\nconst HistoricalDataViewer = () => {\n  const [configurations, setConfigurations] = useState([]);\n  const [configData, setConfigData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [expandedConfigs, setExpandedConfigs] = useState(new Set());\n  const [deletingConfig, setDeletingConfig] = useState(null);\n\n  // Load all configurations and their data on component mount\n  useEffect(() => {\n    loadAllData();\n  }, []);\n\n  const loadAllData = async () => {\n    setLoading(true);\n    try {\n      // Get all configurations\n      const configs = await api.getHistoricalConfigurations();\n      setConfigurations(configs);\n\n      // Load data for each configuration\n      const dataPromises = configs.map(async (config) => {\n        if (config.day_count > 0) {\n          try {\n            const data = await api.exportHistoricalData({\n              start_date: config.earliest_date,\n              end_date: config.latest_date,\n              fields: config.fields,\n              breakdowns: config.breakdowns\n            });\n            return { configHash: config.config_hash, data };\n          } catch (error) {\n            console.error(`Error loading data for config ${config.config_hash}:`, error);\n            return { configHash: config.config_hash, data: null };\n          }\n        }\n        return { configHash: config.config_hash, data: null };\n      });\n\n      const results = await Promise.all(dataPromises);\n      const dataMap = {};\n      results.forEach(({ configHash, data }) => {\n        dataMap[configHash] = data;\n      });\n      \n      setConfigData(dataMap);\n    } catch (error) {\n      console.error('Error loading configurations:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const deleteConfiguration = async (configHash) => {\n    if (!window.confirm('Are you sure you want to delete this entire dataset? This action cannot be undone.')) {\n      return;\n    }\n\n    setDeletingConfig(configHash);\n    try {\n      await api.deleteHistoricalConfiguration(configHash);\n      // Reload data to reflect the deletion\n      await loadAllData();\n    } catch (error) {\n      console.error('Error deleting configuration:', error);\n      alert('Failed to delete configuration. Please try again.');\n    } finally {\n      setDeletingConfig(null);\n    }\n  };\n\n  const toggleConfigExpansion = (configHash) => {\n    const newExpanded = new Set(expandedConfigs);\n    if (newExpanded.has(configHash)) {\n      newExpanded.delete(configHash);\n    } else {\n      newExpanded.add(configHash);\n    }\n    setExpandedConfigs(newExpanded);\n  };\n\n  const processDataForTable = (exportData) => {\n    if (!exportData || !exportData.data || exportData.data.length === 0) {\n      return null;\n    }\n\n    const fields = exportData.config.fields.split(',').map(f => f.trim());\n    const hasBreakdowns = exportData.config.breakdowns && exportData.config.breakdowns.trim();\n    \n    // Get all dates (should now be unique since backend duplicates are fixed)\n    const dates = exportData.data.map(d => d.date).sort();\n    \n    // Process data by date\n    const dateData = {};\n    const businessMetrics = {};\n    \n    exportData.data.forEach(dayData => {\n      const date = dayData.date;\n      \n      // Extract business metrics if available\n      if (dayData.business_metrics) {\n        businessMetrics[date] = dayData.business_metrics;\n      }\n      \n      // Extract metaData from the API response structure\n      let metaData = [];\n      if (dayData.data) {\n        // Historical export API structure: dayData.data.data.data contains the actual records array\n        if (dayData.data.data && Array.isArray(dayData.data.data.data)) {\n          metaData = dayData.data.data.data;\n        } else if (Array.isArray(dayData.data.data)) {\n          metaData = dayData.data.data;\n        } else if (Array.isArray(dayData.data)) {\n          metaData = dayData.data;\n        } else {\n          console.warn('Unexpected data structure for date:', date, dayData.data);\n          metaData = [];\n        }\n      }\n      \n      dateData[date] = processMetricsForDate(metaData, fields, hasBreakdowns);\n    });\n\n    return {\n      dates,\n      dateData,\n      fields,\n      hasBreakdowns,\n      config: exportData.config,\n      businessMetrics\n    };\n  };\n\n  const processMetricsForDate = (records, fields, hasBreakdowns) => {\n    // Ensure records is always an array\n    if (!records) {\n      return {};\n    }\n    \n    if (!Array.isArray(records)) {\n      console.warn('processMetricsForDate: records is not an array:', typeof records, records);\n      return {};\n    }\n    \n    if (records.length === 0) {\n      return {};\n    }\n\n    const result = {};\n    \n    fields.forEach(field => {\n      if (isNumericField(field)) {\n        // For numeric fields, sum all values\n        const total = records.reduce((sum, record) => {\n          const value = parseFloat(record[field]) || 0;\n          return sum + value;\n        }, 0);\n        result[field] = total;\n      } else if (isCountableField(field)) {\n        // For text fields, count unique values\n        const uniqueValues = new Set();\n        records.forEach(record => {\n          if (record[field]) {\n            uniqueValues.add(record[field]);\n          }\n        });\n        result[field] = uniqueValues.size;\n      } else {\n        // For other fields, just indicate presence\n        result[field] = records.length > 0 ? 'Data' : 'No Data';\n      }\n    });\n\n    // If there are breakdowns, also process breakdown-specific data\n    if (hasBreakdowns) {\n      result._breakdownData = processBreakdownData(records, fields);\n    }\n\n    return result;\n  };\n\n  const processBreakdownData = (records, fields) => {\n    const breakdownGroups = {};\n    \n    // Ensure records is an array\n    if (!Array.isArray(records)) {\n      console.warn('processBreakdownData: records is not an array:', typeof records, records);\n      return breakdownGroups;\n    }\n    \n    records.forEach(record => {\n      // Get breakdown values (all keys that aren't in fields)\n      const breakdownKey = Object.keys(record)\n        .filter(key => !fields.includes(key) && !['date_start', 'date_stop'].includes(key))\n        .map(key => `${key}:${record[key]}`)\n        .join(' | ');\n      \n      if (!breakdownGroups[breakdownKey]) {\n        breakdownGroups[breakdownKey] = {};\n      }\n      \n      fields.forEach(field => {\n        if (isNumericField(field)) {\n          const value = parseFloat(record[field]) || 0;\n          breakdownGroups[breakdownKey][field] = (breakdownGroups[breakdownKey][field] || 0) + value;\n        }\n      });\n    });\n    \n    return breakdownGroups;\n  };\n\n  const isNumericField = (field) => {\n    const numericFields = [\n      'impressions', 'clicks', 'spend', 'reach', 'frequency', 'cpc', 'cpm', 'cpp',\n      'unique_clicks', 'unique_ctr', 'inline_link_clicks', 'outbound_clicks',\n      'estimated_ad_recallers', 'estimated_ad_recall_rate'\n    ];\n    return numericFields.includes(field) || field.includes('action') || field.includes('conversion');\n  };\n\n  const isCountableField = (field) => {\n    const countableFields = [\n      'ad_name', 'campaign_name', 'adset_name', 'ad_id', 'campaign_id', 'adset_id'\n    ];\n    return countableFields.includes(field);\n  };\n\n  const formatValue = (field, value) => {\n    if (typeof value === 'number') {\n      if (field === 'spend' || field.includes('cost')) {\n        return `$${value.toFixed(2)}`;\n      } else if (field.includes('rate') || field.includes('ctr')) {\n        return `${(value * 100).toFixed(2)}%`;\n      } else if (Number.isInteger(value)) {\n        return value.toLocaleString();\n      } else {\n        return value.toFixed(2);\n      }\n    } else if (typeof value === 'number' && isCountableField(field)) {\n      return `${value} ${field.includes('campaign') ? 'campaigns' : field.includes('ad') ? 'ads' : 'items'}`;\n    }\n    return value;\n  };\n\n  const renderDataTable = (config, tableData) => {\n    if (!tableData) {\n      return (\n        <div className=\"text-gray-500 text-center py-4\">\n          No data available for this configuration\n        </div>\n      );\n    }\n\n    const { dates, dateData, fields, hasBreakdowns, businessMetrics } = tableData;\n    const configHash = config.config_hash;\n\n    return (\n      <div className=\"space-y-6\">\n        {/* Business Metrics Section */}\n        {businessMetrics && Object.keys(businessMetrics).length > 0 && (\n          <div>\n            <h4 className=\"text-md font-medium mb-3 text-blue-800\">💰 Business Metrics Summary</h4>\n            <div className=\"overflow-x-auto\">\n              <table className=\"min-w-full border border-gray-200 bg-blue-50\">\n                <thead className=\"bg-blue-100\">\n                  <tr>\n                    <th className=\"px-4 py-2 text-left text-sm font-medium text-blue-800 border-r\">\n                      Business Concept\n                    </th>\n                    {dates.map(date => (\n                      <th key={`${configHash}-bm-header-${date}`} className=\"px-3 py-2 text-center text-sm font-medium text-blue-800 border-r\">\n                        {date}\n                      </th>\n                    ))}\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white\">\n                  {/* Get concept names from the first date that has data */}\n                  {(() => {\n                    const firstDateWithData = dates.find(date => businessMetrics[date] && Object.keys(businessMetrics[date]).length > 0);\n                    if (!firstDateWithData) return null;\n                    \n                    const conceptNames = Object.keys(businessMetrics[firstDateWithData]);\n                    return conceptNames.map((conceptName, conceptIndex) => (\n                      <tr key={`${configHash}-bm-${conceptName}`} className={conceptIndex % 2 === 0 ? 'bg-blue-25' : 'bg-white'}>\n                        <td className=\"px-4 py-2 text-sm font-medium text-blue-900 border-r capitalize\">\n                          {conceptName === 'trial_started' ? 'Trial Started' : \n                           conceptName === 'initial_purchase' ? 'Initial Purchase' : \n                           conceptName.replace(/_/g, ' ')}\n                        </td>\n                        {dates.map(date => (\n                          <td key={`${configHash}-bm-${conceptName}-${date}`} className=\"px-3 py-2 text-sm text-blue-800 text-center border-r font-medium\">\n                            {businessMetrics[date] && businessMetrics[date][conceptName]?.count !== undefined \n                              ? businessMetrics[date][conceptName].count\n                              : '-'\n                            }\n                          </td>\n                        ))}\n                      </tr>\n                    ));\n                  })()}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        )}\n        \n        {/* Raw Data Table */}\n        <div>\n          <h4 className=\"text-md font-medium mb-3 text-gray-800\">📊 Raw Data Metrics</h4>\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full border border-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-4 py-2 text-left text-sm font-medium text-gray-700 border-r\">\n                    Metric\n                  </th>\n                  {dates.map(date => (\n                    <th key={`${configHash}-rm-header-${date}`} className=\"px-3 py-2 text-center text-sm font-medium text-gray-700 border-r\">\n                      {date}\n                    </th>\n                  ))}\n                </tr>\n              </thead>\n              <tbody className=\"bg-white\">\n                {fields.map((field, fieldIndex) => (\n                  <tr key={`${configHash}-rm-${field}`} className={fieldIndex % 2 === 0 ? 'bg-gray-50' : 'bg-white'}>\n                    <td className=\"px-4 py-2 text-sm font-medium text-gray-900 border-r\">\n                      {field}\n                    </td>\n                    {dates.map(date => (\n                      <td key={`${configHash}-rm-${field}-${date}`} className=\"px-3 py-2 text-sm text-gray-700 text-center border-r\">\n                        {dateData[date] && dateData[date][field] !== undefined \n                          ? formatValue(field, dateData[date][field])\n                          : '-'\n                        }\n                      </td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        {/* Breakdown data if available */}\n        {hasBreakdowns && Object.keys(dateData).some(date => dateData[date]._breakdownData) && (\n          <div className=\"mt-6\">\n            <h5 className=\"text-sm font-medium text-gray-700 mb-3\">Breakdown Data</h5>\n            {dates.map(date => {\n              const breakdownData = dateData[date]._breakdownData;\n              if (!breakdownData || Object.keys(breakdownData).length === 0) return null;\n              \n              return (\n                <div key={`${configHash}-bd-${date}`} className=\"mb-4\">\n                  <h6 className=\"text-xs font-medium text-gray-600 mb-2\">{date}</h6>\n                  <div className=\"overflow-x-auto\">\n                    <table className=\"min-w-full border border-gray-200 text-xs\">\n                      <thead className=\"bg-gray-100\">\n                        <tr>\n                          <th className=\"px-2 py-1 text-left text-gray-700 border-r\">Breakdown</th>\n                          {fields.filter(isNumericField).map(field => (\n                            <th key={`${configHash}-bd-${date}-header-${field}`} className=\"px-2 py-1 text-center text-gray-700 border-r\">\n                              {field}\n                            </th>\n                          ))}\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {Object.entries(breakdownData).map(([breakdownKey, values]) => (\n                          <tr key={`${configHash}-bd-${date}-${breakdownKey}`} className=\"bg-white\">\n                            <td className=\"px-2 py-1 text-gray-900 border-r\">{breakdownKey}</td>\n                            {fields.filter(isNumericField).map(field => (\n                              <td key={`${configHash}-bd-${date}-${breakdownKey}-${field}`} className=\"px-2 py-1 text-center text-gray-700 border-r\">\n                                {formatValue(field, values[field] || 0)}\n                              </td>\n                            ))}\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center py-8\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500 mr-3\"></div>\n        <span>Loading historical data...</span>\n      </div>\n    );\n  }\n\n  if (configurations.length === 0) {\n    return (\n      <div className=\"text-center py-8 text-gray-500\">\n        <p>No historical data configurations found.</p>\n        <p className=\"text-sm mt-2\">Start a historical collection job to see data here.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex justify-between items-center\">\n        <h3 className=\"text-lg font-medium\">Historical Data Overview</h3>\n        <button \n          onClick={loadAllData}\n          className=\"text-sm text-blue-600 hover:text-blue-800\"\n        >\n          Refresh Data\n        </button>\n      </div>\n\n      {configurations.map(config => {\n        const isExpanded = expandedConfigs.has(config.config_hash);\n        const data = configData[config.config_hash];\n        const tableData = data ? processDataForTable(data) : null;\n\n        return (\n          <div key={config.config_hash} className=\"border border-gray-200 rounded-lg\">\n            <div \n              className=\"p-4 bg-gray-50 cursor-pointer hover:bg-gray-100\"\n              onClick={() => toggleConfigExpansion(config.config_hash)}\n            >\n              <div className=\"flex justify-between items-center\">\n                <div>\n                  <div className=\"font-medium text-gray-900\">\n                    Fields: {config.fields}\n                  </div>\n                  {config.breakdowns && (\n                    <div className=\"text-sm text-gray-600\">\n                      Breakdowns: {config.breakdowns}\n                    </div>\n                  )}\n                  <div className=\"text-sm text-gray-500 mt-1\">\n                    {config.day_count} days • {config.earliest_date} to {config.latest_date}\n                  </div>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <button\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      deleteConfiguration(config.config_hash);\n                    }}\n                    disabled={deletingConfig === config.config_hash}\n                    className=\"px-2 py-1 text-xs bg-red-500 text-white rounded hover:bg-red-600 disabled:bg-gray-400\"\n                    title=\"Delete this entire dataset\"\n                  >\n                    {deletingConfig === config.config_hash ? 'Deleting...' : 'Delete'}\n                  </button>\n                  <div className=\"text-gray-400\">\n                    {isExpanded ? '−' : '+'}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {isExpanded && (\n              <div className=\"p-4 border-t\">\n                {renderDataTable(config, tableData)}\n              </div>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default HistoricalDataViewer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}