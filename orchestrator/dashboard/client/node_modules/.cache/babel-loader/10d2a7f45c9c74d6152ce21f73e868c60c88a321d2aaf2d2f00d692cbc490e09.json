{"ast":null,"code":"var _jsxFileName = \"/Users/joshuakaufman/untitled folder 3/orchestrator/dashboard/client/src/components/DashboardGrid.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useState, Fragment, useRef, useEffect } from 'react';\nimport { ChevronDown, ChevronRight, BarChart2, Info, Layers, Table2, Search, AlignJustify, Play, Clock, Sparkles } from 'lucide-react';\nimport { AVAILABLE_COLUMNS } from './dashboard/DashboardControls';\nimport ROASSparkline from './dashboard/ROASSparkline';\n\n// Pipeline Update Badge Component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PipelineBadge = ({\n  isPipelineUpdated,\n  className = \"\"\n}) => {\n  if (!isPipelineUpdated) return null;\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: `inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200 ${className}`,\n    children: [/*#__PURE__*/_jsxDEV(Sparkles, {\n      size: 12,\n      className: \"mr-1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), \"Pipeline\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n// Estimated ROAS Tooltip Component\n_c = PipelineBadge;\nconst EstimatedRoasTooltip = ({\n  roas,\n  estimatedRevenue,\n  diffPercent,\n  spend,\n  colorClass,\n  pipelineUpdatedClass\n}) => {\n  _s();\n  const [showTooltip, setShowTooltip] = useState(false);\n  const [tooltipPosition, setTooltipPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const handleMouseEnter = e => {\n    setShowTooltip(true);\n    const rect = e.currentTarget.getBoundingClientRect();\n    setTooltipPosition({\n      x: rect.left + rect.width / 2,\n      y: rect.top - 10\n    });\n  };\n  const handleMouseLeave = () => {\n    setShowTooltip(false);\n  };\n  const adjustedRevenue = diffPercent > 0 ? estimatedRevenue / diffPercent : estimatedRevenue;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: `${colorClass} ${pipelineUpdatedClass} cursor-pointer hover:underline`,\n      onMouseEnter: handleMouseEnter,\n      onMouseLeave: handleMouseLeave,\n      children: formatNumber(roas, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), showTooltip && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed z-50 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-md shadow-lg p-3 min-w-64\",\n      style: {\n        left: tooltipPosition.x - 128,\n        // Center the tooltip\n        top: tooltipPosition.y - 10,\n        transform: 'translateY(-100%)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm font-semibold text-gray-900 dark:text-gray-100 mb-2\",\n        children: \"Estimated ROAS Calculation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-1 text-xs\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-700 dark:text-gray-300\",\n          children: [\"Original Est. Revenue: \", formatCurrency(estimatedRevenue)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), diffPercent > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-gray-700 dark:text-gray-300\",\n            children: [\"Trial Accuracy Ratio: \", formatPercentage(diffPercent), \" (Mixpanel/Meta)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-gray-700 dark:text-gray-300\",\n            children: [\"Adjusted Revenue: \", formatCurrency(adjustedRevenue)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-gray-500 dark:text-gray-400 text-xs italic\",\n            children: [\"(Revenue \\xF7 \", formatPercentage(diffPercent), \" to account for Meta accuracy)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-700 dark:text-gray-300\",\n          children: [\"Spend: \", formatCurrency(spend)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-t border-gray-200 dark:border-gray-600 mt-2 pt-2 font-medium\",\n          children: [\"Est. ROAS: \", formatCurrency(adjustedRevenue), \" \\xF7 \", formatCurrency(spend), \" = \", formatNumber(roas, 2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n// Accuracy Tooltip Component\n_s(EstimatedRoasTooltip, \"qptgSItwGfSomvjTX/ioyibQ2vk=\");\n_c2 = EstimatedRoasTooltip;\nconst AccuracyTooltip = ({\n  average,\n  breakdown,\n  colorClass,\n  pipelineUpdatedClass\n}) => {\n  _s2();\n  const [showTooltip, setShowTooltip] = useState(false);\n  const [tooltipPosition, setTooltipPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const ref = useRef(null);\n  const handleMouseEnter = e => {\n    setShowTooltip(true);\n    // Position tooltip relative to the cell\n    const rect = e.currentTarget.getBoundingClientRect();\n    setTooltipPosition({\n      x: rect.left + rect.width / 2,\n      y: rect.top - 10\n    });\n  };\n  const handleMouseLeave = () => {\n    setShowTooltip(false);\n  };\n\n  // Get color for accuracy level\n  const getAccuracyColor = level => {\n    switch (level.toLowerCase()) {\n      case 'very_high':\n        return 'text-green-700';\n      case 'high':\n        return 'text-green-600';\n      case 'medium':\n        return 'text-yellow-600';\n      case 'low':\n        return 'text-orange-600';\n      case 'very_low':\n        return 'text-red-600';\n      default:\n        return 'text-gray-600';\n    }\n  };\n  const formatLevelName = level => {\n    return level.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      ref: ref,\n      className: `${colorClass} ${pipelineUpdatedClass} cursor-pointer hover:underline`,\n      onMouseEnter: handleMouseEnter,\n      onMouseLeave: handleMouseLeave,\n      children: average\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), showTooltip && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed z-50 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-md shadow-lg p-3 min-w-48\",\n      style: {\n        left: tooltipPosition.x - 96,\n        // Center the tooltip (half of min-width)\n        top: tooltipPosition.y - 10,\n        transform: 'translateY(-100%)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm font-semibold text-gray-900 dark:text-gray-100 mb-2\",\n        children: \"Accuracy Breakdown\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-1\",\n        children: Object.entries(breakdown).sort(([, a], [, b]) => b.percentage - a.percentage) // Sort by percentage desc\n        .map(([level, data]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center text-xs\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `${getAccuracyColor(level)} font-medium`,\n            children: [formatLevelName(level), \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-700 dark:text-gray-300\",\n            children: [data.count, \" (\", data.percentage, \"%)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 19\n          }, this)]\n        }, level, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-t border-gray-200 dark:border-gray-600 mt-2 pt-2 text-xs text-gray-600 dark:text-gray-400\",\n        children: [\"Total Users: \", Object.values(breakdown).reduce((sum, data) => sum + data.count, 0)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n\n// Refund Rate Tooltip Component for showing minimum default explanations\n_s2(AccuracyTooltip, \"P86+FSo2IC0eUXt8Kez7ylOao1E=\");\n_c3 = AccuracyTooltip;\nconst RefundRateTooltip = ({\n  value,\n  type,\n  colorClass,\n  pipelineUpdatedClass\n}) => {\n  _s3();\n  const [showTooltip, setShowTooltip] = useState(false);\n  const [tooltipPosition, setTooltipPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const isMinimum = type === 'trial' ? Math.abs(value - 5.0) < 0.01 : Math.abs(value - 15.0) < 0.01;\n  const minimumRate = type === 'trial' ? '5%' : '15%';\n  if (!isMinimum) return null; // Only show tooltip for minimum values\n\n  const handleMouseEnter = e => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    setTooltipPosition({\n      x: rect.left + rect.width / 2,\n      y: rect.top - 10\n    });\n    setShowTooltip(true);\n  };\n  const handleMouseLeave = () => {\n    setShowTooltip(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: `${colorClass} ${pipelineUpdatedClass} cursor-help`,\n      onMouseEnter: handleMouseEnter,\n      onMouseLeave: handleMouseLeave,\n      children: \"*\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), showTooltip && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed z-50 bg-gray-900 text-white text-xs rounded px-2 py-1 max-w-xs\",\n      style: {\n        left: tooltipPosition.x,\n        top: tooltipPosition.y,\n        transform: 'translateX(-50%) translateY(-100%)'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-medium\",\n          children: \"Default Minimum Applied\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-1\",\n          children: [\"This rate defaulted to \", minimumRate, \" because either there weren't enough users or the calculated rate was lower. We use this minimum to ensure reliable estimates.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n// Helper to format numbers, e.g., with commas\n_s3(RefundRateTooltip, \"qptgSItwGfSomvjTX/ioyibQ2vk=\");\n_c4 = RefundRateTooltip;\nconst formatNumber = (num, digits = 0) => {\n  if (num === undefined || num === null) return 'N/A';\n  return num.toLocaleString(undefined, {\n    minimumFractionDigits: digits,\n    maximumFractionDigits: digits\n  });\n};\nconst formatCurrency = num => {\n  if (num === undefined || num === null) return 'N/A';\n  return num.toLocaleString(undefined, {\n    style: 'currency',\n    currency: 'USD'\n  });\n};\nconst formatPercentage = (num, digits = 2) => {\n  if (num === undefined || num === null) return 'N/A';\n  return `${(num * 100).toFixed(digits)}%`;\n};\n\n// Column categorization for event priority styling based on actual dashboard columns:\n// TRIAL columns: \"Trials (Meta)\", \"Trials (Mixpanel)\", etc.\nconst TRIAL_RELATED_COLUMNS = ['mixpanel_trials_started',\n// \"Trials (Mixpanel)\" \n'meta_trials_started',\n// \"Trials (Meta)\"\n'mixpanel_trials_ended',\n// \"Trials Ended (Mixpanel)\"\n'mixpanel_trials_in_progress',\n// \"Trials In Progress (Mixpanel)\"  \n'click_to_trial_rate',\n// \"Click to Trial Rate\"\n'mixpanel_cost_per_trial',\n// \"Cost per Trial (Mixpanel)\"\n'meta_cost_per_trial',\n// \"Cost per Trial (Meta)\"\n'trial_conversion_rate',\n// \"Trial Conversion Rate\" (rate of trials converting to purchases)\n'avg_trial_refund_rate',\n// \"Trial Refund Rate\" (rate of trial conversions that get refunded)\n'trial_accuracy_ratio' // \"Trial Accuracy Ratio\"\n];\n\n// PURCHASE columns: \"Purchases (Meta)\", \"Purchases (Mixpanel)\", etc.\nconst PURCHASE_RELATED_COLUMNS = ['mixpanel_purchases',\n// \"Purchases (Mixpanel)\"\n'meta_purchases',\n// \"Purchases (Meta)\"  \n'mixpanel_cost_per_purchase',\n// \"Cost per Purchase (Mixpanel)\"\n'meta_cost_per_purchase',\n// \"Cost per Purchase (Meta)\"\n'purchase_refund_rate',\n// \"Purchase Refund Rate\"\n'purchase_accuracy_ratio',\n// \"Purchase Accuracy Ratio\"\n'mixpanel_conversions_net_refunds',\n// \"Net Conversions (Mixpanel)\"\n'estimated_revenue_usd',\n// \"Estimated Revenue\"\n'mixpanel_revenue_usd',\n// \"Revenue (Mixpanel)\"\n'mixpanel_refunds_usd',\n// \"Refunds (Mixpanel)\"\n'profit',\n// \"Profit\"\n'estimated_roas' // \"ROAS\"\n];\n\n// Helper to determine event priority based on Mixpanel counts\n// Compares \"Trial Started by Mixpanel\" vs \"Purchases in Mixpanel\" \nconst getEventPriority = row => {\n  // Compares \"Trial Started by Mixpanel\" vs \"Purchases in Mixpanel\"\n  const trialsCount = row.mixpanel_trials_started || 0; // \"Trial Started by Mixpanel\"\n  const purchasesCount = row.mixpanel_purchases || 0; // \"Purchases in Mixpanel\"\n\n  // When both are zero, default to graying out purchase columns (make trials the priority)\n  if (trialsCount === 0 && purchasesCount === 0) return 'trials';\n\n  // When trials > purchases, gray out purchase columns (trials are priority)\n  if (trialsCount > purchasesCount) return 'trials';\n\n  // When purchases > trials, gray out trial columns (purchases are priority)  \n  if (purchasesCount > trialsCount) return 'purchases';\n\n  // If they're equal and both > 0, no graying out\n  return 'equal';\n};\n\n// Helper to check if a column should be grayed out based on event priority\nconst shouldGrayOutColumn = (columnKey, eventPriority) => {\n  if (eventPriority === 'equal') return false;\n\n  // When trials are priority, gray out purchase-related columns\n  if (eventPriority === 'trials' && PURCHASE_RELATED_COLUMNS.includes(columnKey)) {\n    return true;\n  }\n\n  // When purchases are priority, gray out trial-related columns\n  if (eventPriority === 'purchases' && TRIAL_RELATED_COLUMNS.includes(columnKey)) {\n    return true;\n  }\n  return false;\n};\n\n// Helper to get column type for visual differentiation\nconst getColumnType = columnKey => {\n  if (TRIAL_RELATED_COLUMNS.includes(columnKey)) return 'trial';\n  if (PURCHASE_RELATED_COLUMNS.includes(columnKey)) return 'purchase';\n  return 'neutral';\n};\n\n// Helper to get column background class based on type\nconst getColumnBackgroundClass = (columnKey, isHovered = false) => {\n  const columnType = getColumnType(columnKey);\n  if (isHovered) {\n    // Slightly stronger background on hover\n    switch (columnType) {\n      case 'trial':\n        return 'bg-blue-50 dark:bg-blue-900/20';\n      case 'purchase':\n        return 'bg-green-50 dark:bg-green-900/20';\n      default:\n        return '';\n      // No special hover background for neutral columns\n    }\n  } else {\n    // Subtle background for visual differentiation\n    switch (columnType) {\n      case 'trial':\n        return 'bg-blue-25 dark:bg-blue-900/10';\n      case 'purchase':\n        return 'bg-green-25 dark:bg-green-900/10';\n      default:\n        return '';\n      // No background for neutral columns - normal grey\n    }\n  }\n};\n\n// Helper to calculate derived values for missing fields\nconst calculateDerivedValues = row => {\n  const calculated = {\n    ...row\n  };\n\n  // Calculate new fields that don't exist in the data\n  if (calculated.spend && calculated.total_trials_started && calculated.total_trials_started > 0) {\n    calculated.cost_per_trial_mixpanel = calculated.spend / calculated.total_trials_started;\n  }\n  if (calculated.spend && calculated.total_conversions && calculated.total_conversions > 0) {\n    calculated.cost_per_purchase_mixpanel = calculated.spend / calculated.total_conversions;\n  }\n\n  // Trial conversion difference percentage (what percent Mixpanel trials are of Meta trials)\n  if (calculated.meta_trials_started && calculated.total_trials_started && calculated.meta_trials_started > 0) {\n    calculated.trial_conversion_diff_pct = calculated.total_trials_started / calculated.meta_trials_started;\n  }\n\n  // Profit calculation (Revenue - Spend)\n  if (calculated.revenue_usd !== undefined && calculated.spend !== undefined) {\n    calculated.profit = calculated.revenue_usd - calculated.spend;\n  }\n\n  // Estimated ROAS calculation (adjusted for Meta vs Mixpanel trial difference)\n  if (calculated.estimated_revenue_usd !== undefined && calculated.spend !== undefined && calculated.spend > 0) {\n    if (calculated.trial_conversion_diff_pct && calculated.trial_conversion_diff_pct > 0) {\n      // Adjust estimated revenue by dividing by the percentage (to scale up for Meta accuracy)\n      const adjustedRevenue = calculated.estimated_revenue_usd / calculated.trial_conversion_diff_pct;\n      calculated.estimated_roas = adjustedRevenue / calculated.spend;\n    } else {\n      // Fallback to standard calculation if no diff percentage available\n      calculated.estimated_roas = calculated.estimated_revenue_usd / calculated.spend;\n    }\n  }\n  return calculated;\n};\n\n// Field color - use normal text colors\nconst getFieldColor = (fieldName, value) => {\n  // Special color coding for accuracy column\n  if (fieldName === 'average_accuracy' && value) {\n    switch (value.toLowerCase()) {\n      case 'very high':\n        return 'text-green-700 dark:text-green-400';\n      case 'high':\n        return 'text-green-600 dark:text-green-400';\n      case 'medium':\n        return 'text-yellow-600 dark:text-yellow-400';\n      case 'low':\n        return 'text-orange-600 dark:text-orange-400';\n      case 'very low':\n        return 'text-red-600 dark:text-red-400';\n      default:\n        return 'text-gray-600 dark:text-gray-400';\n    }\n  }\n  // Use standard text colors for all other fields\n  return 'text-gray-900 dark:text-gray-100';\n};\n\n// Header color - use normal text colors\nconst getHeaderColor = fieldName => {\n  // Use standard header colors for all fields\n  return 'text-gray-700 dark:text-gray-300';\n};\n\n// ROAS color thresholds: <1 = Red, 1 = Yellow, >1.5 = Green\nconst roas_green_threshold = 1.5;\nconst roas_yellow_threshold = 1.0;\nconst getRoasColor = roas => {\n  if (roas === undefined || roas === null) return 'text-gray-500 dark:text-gray-400';\n  if (roas > roas_green_threshold) return 'text-green-600 dark:text-green-400';\n  if (roas >= roas_yellow_threshold) return 'text-amber-600 dark:text-amber-400';\n  return 'text-red-600 dark:text-red-400';\n};\nexport const DashboardGrid = ({\n  data = [],\n  rowOrder = [],\n  onRowOrderChange = null,\n  onRowAction = () => {},\n  columnVisibility = {},\n  columnOrder = [],\n  onColumnOrderChange = null,\n  runningPipelines = new Set(),\n  pipelineQueue = [],\n  activePipelineCount = 0,\n  maxConcurrentPipelines = 8,\n  dashboardParams = null\n}) => {\n  _s4();\n  const [expandedRows, setExpandedRows] = useState({});\n  const [expandedBreakdowns, setExpandedBreakdowns] = useState({});\n\n  // Column drag state\n  const [draggedColumn, setDraggedColumn] = useState(null);\n  const [dragOverColumn, setDragOverColumn] = useState(null);\n\n  // Row drag state\n  const [draggedRowId, setDraggedRowId] = useState(null);\n  const [dragOverRowId, setDragOverRowId] = useState(null);\n\n  // Get visible columns based on columnVisibility settings and column order\n  const getOrderedVisibleColumns = () => {\n    // Use column order if available, otherwise use default order\n    const orderToUse = columnOrder.length > 0 ? columnOrder : AVAILABLE_COLUMNS.map(col => col.key);\n\n    // Map the ordered keys to column objects, filtering out non-existent columns\n    const orderedColumns = orderToUse.map(key => AVAILABLE_COLUMNS.find(col => col.key === key)).filter(col => col); // Remove any undefined columns\n\n    // Filter by visibility\n    if (Object.keys(columnVisibility).length === 0) {\n      // If no visibility settings loaded yet, use default visibility\n      return orderedColumns.filter(col => col.defaultVisible);\n    } else {\n      // Use explicit visibility settings\n      return orderedColumns.filter(col => columnVisibility[col.key] !== false);\n    }\n  };\n  const visibleColumns = getOrderedVisibleColumns();\n\n  // Helper function to check if a column should be visible\n  const isColumnVisible = columnKey => {\n    if (Object.keys(columnVisibility).length === 0) {\n      // If no visibility settings loaded yet, check default\n      const column = AVAILABLE_COLUMNS.find(col => col.key === columnKey);\n      return column ? column.defaultVisible : false;\n    }\n    return columnVisibility[columnKey] !== false;\n  };\n\n  // Helper function to check if a pipeline is running for a specific row\n  const isPipelineRunning = rowId => {\n    return runningPipelines.has(rowId);\n  };\n\n  // Helper function to check if a pipeline is queued for a specific row\n  const isPipelineQueued = rowId => {\n    return pipelineQueue.some(item => item.id === rowId);\n  };\n\n  // Helper function to get pipeline status\n  const getPipelineStatus = rowId => {\n    if (isPipelineRunning(rowId)) return 'running';\n    if (isPipelineQueued(rowId)) return 'queued';\n    return 'idle';\n  };\n\n  // Helper function to render a cell value with proper formatting and coloring\n  const renderCellValue = (row, columnKey, isPipelineUpdated = false, eventPriority = null) => {\n    const calculatedRow = calculateDerivedValues(row);\n    let value = calculatedRow[columnKey];\n    let formattedValue = 'N/A';\n    let isEstimated = false;\n\n    // Format values based on column type\n    switch (columnKey) {\n      case 'spend':\n      case 'mixpanel_revenue_usd':\n      case 'estimated_revenue_usd':\n      case 'mixpanel_refunds_usd':\n      case 'profit':\n      case 'mixpanel_cost_per_trial':\n      case 'mixpanel_cost_per_purchase':\n      case 'meta_cost_per_trial':\n      case 'meta_cost_per_purchase':\n        formattedValue = formatCurrency(value);\n        break;\n      case 'impressions':\n      case 'clicks':\n      case 'mixpanel_trials_started':\n      case 'meta_trials_started':\n      case 'mixpanel_trials_ended':\n      case 'mixpanel_trials_in_progress':\n      case 'mixpanel_purchases':\n      case 'meta_purchases':\n      case 'mixpanel_converted_amount':\n      case 'mixpanel_conversions_net_refunds':\n      case 'total_attributed_users':\n        formattedValue = formatNumber(value);\n        break;\n      case 'click_to_trial_rate':\n      case 'trial_conversion_rate':\n      case 'trial_accuracy_ratio':\n      case 'purchase_accuracy_ratio':\n        formattedValue = value !== undefined && value !== null ? `${formatNumber(value, 2)}%` : 'N/A';\n        break;\n      case 'avg_trial_refund_rate':\n        if (value !== undefined && value !== null) {\n          const roundedValue = formatNumber(value, 2);\n          const hasMinimumFlag = Math.abs(value - 5.0) < 0.01;\n          formattedValue = /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [roundedValue, \"%\", hasMinimumFlag && /*#__PURE__*/_jsxDEV(RefundRateTooltip, {\n              value: value,\n              type: \"trial\",\n              colorClass: \"text-blue-500\",\n              pipelineUpdatedClass: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 13\n          }, this);\n        } else {\n          formattedValue = 'N/A';\n        }\n        break;\n      case 'purchase_refund_rate':\n        if (value !== undefined && value !== null) {\n          const roundedValue = formatNumber(value, 2);\n          const hasMinimumFlag = Math.abs(value - 15.0) < 0.01;\n          formattedValue = /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [roundedValue, \"%\", hasMinimumFlag && /*#__PURE__*/_jsxDEV(RefundRateTooltip, {\n              value: value,\n              type: \"purchase\",\n              colorClass: \"text-orange-500\",\n              pipelineUpdatedClass: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 13\n          }, this);\n        } else {\n          formattedValue = 'N/A';\n        }\n        break;\n      case 'estimated_roas':\n        formattedValue = formatNumber(value, 2);\n        break;\n      case 'segment_accuracy_average':\n        formattedValue = value || 'N/A';\n        break;\n      default:\n        formattedValue = value || 'N/A';\n    }\n\n    // Apply special styling for ROAS columns\n    let colorClass = getFieldColor(columnKey, value);\n    if (columnKey === 'estimated_roas') {\n      colorClass = getRoasColor(value);\n    }\n\n    // Check if this column should be grayed out based on event priority\n    if (eventPriority && shouldGrayOutColumn(columnKey, eventPriority)) {\n      colorClass = 'text-gray-500 dark:text-gray-500';\n    }\n\n    // Add pipeline update styling for key metrics\n    const pipelineUpdatedClass = isPipelineUpdated && ['mixpanel_purchases', 'mixpanel_revenue_usd', 'estimated_revenue_usd', 'estimated_roas', 'mixpanel_trials_started', 'mixpanel_refunds_usd', 'segment_accuracy_average'].includes(columnKey) ? 'font-bold text-green-600 dark:text-green-400' : '';\n\n    // Special rendering for accuracy column with tooltip\n    if (columnKey === 'segment_accuracy_average' && row.accuracy_breakdown) {\n      return /*#__PURE__*/_jsxDEV(AccuracyTooltip, {\n        average: formattedValue,\n        breakdown: row.accuracy_breakdown,\n        colorClass: colorClass,\n        pipelineUpdatedClass: pipelineUpdatedClass\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 9\n      }, this);\n    }\n\n    // Special rendering for estimated ROAS column with sparkline\n    if (columnKey === 'estimated_roas') {\n      // Extract the actual ID from the row.id field (format: \"campaign_123\", \"adset_456\", \"ad_789\")\n      const entityId = row.id ? row.id.split('_')[1] : null;\n      return /*#__PURE__*/_jsxDEV(ROASSparkline, {\n        entityType: row.type,\n        entityId: entityId,\n        currentROAS: value,\n        conversionCount: calculatedRow.mixpanel_purchases || 0,\n        breakdown: (dashboardParams === null || dashboardParams === void 0 ? void 0 : dashboardParams.breakdown) || 'all',\n        startDate: (dashboardParams === null || dashboardParams === void 0 ? void 0 : dashboardParams.start_date) || '2025-04-01',\n        endDate: (dashboardParams === null || dashboardParams === void 0 ? void 0 : dashboardParams.end_date) || '2025-04-10'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `${colorClass} ${pipelineUpdatedClass}`,\n      children: [formattedValue, isEstimated && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-1 text-xs\",\n        children: \"*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Simple column drag handlers\n  const handleColumnDragStart = (e, columnKey) => {\n    setDraggedColumn(columnKey);\n    e.dataTransfer.effectAllowed = 'move';\n    e.dataTransfer.setData('text/plain', columnKey);\n\n    // Add visual feedback\n    e.target.style.opacity = '0.5';\n  };\n  const handleColumnDragOver = e => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n  };\n  const handleColumnDragEnter = (e, columnKey) => {\n    e.preventDefault();\n    if (draggedColumn && draggedColumn !== columnKey) {\n      setDragOverColumn(columnKey);\n    }\n  };\n  const handleColumnDragLeave = e => {\n    e.preventDefault();\n    // Only clear if we're actually leaving the column\n    if (!e.currentTarget.contains(e.relatedTarget)) {\n      setDragOverColumn(null);\n    }\n  };\n  const handleColumnDrop = (e, targetColumnKey) => {\n    e.preventDefault();\n    if (!draggedColumn || draggedColumn === targetColumnKey) {\n      handleColumnDragEnd(e);\n      return;\n    }\n\n    // Get the visible columns order\n    const visibleColumnKeys = visibleColumns.slice(1).map(col => col.key);\n    const draggedIndex = visibleColumnKeys.indexOf(draggedColumn);\n    const targetIndex = visibleColumnKeys.indexOf(targetColumnKey);\n    if (draggedIndex === -1 || targetIndex === -1) {\n      handleColumnDragEnd(e);\n      return;\n    }\n\n    // Create new visible order\n    const newVisibleOrder = [...visibleColumnKeys];\n    const [movedColumn] = newVisibleOrder.splice(draggedIndex, 1);\n    newVisibleOrder.splice(targetIndex, 0, movedColumn);\n\n    // Reconstruct full column order\n    const fullOrder = columnOrder.length > 0 ? [...columnOrder] : AVAILABLE_COLUMNS.map(col => col.key);\n    const newFullOrder = ['name']; // Always keep name first\n\n    // Add the reordered visible columns\n    newVisibleOrder.forEach(key => {\n      if (!newFullOrder.includes(key)) {\n        newFullOrder.push(key);\n      }\n    });\n\n    // Add any remaining columns that aren't visible\n    fullOrder.forEach(key => {\n      if (!newFullOrder.includes(key)) {\n        newFullOrder.push(key);\n      }\n    });\n    console.log('🔄 Column drag reorder:', {\n      dragged: draggedColumn,\n      target: targetColumnKey,\n      newOrder: newFullOrder\n    });\n    if (onColumnOrderChange) {\n      onColumnOrderChange(newFullOrder);\n    }\n    handleColumnDragEnd(e);\n  };\n  const handleColumnDragEnd = e => {\n    // Reset visual feedback\n    if (e.target) {\n      e.target.style.opacity = '';\n    }\n    setDraggedColumn(null);\n    setDragOverColumn(null);\n  };\n\n  // Row drag handlers\n  const handleRowDragStart = (e, id) => {\n    setDraggedRowId(id);\n    e.dataTransfer.effectAllowed = 'move';\n    e.dataTransfer.setDragImage(new Image(), 0, 0); // hide ghost for cleaner UX\n  };\n  const handleRowDragEnter = (e, id) => {\n    e.preventDefault();\n    if (id !== dragOverRowId) setDragOverRowId(id);\n  };\n  const handleRowDrop = (e, targetId) => {\n    e.preventDefault();\n    if (!draggedRowId || draggedRowId === targetId) return;\n    const newOrder = [...rowOrder];\n    const from = newOrder.indexOf(draggedRowId);\n    const to = newOrder.indexOf(targetId);\n    newOrder.splice(to, 0, newOrder.splice(from, 1)[0]);\n    onRowOrderChange === null || onRowOrderChange === void 0 ? void 0 : onRowOrderChange(newOrder);\n    cleanupRowDrag();\n  };\n  const handleRowDragEnd = cleanupRowDrag;\n  function cleanupRowDrag() {\n    setDraggedRowId(null);\n    setDragOverRowId(null);\n  }\n  const toggleExpand = id => {\n    setExpandedRows(prev => ({\n      ...prev,\n      [id]: !prev[id]\n    }));\n  };\n  const toggleBreakdown = id => {\n    setExpandedBreakdowns(prev => ({\n      ...prev,\n      [id]: !prev[id]\n    }));\n  };\n  const expandAllRows = () => {\n    const newExpandedRows = {};\n    const processRows = rows => {\n      rows.forEach(row => {\n        newExpandedRows[row.id] = true;\n        if (row.children) {\n          processRows(row.children);\n        }\n      });\n    };\n    processRows(data);\n    setExpandedRows(newExpandedRows);\n  };\n  const collapseAllRows = () => {\n    setExpandedRows({});\n  };\n  const expandAllBreakdowns = () => {\n    const newExpandedBreakdowns = {};\n    const processRows = rows => {\n      rows.forEach(row => {\n        if (row.breakdowns && row.breakdowns.length > 0) {\n          newExpandedBreakdowns[row.id] = true;\n        }\n        if (row.children) {\n          processRows(row.children);\n        }\n      });\n    };\n    processRows(data);\n    setExpandedBreakdowns(newExpandedBreakdowns);\n  };\n  const collapseAllBreakdowns = () => {\n    setExpandedBreakdowns({});\n  };\n  const renderAllBreakdownRows = (row, level) => {\n    const breakdownNodes = [];\n    if (!row.breakdowns) return breakdownNodes;\n    row.breakdowns.forEach(breakdown => {\n      breakdownNodes.push(/*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"border-b border-gray-200 dark:border-gray-700 bg-gray-50/50 dark:bg-gray-900/50\",\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"sticky left-0 px-3 py-1 whitespace-nowrap bg-gray-50/50 dark:bg-gray-900/50 z-10\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"opacity-0 w-8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 814,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                paddingLeft: `${(level + 1) * 20}px`\n              },\n              className: \"text-xs font-medium text-gray-500 dark:text-gray-400\",\n              children: breakdown.type.charAt(0).toUpperCase() + breakdown.type.slice(1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 815,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 813,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 812,\n          columnNumber: 11\n        }, this), visibleColumns.slice(1).map(column => /*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: 1\n        }, column.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 821,\n          columnNumber: 13\n        }, this))]\n      }, `${row.id}-${breakdown.type}-header`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 811,\n        columnNumber: 9\n      }, this));\n      breakdown.values.forEach((value, index) => {\n        const calculatedValue = calculateDerivedValues(value);\n        breakdownNodes.push(/*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"border-b border-gray-200 dark:border-gray-700 bg-gray-50/30 dark:bg-gray-900/30 text-xs\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"sticky left-0 px-3 py-1 whitespace-nowrap bg-gray-50/30 dark:bg-gray-900/30 z-10\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"opacity-0 w-8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 832,\n                columnNumber: 17\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  paddingLeft: `${(level + 1) * 20 + 12}px`\n                },\n                className: \"text-gray-500 italic\",\n                children: value.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 833,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 831,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 830,\n            columnNumber: 13\n          }, this), visibleColumns.slice(1).map(column => {\n            if (column.key === 'campaign_name' || column.key === 'adset_name') {\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-3 py-1\"\n              }, column.key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 840,\n                columnNumber: 24\n              }, this);\n            }\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-3 py-1 whitespace-nowrap text-right\",\n              children: renderCellValue(calculatedValue, column.key, false, getEventPriority(calculatedValue))\n            }, column.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 843,\n              columnNumber: 17\n            }, this);\n          })]\n        }, `${row.id}-${breakdown.type}-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 829,\n          columnNumber: 11\n        }, this));\n      });\n    });\n    return breakdownNodes;\n  };\n  const renderRow = (row, level) => {\n    const isExpanded = !!expandedRows[row.id];\n    const isBreakdownExpanded = !!expandedBreakdowns[row.id];\n    const rowNodes = [];\n\n    // Check if this row has been updated with pipeline data\n    const isPipelineUpdated = row._pipelineUpdated;\n    const pipelineTimestamp = row._pipelineTimestamp;\n    const calculatedRow = calculateDerivedValues(row);\n\n    // Determine event priority\n    const eventPriority = getEventPriority(row);\n    rowNodes.push(/*#__PURE__*/_jsxDEV(\"tr\", {\n      draggable: level === 0,\n      onDragStart: e => handleRowDragStart(e, row.id),\n      onDragEnter: e => handleRowDragEnter(e, row.id),\n      onDragOver: e => e.preventDefault(),\n      onDrop: e => handleRowDrop(e, row.id),\n      onDragEnd: handleRowDragEnd,\n      className: `border-b border-gray-200 dark:border-gray-700 ${level === 0 ? 'bg-gray-50 dark:bg-gray-800 font-semibold' : level === 1 ? 'bg-white dark:bg-gray-700 text-gray-800 dark:text-gray-200' : 'bg-gray-100 dark:bg-gray-600 text-gray-800 dark:text-gray-200'} ${isPipelineUpdated || row._pipelineUpdated ? 'ring-2 ring-green-400 bg-green-50 dark:bg-green-900/20' : ''} ${draggedRowId === row.id ? 'opacity-50' : ''} ${dragOverRowId === row.id && draggedRowId !== row.id ? 'ring-2 ring-blue-400' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        className: `sticky left-0 px-3 py-2 whitespace-nowrap z-10 ${level === 0 ? isPipelineUpdated || row._pipelineUpdated ? 'bg-green-50 dark:bg-green-900/20' : 'bg-gray-50 dark:bg-gray-800' : level === 1 ? isPipelineUpdated || row._pipelineUpdated ? 'bg-green-50 dark:bg-green-900/20' : 'bg-white dark:bg-gray-700' : isPipelineUpdated || row._pipelineUpdated ? 'bg-green-50 dark:bg-green-900/20' : 'bg-gray-100 dark:bg-gray-600'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onRowAction('graph', row),\n            className: \"mr-2 p-1 hover:text-blue-500\",\n            title: \"View Chart\",\n            children: /*#__PURE__*/_jsxDEV(BarChart2, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 896,\n              columnNumber: 123\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 896,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onRowAction('debug', row),\n            className: \"mr-2 p-1 hover:text-orange-500\",\n            title: \"Debug Info\",\n            children: /*#__PURE__*/_jsxDEV(Info, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 897,\n              columnNumber: 125\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 897,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onRowAction('pipeline', row),\n            disabled: isPipelineRunning(row.id) || isPipelineQueued(row.id),\n            className: `mr-2 p-1 ${isPipelineRunning(row.id) ? 'text-green-500 cursor-not-allowed' : isPipelineQueued(row.id) ? 'text-yellow-500 cursor-not-allowed' : 'hover:text-green-500'}`,\n            title: isPipelineRunning(row.id) ? 'Pipeline Running...' : isPipelineQueued(row.id) ? 'Pipeline Queued...' : 'Run Pipeline',\n            children: isPipelineRunning(row.id) ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"animate-spin rounded-full h-4 w-4 border-b-2 border-green-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 913,\n              columnNumber: 17\n            }, this) : isPipelineQueued(row.id) ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"animate-pulse rounded-full h-4 w-4 border-2 border-yellow-500 bg-yellow-200\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 915,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Play, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 917,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 898,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onRowAction('timeline', row),\n            className: \"mr-2 p-1 hover:text-purple-500\",\n            title: \"View Timeline\",\n            children: /*#__PURE__*/_jsxDEV(Clock, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 920,\n              columnNumber: 131\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 920,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                paddingLeft: `${level * 20}px`\n              },\n              children: row.children && row.children.length > 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => toggleExpand(row.id),\n                className: \"mr-1 p-1\",\n                children: isExpanded ? /*#__PURE__*/_jsxDEV(ChevronDown, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 925,\n                  columnNumber: 35\n                }, this) : /*#__PURE__*/_jsxDEV(ChevronRight, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 925,\n                  columnNumber: 63\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 924,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"inline-block w-8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 928,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 922,\n              columnNumber: 15\n            }, this), row.breakdowns && row.breakdowns.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleBreakdown(row.id),\n              className: `mr-2 p-1 rounded ${isBreakdownExpanded ? 'text-blue-500 bg-blue-100 dark:bg-blue-900/30' : 'text-gray-400 hover:text-blue-400'}`,\n              title: \"Toggle breakdowns\",\n              children: /*#__PURE__*/_jsxDEV(Search, {\n                size: 14\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 938,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 933,\n              columnNumber: 17\n            }, this), (isPipelineUpdated || row._pipelineUpdated) && /*#__PURE__*/_jsxDEV(PipelineBadge, {\n              isPipelineUpdated: true,\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 944,\n              columnNumber: 17\n            }, this), isPipelineRunning(row.id) && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mr-2 px-2 py-1 bg-blue-100 dark:bg-blue-800 text-blue-800 dark:text-blue-200 text-xs rounded-full animate-pulse\",\n              children: \"\\uD83D\\uDD04 Running\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 952,\n              columnNumber: 17\n            }, this), isPipelineQueued(row.id) && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mr-2 px-2 py-1 bg-yellow-100 dark:bg-yellow-800 text-yellow-800 dark:text-yellow-200 text-xs rounded-full animate-pulse\",\n              children: \"\\u23F3 Queued\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 959,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `${level === 0 ? 'text-gray-900 dark:text-gray-100' : level === 1 ? 'text-gray-800 dark:text-gray-200' : 'text-gray-700 dark:text-gray-100'}`,\n              children: level === 0 ? row.name || row.campaign_name : level === 1 ? row.name || row.adset_name : row.name || row.ad_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 964,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 921,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 895,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 888,\n        columnNumber: 9\n      }, this), visibleColumns.slice(1).map(column => {\n        // Special handling for campaign/adset name columns based on level\n        if (column.key === 'campaign_name') {\n          if (level > 0) {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-3 py-2 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\",\n              children: row.campaign_name\n            }, column.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 981,\n              columnNumber: 22\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-3 py-2\"\n            }, column.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 983,\n              columnNumber: 22\n            }, this);\n          }\n        }\n        if (column.key === 'adset_name') {\n          if (level > 1) {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-3 py-2 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\",\n              children: row.adset_name\n            }, column.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 989,\n              columnNumber: 22\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-3 py-2\"\n            }, column.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 991,\n              columnNumber: 22\n            }, this);\n          }\n        }\n\n        // Regular data columns\n        const fieldColor = getFieldColor(column.key, calculatedRow[column.key]);\n        const isRoasColumn = column.key === 'roas' || column.key === 'estimated_roas';\n        const roasColor = isRoasColumn ? getRoasColor(calculatedRow[column.key]) : '';\n        const finalColor = isRoasColumn ? roasColor : fieldColor;\n        const pipelineHighlight = (isPipelineUpdated || row._pipelineUpdated) && ['total_conversions', 'revenue_usd', 'estimated_conversions', 'estimated_revenue_usd', 'roas', 'estimated_roas', 'total_trials_started', 'total_refunds_usd', 'total_converted_amount_mixpanel', 'mixpanel_trials', 'mixpanel_purchases', 'estimated_roas', 'profit'].includes(column.key) ? 'font-bold text-green-600 dark:text-green-400' : '';\n\n        // Check if the column should be grayed out based on event priority\n        const shouldGrayOut = shouldGrayOutColumn(column.key, eventPriority);\n        const grayedOutColor = shouldGrayOut ? 'text-gray-500 dark:text-gray-500' : finalColor;\n\n        // Get column background class for visual differentiation\n        const columnBackgroundClass = getColumnBackgroundClass(column.key);\n        return /*#__PURE__*/_jsxDEV(\"td\", {\n          className: `px-3 py-2 whitespace-nowrap text-right ${grayedOutColor} ${pipelineHighlight} ${isRoasColumn ? 'font-medium' : ''} ${columnBackgroundClass}`,\n          children: renderCellValue(calculatedRow, column.key, isPipelineUpdated, eventPriority)\n        }, column.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1013,\n          columnNumber: 15\n        }, this);\n      })]\n    }, row.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 871,\n      columnNumber: 7\n    }, this));\n    if (isBreakdownExpanded && row.breakdowns) {\n      rowNodes.push(...renderAllBreakdownRows(row, level));\n    }\n    if (isExpanded && row.children) {\n      row.children.forEach(childRow => {\n        rowNodes.push(...renderRow(childRow, level + 1));\n      });\n    }\n    return rowNodes;\n  };\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 text-center text-gray-500 dark:text-gray-400\",\n      children: \"No data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1034,\n      columnNumber: 12\n    }, this);\n  }\n  const orderedData = rowOrder.length ? rowOrder.map(id => data.find(r => r.id === id)).filter(Boolean) : data;\n  const allRows = orderedData.reduce((acc, campaign) => acc.concat(renderRow(campaign, 0)), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shadow-soft rounded-2xl\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white dark:bg-gray-800 px-4 py-2 flex space-x-4 border-b border-gray-200 dark:border-gray-700\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline-flex rounded-md shadow-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: expandAllRows,\n          className: \"px-3 py-1.5 text-xs font-medium bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-200 rounded-l-lg border border-gray-300 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600 flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Layers, {\n            size: 14,\n            className: \"mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1054,\n            columnNumber: 13\n          }, this), \" Expand All\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1050,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: collapseAllRows,\n          className: \"px-3 py-1.5 text-xs font-medium bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-200 rounded-r-lg border border-l-0 border-gray-300 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600 flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Table2, {\n            size: 14,\n            className: \"mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1060,\n            columnNumber: 13\n          }, this), \" Collapse All\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1056,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1049,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline-flex rounded-md shadow-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: expandAllBreakdowns,\n          className: \"px-3 py-1.5 text-xs font-medium bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-200 rounded-l-lg border border-gray-300 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600 flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Search, {\n            size: 14,\n            className: \"mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1069,\n            columnNumber: 13\n          }, this), \" Show Breakdowns\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1065,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: collapseAllBreakdowns,\n          className: \"px-3 py-1.5 text-xs font-medium bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-200 rounded-r-lg border border-l-0 border-gray-300 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600 flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(AlignJustify, {\n            size: 14,\n            className: \"mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1075,\n            columnNumber: 13\n          }, this), \" Hide Breakdowns\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1071,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1064,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-4 ml-auto text-xs\",\n        children: [(runningPipelines.size > 0 || pipelineQueue.length > 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [runningPipelines.size > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center bg-blue-100 dark:bg-blue-900 px-2 py-1 rounded-full\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"animate-spin rounded-full h-3 w-3 border-b border-blue-600 dark:border-blue-400 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1088,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-blue-800 dark:text-blue-200 font-medium\",\n              children: [runningPipelines.size, \" active\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1089,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1087,\n            columnNumber: 17\n          }, this), pipelineQueue.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center bg-yellow-100 dark:bg-yellow-900 px-2 py-1 rounded-full\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"animate-pulse rounded-full h-3 w-3 bg-yellow-600 dark:bg-yellow-400 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1097,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-yellow-800 dark:text-yellow-200 font-medium\",\n              children: [pipelineQueue.length, \" queued\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1098,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1096,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-gray-500 dark:text-gray-400 text-xs\",\n            children: [\"(\", activePipelineCount, \"/\", maxConcurrentPipelines, \" concurrent)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1104,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1085,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-green-600 dark:text-green-400 mr-1\",\n            children: \"\\u2728\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-600 dark:text-gray-400\",\n            children: \"Pipeline Enhanced\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1082,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1048,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"min-w-full divide-y divide-gray-200 dark:divide-gray-700 text-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"bg-gray-100 dark:bg-gray-800\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              className: \"sticky left-0 px-3 py-3 text-left text-xs font-medium uppercase tracking-wider bg-gray-100 dark:bg-gray-800 z-20\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1123,\n              columnNumber: 15\n            }, this), visibleColumns.slice(1).map(column => {\n              const columnType = getColumnType(column.key);\n              const backgroundClass = getColumnBackgroundClass(column.key, dragOverColumn === column.key);\n              return /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                draggable: !column.alwaysVisible,\n                onDragStart: e => handleColumnDragStart(e, column.key),\n                onDragOver: handleColumnDragOver,\n                onDragEnter: e => handleColumnDragEnter(e, column.key),\n                onDragLeave: handleColumnDragLeave,\n                onDrop: e => handleColumnDrop(e, column.key),\n                onDragEnd: handleColumnDragEnd,\n                className: `px-3 py-3 text-${column.key === 'campaign_name' || column.key === 'adset_name' ? 'left' : 'right'} text-xs font-medium uppercase tracking-wider ${getHeaderColor(column.key)} ${backgroundClass}\n                      ${!column.alwaysVisible ? 'cursor-move select-none hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors duration-150' : ''} \n                      ${dragOverColumn === column.key && draggedColumn !== column.key ? 'bg-blue-100 dark:bg-blue-900 border-2 border-blue-300 dark:border-blue-600' : ''}\n                      ${columnType === 'trial' ? 'border-l-2 border-blue-200 dark:border-blue-800' : ''}\n                      ${columnType === 'purchase' ? 'border-l-2 border-green-200 dark:border-green-800' : ''}`,\n                title: !column.alwaysVisible ? `Drag to reorder \"${column.label}\" column` : '',\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center justify-between\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: column.label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1151,\n                    columnNumber: 21\n                  }, this), !column.alwaysVisible && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"ml-1 text-gray-400 dark:text-gray-500 text-lg leading-none hover:text-gray-600 dark:hover:text-gray-300 transition-colors duration-150\",\n                    style: {\n                      transform: 'rotate(90deg)'\n                    },\n                    children: \"\\u22EE\\u22EE\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1153,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1150,\n                  columnNumber: 19\n                }, this)\n              }, column.key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1133,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          className: \"bg-white dark:bg-gray-900 divide-y divide-gray-200 dark:divide-gray-700\",\n          children: allRows.map(row => /*#__PURE__*/_jsxDEV(Fragment, {\n            children: row\n          }, row.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1162,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1047,\n    columnNumber: 5\n  }, this);\n};\n_s4(DashboardGrid, \"jHHh205hRkoeTmahutxKsiJjZ4M=\");\n_c5 = DashboardGrid;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"PipelineBadge\");\n$RefreshReg$(_c2, \"EstimatedRoasTooltip\");\n$RefreshReg$(_c3, \"AccuracyTooltip\");\n$RefreshReg$(_c4, \"RefundRateTooltip\");\n$RefreshReg$(_c5, \"DashboardGrid\");","map":{"version":3,"names":["React","useState","Fragment","useRef","useEffect","ChevronDown","ChevronRight","BarChart2","Info","Layers","Table2","Search","AlignJustify","Play","Clock","Sparkles","AVAILABLE_COLUMNS","ROASSparkline","jsxDEV","_jsxDEV","_Fragment","PipelineBadge","isPipelineUpdated","className","children","size","fileName","_jsxFileName","lineNumber","columnNumber","_c","EstimatedRoasTooltip","roas","estimatedRevenue","diffPercent","spend","colorClass","pipelineUpdatedClass","_s","showTooltip","setShowTooltip","tooltipPosition","setTooltipPosition","x","y","handleMouseEnter","e","rect","currentTarget","getBoundingClientRect","left","width","top","handleMouseLeave","adjustedRevenue","onMouseEnter","onMouseLeave","formatNumber","style","transform","formatCurrency","formatPercentage","_c2","AccuracyTooltip","average","breakdown","_s2","ref","getAccuracyColor","level","toLowerCase","formatLevelName","split","map","word","charAt","toUpperCase","slice","join","Object","entries","sort","a","b","percentage","data","count","values","reduce","sum","_c3","RefundRateTooltip","value","type","_s3","isMinimum","Math","abs","minimumRate","_c4","num","digits","undefined","toLocaleString","minimumFractionDigits","maximumFractionDigits","currency","toFixed","TRIAL_RELATED_COLUMNS","PURCHASE_RELATED_COLUMNS","getEventPriority","row","trialsCount","mixpanel_trials_started","purchasesCount","mixpanel_purchases","shouldGrayOutColumn","columnKey","eventPriority","includes","getColumnType","getColumnBackgroundClass","isHovered","columnType","calculateDerivedValues","calculated","total_trials_started","cost_per_trial_mixpanel","total_conversions","cost_per_purchase_mixpanel","meta_trials_started","trial_conversion_diff_pct","revenue_usd","profit","estimated_revenue_usd","estimated_roas","getFieldColor","fieldName","getHeaderColor","roas_green_threshold","roas_yellow_threshold","getRoasColor","DashboardGrid","rowOrder","onRowOrderChange","onRowAction","columnVisibility","columnOrder","onColumnOrderChange","runningPipelines","Set","pipelineQueue","activePipelineCount","maxConcurrentPipelines","dashboardParams","_s4","expandedRows","setExpandedRows","expandedBreakdowns","setExpandedBreakdowns","draggedColumn","setDraggedColumn","dragOverColumn","setDragOverColumn","draggedRowId","setDraggedRowId","dragOverRowId","setDragOverRowId","getOrderedVisibleColumns","orderToUse","length","col","key","orderedColumns","find","filter","keys","defaultVisible","visibleColumns","isColumnVisible","column","isPipelineRunning","rowId","has","isPipelineQueued","some","item","id","getPipelineStatus","renderCellValue","calculatedRow","formattedValue","isEstimated","roundedValue","hasMinimumFlag","accuracy_breakdown","entityId","entityType","currentROAS","conversionCount","startDate","start_date","endDate","end_date","handleColumnDragStart","dataTransfer","effectAllowed","setData","target","opacity","handleColumnDragOver","preventDefault","dropEffect","handleColumnDragEnter","handleColumnDragLeave","contains","relatedTarget","handleColumnDrop","targetColumnKey","handleColumnDragEnd","visibleColumnKeys","draggedIndex","indexOf","targetIndex","newVisibleOrder","movedColumn","splice","fullOrder","newFullOrder","forEach","push","console","log","dragged","newOrder","handleRowDragStart","setDragImage","Image","handleRowDragEnter","handleRowDrop","targetId","from","to","cleanupRowDrag","handleRowDragEnd","toggleExpand","prev","toggleBreakdown","expandAllRows","newExpandedRows","processRows","rows","collapseAllRows","expandAllBreakdowns","newExpandedBreakdowns","breakdowns","collapseAllBreakdowns","renderAllBreakdownRows","breakdownNodes","paddingLeft","colSpan","index","calculatedValue","name","renderRow","isExpanded","isBreakdownExpanded","rowNodes","_pipelineUpdated","pipelineTimestamp","_pipelineTimestamp","draggable","onDragStart","onDragEnter","onDragOver","onDrop","onDragEnd","onClick","title","disabled","campaign_name","adset_name","ad_name","fieldColor","isRoasColumn","roasColor","finalColor","pipelineHighlight","shouldGrayOut","grayedOutColor","columnBackgroundClass","childRow","orderedData","r","Boolean","allRows","acc","campaign","concat","scope","backgroundClass","alwaysVisible","onDragLeave","label","_c5","$RefreshReg$"],"sources":["/Users/joshuakaufman/untitled folder 3/orchestrator/dashboard/client/src/components/DashboardGrid.js"],"sourcesContent":["import React, { useState, Fragment, useRef, useEffect } from 'react';\nimport { ChevronDown, ChevronRight, BarChart2, Info, Layers, Table2, Search, AlignJustify, Play, Clock, Sparkles } from 'lucide-react';\nimport { AVAILABLE_COLUMNS } from './dashboard/DashboardControls';\nimport ROASSparkline from './dashboard/ROASSparkline';\n\n// Pipeline Update Badge Component\nconst PipelineBadge = ({ isPipelineUpdated, className = \"\" }) => {\n  if (!isPipelineUpdated) return null;\n  \n  return (\n    <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200 ${className}`}>\n      <Sparkles size={12} className=\"mr-1\" />\n      Pipeline\n    </span>\n  );\n};\n\n// Estimated ROAS Tooltip Component\nconst EstimatedRoasTooltip = ({ roas, estimatedRevenue, diffPercent, spend, colorClass, pipelineUpdatedClass }) => {\n  const [showTooltip, setShowTooltip] = useState(false);\n  const [tooltipPosition, setTooltipPosition] = useState({ x: 0, y: 0 });\n\n  const handleMouseEnter = (e) => {\n    setShowTooltip(true);\n    const rect = e.currentTarget.getBoundingClientRect();\n    setTooltipPosition({\n      x: rect.left + rect.width / 2,\n      y: rect.top - 10\n    });\n  };\n\n  const handleMouseLeave = () => {\n    setShowTooltip(false);\n  };\n\n  const adjustedRevenue = diffPercent > 0 ? estimatedRevenue / diffPercent : estimatedRevenue;\n\n  return (\n    <div className=\"relative\">\n      <span \n        className={`${colorClass} ${pipelineUpdatedClass} cursor-pointer hover:underline`}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        {formatNumber(roas, 2)}\n      </span>\n      \n      {showTooltip && (\n        <div \n          className=\"fixed z-50 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-md shadow-lg p-3 min-w-64\"\n          style={{\n            left: tooltipPosition.x - 128, // Center the tooltip\n            top: tooltipPosition.y - 10,\n            transform: 'translateY(-100%)'\n          }}\n        >\n          <div className=\"text-sm font-semibold text-gray-900 dark:text-gray-100 mb-2\">\n            Estimated ROAS Calculation\n          </div>\n          <div className=\"space-y-1 text-xs\">\n            <div className=\"text-gray-700 dark:text-gray-300\">\n              Original Est. Revenue: {formatCurrency(estimatedRevenue)}\n            </div>\n            {diffPercent > 0 && (\n              <>\n                <div className=\"text-gray-700 dark:text-gray-300\">\n                  Trial Accuracy Ratio: {formatPercentage(diffPercent)} (Mixpanel/Meta)\n                </div>\n                <div className=\"text-gray-700 dark:text-gray-300\">\n                  Adjusted Revenue: {formatCurrency(adjustedRevenue)}\n                </div>\n                <div className=\"text-gray-500 dark:text-gray-400 text-xs italic\">\n                  (Revenue ÷ {formatPercentage(diffPercent)} to account for Meta accuracy)\n                </div>\n              </>\n            )}\n            <div className=\"text-gray-700 dark:text-gray-300\">\n              Spend: {formatCurrency(spend)}\n            </div>\n            <div className=\"border-t border-gray-200 dark:border-gray-600 mt-2 pt-2 font-medium\">\n              Est. ROAS: {formatCurrency(adjustedRevenue)} ÷ {formatCurrency(spend)} = {formatNumber(roas, 2)}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Accuracy Tooltip Component\nconst AccuracyTooltip = ({ average, breakdown, colorClass, pipelineUpdatedClass }) => {\n  const [showTooltip, setShowTooltip] = useState(false);\n  const [tooltipPosition, setTooltipPosition] = useState({ x: 0, y: 0 });\n  const ref = useRef(null);\n\n  const handleMouseEnter = (e) => {\n    setShowTooltip(true);\n    // Position tooltip relative to the cell\n    const rect = e.currentTarget.getBoundingClientRect();\n    setTooltipPosition({\n      x: rect.left + rect.width / 2,\n      y: rect.top - 10\n    });\n  };\n\n  const handleMouseLeave = () => {\n    setShowTooltip(false);\n  };\n\n  // Get color for accuracy level\n  const getAccuracyColor = (level) => {\n    switch (level.toLowerCase()) {\n      case 'very_high': return 'text-green-700';\n      case 'high': return 'text-green-600';\n      case 'medium': return 'text-yellow-600';\n      case 'low': return 'text-orange-600';\n      case 'very_low': return 'text-red-600';\n      default: return 'text-gray-600';\n    }\n  };\n\n  const formatLevelName = (level) => {\n    return level.split('_').map(word => \n      word.charAt(0).toUpperCase() + word.slice(1)\n    ).join(' ');\n  };\n\n  return (\n    <div className=\"relative\">\n      <span \n        ref={ref}\n        className={`${colorClass} ${pipelineUpdatedClass} cursor-pointer hover:underline`}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        {average}\n      </span>\n      \n      {showTooltip && (\n        <div \n          className=\"fixed z-50 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-md shadow-lg p-3 min-w-48\"\n          style={{\n            left: tooltipPosition.x - 96, // Center the tooltip (half of min-width)\n            top: tooltipPosition.y - 10,\n            transform: 'translateY(-100%)'\n          }}\n        >\n          <div className=\"text-sm font-semibold text-gray-900 dark:text-gray-100 mb-2\">\n            Accuracy Breakdown\n          </div>\n          <div className=\"space-y-1\">\n            {Object.entries(breakdown)\n              .sort(([,a], [,b]) => b.percentage - a.percentage) // Sort by percentage desc\n              .map(([level, data]) => (\n                <div key={level} className=\"flex justify-between items-center text-xs\">\n                  <span className={`${getAccuracyColor(level)} font-medium`}>\n                    {formatLevelName(level)}:\n                  </span>\n                  <span className=\"text-gray-700 dark:text-gray-300\">\n                    {data.count} ({data.percentage}%)\n                  </span>\n                </div>\n              ))}\n          </div>\n          <div className=\"border-t border-gray-200 dark:border-gray-600 mt-2 pt-2 text-xs text-gray-600 dark:text-gray-400\">\n            Total Users: {Object.values(breakdown).reduce((sum, data) => sum + data.count, 0)}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Refund Rate Tooltip Component for showing minimum default explanations\nconst RefundRateTooltip = ({ value, type, colorClass, pipelineUpdatedClass }) => {\n  const [showTooltip, setShowTooltip] = useState(false);\n  const [tooltipPosition, setTooltipPosition] = useState({ x: 0, y: 0 });\n  \n  const isMinimum = type === 'trial' ? Math.abs(value - 5.0) < 0.01 : Math.abs(value - 15.0) < 0.01;\n  const minimumRate = type === 'trial' ? '5%' : '15%';\n  \n  if (!isMinimum) return null; // Only show tooltip for minimum values\n\n  const handleMouseEnter = (e) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    setTooltipPosition({\n      x: rect.left + rect.width / 2,\n      y: rect.top - 10\n    });\n    setShowTooltip(true);\n  };\n\n  const handleMouseLeave = () => {\n    setShowTooltip(false);\n  };\n\n  return (\n    <>\n      <span\n        className={`${colorClass} ${pipelineUpdatedClass} cursor-help`}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        *\n      </span>\n      {showTooltip && (\n        <div\n          className=\"fixed z-50 bg-gray-900 text-white text-xs rounded px-2 py-1 max-w-xs\"\n          style={{\n            left: tooltipPosition.x,\n            top: tooltipPosition.y,\n            transform: 'translateX(-50%) translateY(-100%)'\n          }}\n        >\n          <div className=\"text-center\">\n            <div className=\"font-medium\">Default Minimum Applied</div>\n            <div className=\"mt-1\">\n              This rate defaulted to {minimumRate} because either there weren't enough users \n              or the calculated rate was lower. We use this minimum to ensure reliable estimates.\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\n// Helper to format numbers, e.g., with commas\nconst formatNumber = (num, digits = 0) => {\n  if (num === undefined || num === null) return 'N/A';\n  return num.toLocaleString(undefined, { minimumFractionDigits: digits, maximumFractionDigits: digits });\n};\n\nconst formatCurrency = (num) => {\n  if (num === undefined || num === null) return 'N/A';\n  return num.toLocaleString(undefined, { style: 'currency', currency: 'USD' });\n};\n\nconst formatPercentage = (num, digits = 2) => {\n  if (num === undefined || num === null) return 'N/A';\n  return `${(num * 100).toFixed(digits)}%`;\n};\n\n// Column categorization for event priority styling based on actual dashboard columns:\n// TRIAL columns: \"Trials (Meta)\", \"Trials (Mixpanel)\", etc.\nconst TRIAL_RELATED_COLUMNS = [\n  'mixpanel_trials_started',    // \"Trials (Mixpanel)\" \n  'meta_trials_started',        // \"Trials (Meta)\"\n  'mixpanel_trials_ended',      // \"Trials Ended (Mixpanel)\"\n  'mixpanel_trials_in_progress', // \"Trials In Progress (Mixpanel)\"  \n  'click_to_trial_rate',        // \"Click to Trial Rate\"\n  'mixpanel_cost_per_trial',    // \"Cost per Trial (Mixpanel)\"\n  'meta_cost_per_trial',        // \"Cost per Trial (Meta)\"\n  'trial_conversion_rate',      // \"Trial Conversion Rate\" (rate of trials converting to purchases)\n  'avg_trial_refund_rate',      // \"Trial Refund Rate\" (rate of trial conversions that get refunded)\n  'trial_accuracy_ratio'        // \"Trial Accuracy Ratio\"\n];\n\n// PURCHASE columns: \"Purchases (Meta)\", \"Purchases (Mixpanel)\", etc.\nconst PURCHASE_RELATED_COLUMNS = [\n  'mixpanel_purchases',         // \"Purchases (Mixpanel)\"\n  'meta_purchases',             // \"Purchases (Meta)\"  \n  'mixpanel_cost_per_purchase', // \"Cost per Purchase (Mixpanel)\"\n  'meta_cost_per_purchase',     // \"Cost per Purchase (Meta)\"\n  'purchase_refund_rate',       // \"Purchase Refund Rate\"\n  'purchase_accuracy_ratio',    // \"Purchase Accuracy Ratio\"\n  'mixpanel_conversions_net_refunds', // \"Net Conversions (Mixpanel)\"\n  'estimated_revenue_usd',      // \"Estimated Revenue\"\n  'mixpanel_revenue_usd',       // \"Revenue (Mixpanel)\"\n  'mixpanel_refunds_usd',       // \"Refunds (Mixpanel)\"\n  'profit',                     // \"Profit\"\n  'estimated_roas'              // \"ROAS\"\n];\n\n// Helper to determine event priority based on Mixpanel counts\n// Compares \"Trial Started by Mixpanel\" vs \"Purchases in Mixpanel\" \nconst getEventPriority = (row) => {\n  // Compares \"Trial Started by Mixpanel\" vs \"Purchases in Mixpanel\"\n  const trialsCount = row.mixpanel_trials_started || 0;    // \"Trial Started by Mixpanel\"\n  const purchasesCount = row.mixpanel_purchases || 0;      // \"Purchases in Mixpanel\"\n  \n  // When both are zero, default to graying out purchase columns (make trials the priority)\n  if (trialsCount === 0 && purchasesCount === 0) return 'trials';\n  \n  // When trials > purchases, gray out purchase columns (trials are priority)\n  if (trialsCount > purchasesCount) return 'trials';\n  \n  // When purchases > trials, gray out trial columns (purchases are priority)  \n  if (purchasesCount > trialsCount) return 'purchases';\n  \n  // If they're equal and both > 0, no graying out\n  return 'equal';\n};\n\n// Helper to check if a column should be grayed out based on event priority\nconst shouldGrayOutColumn = (columnKey, eventPriority) => {\n  if (eventPriority === 'equal') return false;\n  \n  // When trials are priority, gray out purchase-related columns\n  if (eventPriority === 'trials' && PURCHASE_RELATED_COLUMNS.includes(columnKey)) {\n    return true;\n  }\n  \n  // When purchases are priority, gray out trial-related columns\n  if (eventPriority === 'purchases' && TRIAL_RELATED_COLUMNS.includes(columnKey)) {\n    return true;\n  }\n  \n  return false;\n};\n\n// Helper to get column type for visual differentiation\nconst getColumnType = (columnKey) => {\n  if (TRIAL_RELATED_COLUMNS.includes(columnKey)) return 'trial';\n  if (PURCHASE_RELATED_COLUMNS.includes(columnKey)) return 'purchase';\n  return 'neutral';\n};\n\n// Helper to get column background class based on type\nconst getColumnBackgroundClass = (columnKey, isHovered = false) => {\n  const columnType = getColumnType(columnKey);\n  \n  if (isHovered) {\n    // Slightly stronger background on hover\n    switch (columnType) {\n      case 'trial': return 'bg-blue-50 dark:bg-blue-900/20';\n      case 'purchase': return 'bg-green-50 dark:bg-green-900/20';\n      default: return ''; // No special hover background for neutral columns\n    }\n  } else {\n    // Subtle background for visual differentiation\n    switch (columnType) {\n      case 'trial': return 'bg-blue-25 dark:bg-blue-900/10';\n      case 'purchase': return 'bg-green-25 dark:bg-green-900/10';\n      default: return ''; // No background for neutral columns - normal grey\n    }\n  }\n};\n\n// Helper to calculate derived values for missing fields\nconst calculateDerivedValues = (row) => {\n  const calculated = { ...row };\n  \n  // Calculate new fields that don't exist in the data\n  if (calculated.spend && calculated.total_trials_started && calculated.total_trials_started > 0) {\n    calculated.cost_per_trial_mixpanel = calculated.spend / calculated.total_trials_started;\n  }\n  \n  if (calculated.spend && calculated.total_conversions && calculated.total_conversions > 0) {\n    calculated.cost_per_purchase_mixpanel = calculated.spend / calculated.total_conversions;\n  }\n  \n  // Trial conversion difference percentage (what percent Mixpanel trials are of Meta trials)\n  if (calculated.meta_trials_started && calculated.total_trials_started && calculated.meta_trials_started > 0) {\n    calculated.trial_conversion_diff_pct = calculated.total_trials_started / calculated.meta_trials_started;\n  }\n  \n  // Profit calculation (Revenue - Spend)\n  if (calculated.revenue_usd !== undefined && calculated.spend !== undefined) {\n    calculated.profit = calculated.revenue_usd - calculated.spend;\n  }\n  \n  // Estimated ROAS calculation (adjusted for Meta vs Mixpanel trial difference)\n  if (calculated.estimated_revenue_usd !== undefined && calculated.spend !== undefined && calculated.spend > 0) {\n    if (calculated.trial_conversion_diff_pct && calculated.trial_conversion_diff_pct > 0) {\n      // Adjust estimated revenue by dividing by the percentage (to scale up for Meta accuracy)\n      const adjustedRevenue = calculated.estimated_revenue_usd / calculated.trial_conversion_diff_pct;\n      calculated.estimated_roas = adjustedRevenue / calculated.spend;\n    } else {\n      // Fallback to standard calculation if no diff percentage available\n      calculated.estimated_roas = calculated.estimated_revenue_usd / calculated.spend;\n    }\n  }\n  \n  return calculated;\n};\n\n// Field color - use normal text colors\nconst getFieldColor = (fieldName, value) => {\n  // Special color coding for accuracy column\n  if (fieldName === 'average_accuracy' && value) {\n    switch (value.toLowerCase()) {\n      case 'very high': return 'text-green-700 dark:text-green-400';\n      case 'high': return 'text-green-600 dark:text-green-400';\n      case 'medium': return 'text-yellow-600 dark:text-yellow-400';\n      case 'low': return 'text-orange-600 dark:text-orange-400';\n      case 'very low': return 'text-red-600 dark:text-red-400';\n      default: return 'text-gray-600 dark:text-gray-400';\n    }\n  }\n  // Use standard text colors for all other fields\n  return 'text-gray-900 dark:text-gray-100';\n};\n\n// Header color - use normal text colors\nconst getHeaderColor = (fieldName) => {\n  // Use standard header colors for all fields\n  return 'text-gray-700 dark:text-gray-300';\n};\n\n// ROAS color thresholds: <1 = Red, 1 = Yellow, >1.5 = Green\nconst roas_green_threshold = 1.5;\nconst roas_yellow_threshold = 1.0;\n\nconst getRoasColor = (roas) => {\n  if (roas === undefined || roas === null) return 'text-gray-500 dark:text-gray-400';\n  if (roas > roas_green_threshold) return 'text-green-600 dark:text-green-400';\n  if (roas >= roas_yellow_threshold) return 'text-amber-600 dark:text-amber-400';\n  return 'text-red-600 dark:text-red-400';\n};\n\nexport const DashboardGrid = ({ \n  data = [], \n  rowOrder = [],\n  onRowOrderChange = null,\n  onRowAction = () => {}, \n  columnVisibility = {}, \n  columnOrder = [],\n  onColumnOrderChange = null,\n  runningPipelines = new Set(),\n  pipelineQueue = [],\n  activePipelineCount = 0,\n  maxConcurrentPipelines = 8,\n  dashboardParams = null\n}) => {\n  const [expandedRows, setExpandedRows] = useState({});\n  const [expandedBreakdowns, setExpandedBreakdowns] = useState({});\n  \n  // Column drag state\n  const [draggedColumn, setDraggedColumn] = useState(null);\n  const [dragOverColumn, setDragOverColumn] = useState(null);\n  \n  // Row drag state\n  const [draggedRowId, setDraggedRowId] = useState(null);\n  const [dragOverRowId, setDragOverRowId] = useState(null);\n\n  // Get visible columns based on columnVisibility settings and column order\n  const getOrderedVisibleColumns = () => {\n    // Use column order if available, otherwise use default order\n    const orderToUse = columnOrder.length > 0 ? columnOrder : AVAILABLE_COLUMNS.map(col => col.key);\n    \n    // Map the ordered keys to column objects, filtering out non-existent columns\n    const orderedColumns = orderToUse\n      .map(key => AVAILABLE_COLUMNS.find(col => col.key === key))\n      .filter(col => col); // Remove any undefined columns\n    \n    // Filter by visibility\n    if (Object.keys(columnVisibility).length === 0) {\n      // If no visibility settings loaded yet, use default visibility\n      return orderedColumns.filter(col => col.defaultVisible);\n    } else {\n      // Use explicit visibility settings\n      return orderedColumns.filter(col => columnVisibility[col.key] !== false);\n    }\n  };\n\n  const visibleColumns = getOrderedVisibleColumns();\n\n  // Helper function to check if a column should be visible\n  const isColumnVisible = (columnKey) => {\n    if (Object.keys(columnVisibility).length === 0) {\n      // If no visibility settings loaded yet, check default\n      const column = AVAILABLE_COLUMNS.find(col => col.key === columnKey);\n      return column ? column.defaultVisible : false;\n    }\n    return columnVisibility[columnKey] !== false;\n  };\n\n  // Helper function to check if a pipeline is running for a specific row\n  const isPipelineRunning = (rowId) => {\n    return runningPipelines.has(rowId);\n  };\n\n  // Helper function to check if a pipeline is queued for a specific row\n  const isPipelineQueued = (rowId) => {\n    return pipelineQueue.some(item => item.id === rowId);\n  };\n\n  // Helper function to get pipeline status\n  const getPipelineStatus = (rowId) => {\n    if (isPipelineRunning(rowId)) return 'running';\n    if (isPipelineQueued(rowId)) return 'queued';\n    return 'idle';\n  };\n\n  // Helper function to render a cell value with proper formatting and coloring\n  const renderCellValue = (row, columnKey, isPipelineUpdated = false, eventPriority = null) => {\n    const calculatedRow = calculateDerivedValues(row);\n    let value = calculatedRow[columnKey];\n    let formattedValue = 'N/A';\n    let isEstimated = false;\n\n    // Format values based on column type\n    switch (columnKey) {\n      case 'spend':\n      case 'mixpanel_revenue_usd':\n      case 'estimated_revenue_usd':\n      case 'mixpanel_refunds_usd':\n      case 'profit':\n      case 'mixpanel_cost_per_trial':\n      case 'mixpanel_cost_per_purchase':\n      case 'meta_cost_per_trial':\n      case 'meta_cost_per_purchase':\n        formattedValue = formatCurrency(value);\n        break;\n      case 'impressions':\n      case 'clicks':\n      case 'mixpanel_trials_started':\n      case 'meta_trials_started':\n      case 'mixpanel_trials_ended':\n      case 'mixpanel_trials_in_progress':\n      case 'mixpanel_purchases':\n      case 'meta_purchases':\n      case 'mixpanel_converted_amount':\n      case 'mixpanel_conversions_net_refunds':\n      case 'total_attributed_users':\n        formattedValue = formatNumber(value);\n        break;\n      case 'click_to_trial_rate':\n      case 'trial_conversion_rate':\n      case 'trial_accuracy_ratio':\n      case 'purchase_accuracy_ratio':\n        formattedValue = value !== undefined && value !== null ? `${formatNumber(value, 2)}%` : 'N/A';\n        break;\n      case 'avg_trial_refund_rate':\n        if (value !== undefined && value !== null) {\n          const roundedValue = formatNumber(value, 2);\n          const hasMinimumFlag = Math.abs(value - 5.0) < 0.01;\n          formattedValue = (\n            <span>\n              {roundedValue}%\n              {hasMinimumFlag && (\n                <RefundRateTooltip \n                  value={value} \n                  type=\"trial\" \n                  colorClass=\"text-blue-500\" \n                  pipelineUpdatedClass=\"\" \n                />\n              )}\n            </span>\n          );\n        } else {\n          formattedValue = 'N/A';\n        }\n        break;\n      case 'purchase_refund_rate':\n        if (value !== undefined && value !== null) {\n          const roundedValue = formatNumber(value, 2);\n          const hasMinimumFlag = Math.abs(value - 15.0) < 0.01;\n          formattedValue = (\n            <span>\n              {roundedValue}%\n              {hasMinimumFlag && (\n                <RefundRateTooltip \n                  value={value} \n                  type=\"purchase\" \n                  colorClass=\"text-orange-500\" \n                  pipelineUpdatedClass=\"\" \n                />\n              )}\n            </span>\n          );\n        } else {\n          formattedValue = 'N/A';\n        }\n        break;\n      case 'estimated_roas':\n        formattedValue = formatNumber(value, 2);\n        break;\n      case 'segment_accuracy_average':\n        formattedValue = value || 'N/A';\n        break;\n      default:\n        formattedValue = value || 'N/A';\n    }\n\n    // Apply special styling for ROAS columns\n    let colorClass = getFieldColor(columnKey, value);\n    if (columnKey === 'estimated_roas') {\n      colorClass = getRoasColor(value);\n    }\n\n    // Check if this column should be grayed out based on event priority\n    if (eventPriority && shouldGrayOutColumn(columnKey, eventPriority)) {\n      colorClass = 'text-gray-500 dark:text-gray-500';\n    }\n\n    // Add pipeline update styling for key metrics\n    const pipelineUpdatedClass = isPipelineUpdated && \n      ['mixpanel_purchases', 'mixpanel_revenue_usd', 'estimated_revenue_usd', 'estimated_roas', 'mixpanel_trials_started', 'mixpanel_refunds_usd', 'segment_accuracy_average'].includes(columnKey) \n        ? 'font-bold text-green-600 dark:text-green-400' : '';\n\n    // Special rendering for accuracy column with tooltip\n    if (columnKey === 'segment_accuracy_average' && row.accuracy_breakdown) {\n      return (\n        <AccuracyTooltip \n          average={formattedValue}\n          breakdown={row.accuracy_breakdown}\n          colorClass={colorClass}\n          pipelineUpdatedClass={pipelineUpdatedClass}\n        />\n      );\n    }\n\n    // Special rendering for estimated ROAS column with sparkline\n    if (columnKey === 'estimated_roas') {\n      // Extract the actual ID from the row.id field (format: \"campaign_123\", \"adset_456\", \"ad_789\")\n      const entityId = row.id ? row.id.split('_')[1] : null;\n      \n      return (\n        <ROASSparkline \n          entityType={row.type}\n          entityId={entityId}\n          currentROAS={value}\n          conversionCount={calculatedRow.mixpanel_purchases || 0}\n          breakdown={dashboardParams?.breakdown || 'all'}\n          startDate={dashboardParams?.start_date || '2025-04-01'}\n          endDate={dashboardParams?.end_date || '2025-04-10'}\n        />\n      );\n    }\n\n    return (\n      <span className={`${colorClass} ${pipelineUpdatedClass}`}>\n        {formattedValue}\n        {isEstimated && <span className=\"ml-1 text-xs\">*</span>}\n      </span>\n    );\n  };\n\n  // Simple column drag handlers\n  const handleColumnDragStart = (e, columnKey) => {\n    setDraggedColumn(columnKey);\n    e.dataTransfer.effectAllowed = 'move';\n    e.dataTransfer.setData('text/plain', columnKey);\n    \n    // Add visual feedback\n    e.target.style.opacity = '0.5';\n  };\n\n  const handleColumnDragOver = (e) => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n  };\n\n  const handleColumnDragEnter = (e, columnKey) => {\n    e.preventDefault();\n    if (draggedColumn && draggedColumn !== columnKey) {\n      setDragOverColumn(columnKey);\n    }\n  };\n\n  const handleColumnDragLeave = (e) => {\n    e.preventDefault();\n    // Only clear if we're actually leaving the column\n    if (!e.currentTarget.contains(e.relatedTarget)) {\n      setDragOverColumn(null);\n    }\n  };\n\n  const handleColumnDrop = (e, targetColumnKey) => {\n    e.preventDefault();\n    \n    if (!draggedColumn || draggedColumn === targetColumnKey) {\n      handleColumnDragEnd(e);\n      return;\n    }\n\n    // Get the visible columns order\n    const visibleColumnKeys = visibleColumns.slice(1).map(col => col.key);\n    const draggedIndex = visibleColumnKeys.indexOf(draggedColumn);\n    const targetIndex = visibleColumnKeys.indexOf(targetColumnKey);\n    \n    if (draggedIndex === -1 || targetIndex === -1) {\n      handleColumnDragEnd(e);\n      return;\n    }\n\n    // Create new visible order\n    const newVisibleOrder = [...visibleColumnKeys];\n    const [movedColumn] = newVisibleOrder.splice(draggedIndex, 1);\n    newVisibleOrder.splice(targetIndex, 0, movedColumn);\n    \n    // Reconstruct full column order\n    const fullOrder = columnOrder.length > 0 ? [...columnOrder] : AVAILABLE_COLUMNS.map(col => col.key);\n    const newFullOrder = ['name']; // Always keep name first\n    \n    // Add the reordered visible columns\n    newVisibleOrder.forEach(key => {\n      if (!newFullOrder.includes(key)) {\n        newFullOrder.push(key);\n      }\n    });\n    \n    // Add any remaining columns that aren't visible\n    fullOrder.forEach(key => {\n      if (!newFullOrder.includes(key)) {\n        newFullOrder.push(key);\n      }\n    });\n    \n    console.log('🔄 Column drag reorder:', {\n      dragged: draggedColumn,\n      target: targetColumnKey,\n      newOrder: newFullOrder\n    });\n    \n    if (onColumnOrderChange) {\n      onColumnOrderChange(newFullOrder);\n    }\n    \n    handleColumnDragEnd(e);\n  };\n\n  const handleColumnDragEnd = (e) => {\n    // Reset visual feedback\n    if (e.target) {\n      e.target.style.opacity = '';\n    }\n    setDraggedColumn(null);\n    setDragOverColumn(null);\n  };\n\n\n\n  // Row drag handlers\n  const handleRowDragStart = (e, id) => {\n    setDraggedRowId(id);\n    e.dataTransfer.effectAllowed = 'move';\n    e.dataTransfer.setDragImage(new Image(), 0, 0); // hide ghost for cleaner UX\n  };\n\n  const handleRowDragEnter = (e, id) => {\n    e.preventDefault();\n    if (id !== dragOverRowId) setDragOverRowId(id);\n  };\n\n  const handleRowDrop = (e, targetId) => {\n    e.preventDefault();\n    if (!draggedRowId || draggedRowId === targetId) return;\n\n    const newOrder = [...rowOrder];\n    const from = newOrder.indexOf(draggedRowId);\n    const to = newOrder.indexOf(targetId);\n    newOrder.splice(to, 0, newOrder.splice(from, 1)[0]);\n\n    onRowOrderChange?.(newOrder);\n    cleanupRowDrag();\n  };\n\n  const handleRowDragEnd = cleanupRowDrag;\n\n  function cleanupRowDrag() {\n    setDraggedRowId(null);\n    setDragOverRowId(null);\n  }\n\n  const toggleExpand = (id) => {\n    setExpandedRows(prev => ({ ...prev, [id]: !prev[id] }));\n  };\n\n  const toggleBreakdown = (id) => {\n    setExpandedBreakdowns(prev => ({ ...prev, [id]: !prev[id] }));\n  };\n\n  const expandAllRows = () => {\n    const newExpandedRows = {};\n    const processRows = (rows) => {\n      rows.forEach(row => {\n        newExpandedRows[row.id] = true;\n        if (row.children) {\n          processRows(row.children);\n        }\n      });\n    };\n    processRows(data);\n    setExpandedRows(newExpandedRows);\n  };\n\n  const collapseAllRows = () => {\n    setExpandedRows({});\n  };\n\n  const expandAllBreakdowns = () => {\n    const newExpandedBreakdowns = {};\n    const processRows = (rows) => {\n      rows.forEach(row => {\n        if (row.breakdowns && row.breakdowns.length > 0) {\n          newExpandedBreakdowns[row.id] = true;\n        }\n        if (row.children) {\n          processRows(row.children);\n        }\n      });\n    };\n    processRows(data);\n    setExpandedBreakdowns(newExpandedBreakdowns);\n  };\n\n  const collapseAllBreakdowns = () => {\n    setExpandedBreakdowns({});\n  };\n\n  const renderAllBreakdownRows = (row, level) => {\n    const breakdownNodes = [];\n    \n    if (!row.breakdowns) return breakdownNodes;\n    \n    row.breakdowns.forEach(breakdown => {\n      breakdownNodes.push(\n        <tr key={`${row.id}-${breakdown.type}-header`} className=\"border-b border-gray-200 dark:border-gray-700 bg-gray-50/50 dark:bg-gray-900/50\">\n          <td className=\"sticky left-0 px-3 py-1 whitespace-nowrap bg-gray-50/50 dark:bg-gray-900/50 z-10\">\n            <div className=\"flex items-center\">\n              <span className=\"opacity-0 w-8\"></span> {/* Space for chart/info icons */}\n              <span style={{ paddingLeft: `${(level + 1) * 20}px` }} className=\"text-xs font-medium text-gray-500 dark:text-gray-400\">\n                {breakdown.type.charAt(0).toUpperCase() + breakdown.type.slice(1)}\n              </span>\n            </div>\n          </td>\n          {visibleColumns.slice(1).map((column) => (\n            <td key={column.key} colSpan={1}></td>\n          ))}\n        </tr>\n      );\n\n      breakdown.values.forEach((value, index) => {\n        const calculatedValue = calculateDerivedValues(value);\n        breakdownNodes.push(\n          <tr key={`${row.id}-${breakdown.type}-${index}`} className=\"border-b border-gray-200 dark:border-gray-700 bg-gray-50/30 dark:bg-gray-900/30 text-xs\">\n            <td className=\"sticky left-0 px-3 py-1 whitespace-nowrap bg-gray-50/30 dark:bg-gray-900/30 z-10\">\n              <div className=\"flex items-center\">\n                <span className=\"opacity-0 w-8\"></span> {/* Space for chart/info icons */}\n                <span style={{ paddingLeft: `${(level + 1) * 20 + 12}px` }} className=\"text-gray-500 italic\">\n                  {value.name}\n                </span>\n              </div>\n            </td>\n            {visibleColumns.slice(1).map((column) => {\n              if (column.key === 'campaign_name' || column.key === 'adset_name') {\n                return <td key={column.key} className=\"px-3 py-1\"></td>;\n              }\n              return (\n                <td key={column.key} className=\"px-3 py-1 whitespace-nowrap text-right\">\n                  {renderCellValue(calculatedValue, column.key, false, getEventPriority(calculatedValue))}\n                </td>\n              );\n            })}\n          </tr>\n        );\n      });\n    });\n    \n    return breakdownNodes;\n  };\n\n  const renderRow = (row, level) => {\n    const isExpanded = !!expandedRows[row.id];\n    const isBreakdownExpanded = !!expandedBreakdowns[row.id];\n    const rowNodes = [];\n\n    // Check if this row has been updated with pipeline data\n    const isPipelineUpdated = row._pipelineUpdated;\n    const pipelineTimestamp = row._pipelineTimestamp;\n\n    const calculatedRow = calculateDerivedValues(row);\n\n    // Determine event priority\n    const eventPriority = getEventPriority(row);\n\n    rowNodes.push(\n      <tr \n        key={row.id} \n        draggable={level === 0}\n        onDragStart={e => handleRowDragStart(e, row.id)}\n        onDragEnter={e => handleRowDragEnter(e, row.id)}\n        onDragOver={e => e.preventDefault()}\n        onDrop={e => handleRowDrop(e, row.id)}\n        onDragEnd={handleRowDragEnd}\n        className={`border-b border-gray-200 dark:border-gray-700 ${\n        level === 0 \n          ? 'bg-gray-50 dark:bg-gray-800 font-semibold' \n          : level === 1 \n            ? 'bg-white dark:bg-gray-700 text-gray-800 dark:text-gray-200' \n            : 'bg-gray-100 dark:bg-gray-600 text-gray-800 dark:text-gray-200'\n      } ${(isPipelineUpdated || row._pipelineUpdated) ? 'ring-2 ring-green-400 bg-green-50 dark:bg-green-900/20' : ''} ${draggedRowId === row.id ? 'opacity-50' : ''} ${dragOverRowId === row.id && draggedRowId !== row.id ? 'ring-2 ring-blue-400' : ''}`}>\n        \n        {/* Name column - always visible */}\n        <td className={`sticky left-0 px-3 py-2 whitespace-nowrap z-10 ${\n          level === 0 \n            ? ((isPipelineUpdated || row._pipelineUpdated) ? 'bg-green-50 dark:bg-green-900/20' : 'bg-gray-50 dark:bg-gray-800')\n            : level === 1 \n              ? ((isPipelineUpdated || row._pipelineUpdated) ? 'bg-green-50 dark:bg-green-900/20' : 'bg-white dark:bg-gray-700')\n              : ((isPipelineUpdated || row._pipelineUpdated) ? 'bg-green-50 dark:bg-green-900/20' : 'bg-gray-100 dark:bg-gray-600')\n        }`}>\n          <div className=\"flex items-center\">\n            <button onClick={() => onRowAction('graph', row)} className=\"mr-2 p-1 hover:text-blue-500\" title=\"View Chart\"><BarChart2 size={16} /></button>\n            <button onClick={() => onRowAction('debug', row)} className=\"mr-2 p-1 hover:text-orange-500\" title=\"Debug Info\"><Info size={16} /></button>\n            <button \n              onClick={() => onRowAction('pipeline', row)} \n              disabled={isPipelineRunning(row.id) || isPipelineQueued(row.id)}\n              className={`mr-2 p-1 ${\n                isPipelineRunning(row.id) ? 'text-green-500 cursor-not-allowed' : \n                isPipelineQueued(row.id) ? 'text-yellow-500 cursor-not-allowed' : \n                'hover:text-green-500'\n              }`} \n              title={\n                isPipelineRunning(row.id) ? 'Pipeline Running...' : \n                isPipelineQueued(row.id) ? 'Pipeline Queued...' : \n                'Run Pipeline'\n              }\n            >\n              {isPipelineRunning(row.id) ? (\n                <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-green-500\"></div>\n              ) : isPipelineQueued(row.id) ? (\n                <div className=\"animate-pulse rounded-full h-4 w-4 border-2 border-yellow-500 bg-yellow-200\"></div>\n              ) : (\n                <Play size={16} />\n              )}\n            </button>\n            <button onClick={() => onRowAction('timeline', row)} className=\"mr-2 p-1 hover:text-purple-500\" title=\"View Timeline\"><Clock size={16} /></button>\n            <span className=\"flex items-center\">\n              <span style={{ paddingLeft: `${level * 20}px` }}>\n                {row.children && row.children.length > 0 ? (\n                  <button onClick={() => toggleExpand(row.id)} className=\"mr-1 p-1\">\n                    {isExpanded ? <ChevronDown size={16} /> : <ChevronRight size={16} />}\n                  </button>\n                ) : (\n                  <span className=\"inline-block w-8\"></span>\n                )}\n              </span>\n              \n              {row.breakdowns && row.breakdowns.length > 0 && (\n                <button \n                  onClick={() => toggleBreakdown(row.id)} \n                  className={`mr-2 p-1 rounded ${isBreakdownExpanded ? 'text-blue-500 bg-blue-100 dark:bg-blue-900/30' : 'text-gray-400 hover:text-blue-400'}`}\n                  title=\"Toggle breakdowns\"\n                >\n                  <Search size={14} />\n                </button>\n              )}\n              \n              {/* Pipeline update indicator */}\n              {(isPipelineUpdated || row._pipelineUpdated) && (\n                <PipelineBadge \n                  isPipelineUpdated={true} \n                  className=\"mr-2\" \n                />\n              )}\n              \n              {/* Pipeline running indicator */}\n              {isPipelineRunning(row.id) && (\n                <span className=\"mr-2 px-2 py-1 bg-blue-100 dark:bg-blue-800 text-blue-800 dark:text-blue-200 text-xs rounded-full animate-pulse\">\n                  🔄 Running\n                </span>\n              )}\n              \n              {/* Pipeline queued indicator */}\n              {isPipelineQueued(row.id) && (\n                <span className=\"mr-2 px-2 py-1 bg-yellow-100 dark:bg-yellow-800 text-yellow-800 dark:text-yellow-200 text-xs rounded-full animate-pulse\">\n                  ⏳ Queued\n                </span>\n              )}\n              \n              <span className={`${level === 0 ? 'text-gray-900 dark:text-gray-100' : level === 1 ? 'text-gray-800 dark:text-gray-200' : 'text-gray-700 dark:text-gray-100'}`}>\n                {level === 0 \n                  ? (row.name || row.campaign_name)\n                  : level === 1 \n                    ? (row.name || row.adset_name)\n                    : (row.name || row.ad_name)\n                }\n              </span>\n            </span>\n          </div>\n        </td>\n\n        {/* Dynamic columns based on visibility */}\n        {visibleColumns.slice(1).map((column) => {\n          // Special handling for campaign/adset name columns based on level\n          if (column.key === 'campaign_name') {\n            if (level > 0) {\n              return <td key={column.key} className=\"px-3 py-2 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">{row.campaign_name}</td>;\n            } else {\n              return <td key={column.key} className=\"px-3 py-2\"></td>;\n            }\n          }\n          \n          if (column.key === 'adset_name') {\n            if (level > 1) {\n              return <td key={column.key} className=\"px-3 py-2 whitespace-nowrap text-sm text-gray-600 dark:text-gray-300\">{row.adset_name}</td>;\n            } else {\n              return <td key={column.key} className=\"px-3 py-2\"></td>;\n            }\n          }\n\n          // Regular data columns\n          const fieldColor = getFieldColor(column.key, calculatedRow[column.key]);\n          const isRoasColumn = column.key === 'roas' || column.key === 'estimated_roas';\n          const roasColor = isRoasColumn ? getRoasColor(calculatedRow[column.key]) : '';\n          const finalColor = isRoasColumn ? roasColor : fieldColor;\n          \n          const pipelineHighlight = (isPipelineUpdated || row._pipelineUpdated) && \n            ['total_conversions', 'revenue_usd', 'estimated_conversions', 'estimated_revenue_usd', 'roas', 'estimated_roas', 'total_trials_started', 'total_refunds_usd', 'total_converted_amount_mixpanel', 'mixpanel_trials', 'mixpanel_purchases', 'estimated_roas', 'profit'].includes(column.key) \n              ? 'font-bold text-green-600 dark:text-green-400' : '';\n\n          // Check if the column should be grayed out based on event priority\n          const shouldGrayOut = shouldGrayOutColumn(column.key, eventPriority);\n          const grayedOutColor = shouldGrayOut ? 'text-gray-500 dark:text-gray-500' : finalColor;\n\n          // Get column background class for visual differentiation\n          const columnBackgroundClass = getColumnBackgroundClass(column.key);\n\n                      return (\n              <td key={column.key} className={`px-3 py-2 whitespace-nowrap text-right ${grayedOutColor} ${pipelineHighlight} ${isRoasColumn ? 'font-medium' : ''} ${columnBackgroundClass}`}>\n                {renderCellValue(calculatedRow, column.key, isPipelineUpdated, eventPriority)}\n              </td>\n            );\n        })}\n      </tr>\n    );\n\n    if (isBreakdownExpanded && row.breakdowns) {\n      rowNodes.push(...renderAllBreakdownRows(row, level));\n    }\n\n    if (isExpanded && row.children) {\n      row.children.forEach(childRow => {\n        rowNodes.push(...renderRow(childRow, level + 1));\n      });\n    }\n    return rowNodes;\n  };\n\n  if (!data || data.length === 0) {\n    return <div className=\"p-4 text-center text-gray-500 dark:text-gray-400\">No data available.</div>;\n  }\n\n  const orderedData = rowOrder.length\n    ? rowOrder.map(id => data.find(r => r.id === id)).filter(Boolean)\n    : data;\n\n  const allRows = orderedData.reduce(\n    (acc, campaign) => acc.concat(renderRow(campaign, 0)),\n    []\n  );\n\n  return (\n    <div className=\"shadow-soft rounded-2xl\">\n      <div className=\"bg-white dark:bg-gray-800 px-4 py-2 flex space-x-4 border-b border-gray-200 dark:border-gray-700\">\n        <div className=\"inline-flex rounded-md shadow-sm\">\n          <button \n            onClick={expandAllRows} \n            className=\"px-3 py-1.5 text-xs font-medium bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-200 rounded-l-lg border border-gray-300 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600 flex items-center\"\n          >\n            <Layers size={14} className=\"mr-1\" /> Expand All\n          </button>\n          <button \n            onClick={collapseAllRows} \n            className=\"px-3 py-1.5 text-xs font-medium bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-200 rounded-r-lg border border-l-0 border-gray-300 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600 flex items-center\"\n          >\n            <Table2 size={14} className=\"mr-1\" /> Collapse All\n          </button>\n        </div>\n        \n        <div className=\"inline-flex rounded-md shadow-sm\">\n          <button \n            onClick={expandAllBreakdowns} \n            className=\"px-3 py-1.5 text-xs font-medium bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-200 rounded-l-lg border border-gray-300 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600 flex items-center\"\n          >\n            <Search size={14} className=\"mr-1\" /> Show Breakdowns\n          </button>\n          <button \n            onClick={collapseAllBreakdowns} \n            className=\"px-3 py-1.5 text-xs font-medium bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-200 rounded-r-lg border border-l-0 border-gray-300 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600 flex items-center\"\n          >\n            <AlignJustify size={14} className=\"mr-1\" /> Hide Breakdowns\n          </button>\n        </div>\n\n\n\n        {/* Pipeline Status */}\n        <div className=\"flex items-center space-x-4 ml-auto text-xs\">\n          {/* Running Pipelines Counter */}\n          {(runningPipelines.size > 0 || pipelineQueue.length > 0) && (\n            <div className=\"flex items-center space-x-2\">\n              {runningPipelines.size > 0 && (\n                <div className=\"flex items-center bg-blue-100 dark:bg-blue-900 px-2 py-1 rounded-full\">\n                  <div className=\"animate-spin rounded-full h-3 w-3 border-b border-blue-600 dark:border-blue-400 mr-2\"></div>\n                  <span className=\"text-blue-800 dark:text-blue-200 font-medium\">\n                    {runningPipelines.size} active\n                  </span>\n                </div>\n              )}\n              \n              {pipelineQueue.length > 0 && (\n                <div className=\"flex items-center bg-yellow-100 dark:bg-yellow-900 px-2 py-1 rounded-full\">\n                  <div className=\"animate-pulse rounded-full h-3 w-3 bg-yellow-600 dark:bg-yellow-400 mr-2\"></div>\n                  <span className=\"text-yellow-800 dark:text-yellow-200 font-medium\">\n                    {pipelineQueue.length} queued\n                  </span>\n                </div>\n              )}\n              \n              <div className=\"text-gray-500 dark:text-gray-400 text-xs\">\n                ({activePipelineCount}/{maxConcurrentPipelines} concurrent)\n              </div>\n            </div>\n          )}\n          \n          <div className=\"flex items-center\">\n            <span className=\"text-green-600 dark:text-green-400 mr-1\">✨</span>\n            <span className=\"text-gray-600 dark:text-gray-400\">Pipeline Enhanced</span>\n          </div>\n        </div>\n      </div>\n      \n      {/* Table container with proper horizontal scrolling */}\n      <div className=\"overflow-x-auto\">\n        <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700 text-sm\">\n          <thead className=\"bg-gray-100 dark:bg-gray-800\">\n            <tr>\n              {/* Name column - always visible and not draggable */}\n              <th scope=\"col\" className=\"sticky left-0 px-3 py-3 text-left text-xs font-medium uppercase tracking-wider bg-gray-100 dark:bg-gray-800 z-20\">\n                Name\n              </th>\n              \n              {/* Dynamic columns based on visibility - draggable */}\n              {visibleColumns.slice(1).map((column) => {\n                const columnType = getColumnType(column.key);\n                const backgroundClass = getColumnBackgroundClass(column.key, dragOverColumn === column.key);\n                \n                return (\n                  <th \n                    key={column.key} \n                    scope=\"col\"\n                    draggable={!column.alwaysVisible}\n                    onDragStart={(e) => handleColumnDragStart(e, column.key)}\n                    onDragOver={handleColumnDragOver}\n                    onDragEnter={(e) => handleColumnDragEnter(e, column.key)}\n                    onDragLeave={handleColumnDragLeave}\n                    onDrop={(e) => handleColumnDrop(e, column.key)}\n                    onDragEnd={handleColumnDragEnd}\n                    className={`px-3 py-3 text-${column.key === 'campaign_name' || column.key === 'adset_name' ? 'left' : 'right'} text-xs font-medium uppercase tracking-wider ${getHeaderColor(column.key)} ${backgroundClass}\n                      ${!column.alwaysVisible ? 'cursor-move select-none hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors duration-150' : ''} \n                      ${dragOverColumn === column.key && draggedColumn !== column.key ? 'bg-blue-100 dark:bg-blue-900 border-2 border-blue-300 dark:border-blue-600' : ''}\n                      ${columnType === 'trial' ? 'border-l-2 border-blue-200 dark:border-blue-800' : ''}\n                      ${columnType === 'purchase' ? 'border-l-2 border-green-200 dark:border-green-800' : ''}`}\n                    title={!column.alwaysVisible ? `Drag to reorder \"${column.label}\" column` : ''}\n                  >\n                  <div className=\"flex items-center justify-between\">\n                    <span>{column.label}</span>\n                    {!column.alwaysVisible && (\n                      <span className=\"ml-1 text-gray-400 dark:text-gray-500 text-lg leading-none hover:text-gray-600 dark:hover:text-gray-300 transition-colors duration-150\" style={{ transform: 'rotate(90deg)' }}>⋮⋮</span>\n                    )}\n                  </div>\n                </th>\n              );\n              })}\n            </tr>\n          </thead>\n          <tbody className=\"bg-white dark:bg-gray-900 divide-y divide-gray-200 dark:divide-gray-700\">\n            {allRows.map(row => <Fragment key={row.key}>{row}</Fragment>)}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}